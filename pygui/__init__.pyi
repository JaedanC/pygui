from typing import Any, Callable, Tuple, List

VERTEX_BUFFER_POS_OFFSET: int
VERTEX_BUFFER_UV_OFFSET: int
VERTEX_BUFFER_COL_OFFSET: int
VERTEX_SIZE: int
INDEX_SIZE: int

IM_DRAW_FLAGS_NONE: int
IM_DRAW_FLAGS_CLOSED: int
IM_DRAW_FLAGS_ROUND_CORNERS_TOP_LEFT: int
IM_DRAW_FLAGS_ROUND_CORNERS_TOP_RIGHT: int
IM_DRAW_FLAGS_ROUND_CORNERS_BOTTOM_LEFT: int
IM_DRAW_FLAGS_ROUND_CORNERS_BOTTOM_RIGHT: int
IM_DRAW_FLAGS_ROUND_CORNERS_NONE: int
IM_DRAW_FLAGS_ROUND_CORNERS_TOP: int
IM_DRAW_FLAGS_ROUND_CORNERS_BOTTOM: int
IM_DRAW_FLAGS_ROUND_CORNERS_LEFT: int
IM_DRAW_FLAGS_ROUND_CORNERS_RIGHT: int
IM_DRAW_FLAGS_ROUND_CORNERS_ALL: int
IM_DRAW_FLAGS_ROUND_CORNERS_DEFAULT_: int
IM_DRAW_FLAGS_ROUND_CORNERS_MASK_: int
IM_DRAW_LIST_FLAGS_NONE: int
IM_DRAW_LIST_FLAGS_ANTI_ALIASED_LINES: int
IM_DRAW_LIST_FLAGS_ANTI_ALIASED_LINES_USE_TEX: int
IM_DRAW_LIST_FLAGS_ANTI_ALIASED_FILL: int
IM_DRAW_LIST_FLAGS_ALLOW_VTX_OFFSET: int
IM_FONT_ATLAS_FLAGS_NONE: int
IM_FONT_ATLAS_FLAGS_NO_POWER_OF_TWO_HEIGHT: int
IM_FONT_ATLAS_FLAGS_NO_MOUSE_CURSORS: int
IM_FONT_ATLAS_FLAGS_NO_BAKED_LINES: int
IMGUI_BACKEND_FLAGS_NONE: int
IMGUI_BACKEND_FLAGS_HAS_GAMEPAD: int
IMGUI_BACKEND_FLAGS_HAS_MOUSE_CURSORS: int
IMGUI_BACKEND_FLAGS_HAS_SET_MOUSE_POS: int
IMGUI_BACKEND_FLAGS_RENDERER_HAS_VTX_OFFSET: int
IMGUI_BACKEND_FLAGS_PLATFORM_HAS_VIEWPORTS: int
IMGUI_BACKEND_FLAGS_HAS_MOUSE_HOVERED_VIEWPORT: int
IMGUI_BACKEND_FLAGS_RENDERER_HAS_VIEWPORTS: int
IMGUI_BUTTON_FLAGS_NONE: int
IMGUI_BUTTON_FLAGS_MOUSE_BUTTON_LEFT: int
IMGUI_BUTTON_FLAGS_MOUSE_BUTTON_RIGHT: int
IMGUI_BUTTON_FLAGS_MOUSE_BUTTON_MIDDLE: int
IMGUI_BUTTON_FLAGS_MOUSE_BUTTON_MASK_: int
IMGUI_BUTTON_FLAGS_MOUSE_BUTTON_DEFAULT_: int
IMGUI_COL_TEXT: int
IMGUI_COL_TEXT_DISABLED: int
IMGUI_COL_WINDOW_BG: int
IMGUI_COL_CHILD_BG: int
IMGUI_COL_POPUP_BG: int
IMGUI_COL_BORDER: int
IMGUI_COL_BORDER_SHADOW: int
IMGUI_COL_FRAME_BG: int
IMGUI_COL_FRAME_BG_HOVERED: int
IMGUI_COL_FRAME_BG_ACTIVE: int
IMGUI_COL_TITLE_BG: int
IMGUI_COL_TITLE_BG_ACTIVE: int
IMGUI_COL_TITLE_BG_COLLAPSED: int
IMGUI_COL_MENU_BAR_BG: int
IMGUI_COL_SCROLLBAR_BG: int
IMGUI_COL_SCROLLBAR_GRAB: int
IMGUI_COL_SCROLLBAR_GRAB_HOVERED: int
IMGUI_COL_SCROLLBAR_GRAB_ACTIVE: int
IMGUI_COL_CHECK_MARK: int
IMGUI_COL_SLIDER_GRAB: int
IMGUI_COL_SLIDER_GRAB_ACTIVE: int
IMGUI_COL_BUTTON: int
IMGUI_COL_BUTTON_HOVERED: int
IMGUI_COL_BUTTON_ACTIVE: int
IMGUI_COL_HEADER: int
IMGUI_COL_HEADER_HOVERED: int
IMGUI_COL_HEADER_ACTIVE: int
IMGUI_COL_SEPARATOR: int
IMGUI_COL_SEPARATOR_HOVERED: int
IMGUI_COL_SEPARATOR_ACTIVE: int
IMGUI_COL_RESIZE_GRIP: int
IMGUI_COL_RESIZE_GRIP_HOVERED: int
IMGUI_COL_RESIZE_GRIP_ACTIVE: int
IMGUI_COL_TAB: int
IMGUI_COL_TAB_HOVERED: int
IMGUI_COL_TAB_ACTIVE: int
IMGUI_COL_TAB_UNFOCUSED: int
IMGUI_COL_TAB_UNFOCUSED_ACTIVE: int
IMGUI_COL_DOCKING_PREVIEW: int
IMGUI_COL_DOCKING_EMPTY_BG: int
IMGUI_COL_PLOT_LINES: int
IMGUI_COL_PLOT_LINES_HOVERED: int
IMGUI_COL_PLOT_HISTOGRAM: int
IMGUI_COL_PLOT_HISTOGRAM_HOVERED: int
IMGUI_COL_TABLE_HEADER_BG: int
IMGUI_COL_TABLE_BORDER_STRONG: int
IMGUI_COL_TABLE_BORDER_LIGHT: int
IMGUI_COL_TABLE_ROW_BG: int
IMGUI_COL_TABLE_ROW_BG_ALT: int
IMGUI_COL_TEXT_SELECTED_BG: int
IMGUI_COL_DRAG_DROP_TARGET: int
IMGUI_COL_NAV_HIGHLIGHT: int
IMGUI_COL_NAV_WINDOWING_HIGHLIGHT: int
IMGUI_COL_NAV_WINDOWING_DIM_BG: int
IMGUI_COL_MODAL_WINDOW_DIM_BG: int
IMGUI_COL_COUNT: int
IMGUI_COLOR_EDIT_FLAGS_NONE: int
IMGUI_COLOR_EDIT_FLAGS_NO_ALPHA: int
IMGUI_COLOR_EDIT_FLAGS_NO_PICKER: int
IMGUI_COLOR_EDIT_FLAGS_NO_OPTIONS: int
IMGUI_COLOR_EDIT_FLAGS_NO_SMALL_PREVIEW: int
IMGUI_COLOR_EDIT_FLAGS_NO_INPUTS: int
IMGUI_COLOR_EDIT_FLAGS_NO_TOOLTIP: int
IMGUI_COLOR_EDIT_FLAGS_NO_LABEL: int
IMGUI_COLOR_EDIT_FLAGS_NO_SIDE_PREVIEW: int
IMGUI_COLOR_EDIT_FLAGS_NO_DRAG_DROP: int
IMGUI_COLOR_EDIT_FLAGS_NO_BORDER: int
IMGUI_COLOR_EDIT_FLAGS_ALPHA_BAR: int
IMGUI_COLOR_EDIT_FLAGS_ALPHA_PREVIEW: int
IMGUI_COLOR_EDIT_FLAGS_ALPHA_PREVIEW_HALF: int
IMGUI_COLOR_EDIT_FLAGS_HDR: int
IMGUI_COLOR_EDIT_FLAGS_DISPLAY_RGB: int
IMGUI_COLOR_EDIT_FLAGS_DISPLAY_HSV: int
IMGUI_COLOR_EDIT_FLAGS_DISPLAY_HEX: int
IMGUI_COLOR_EDIT_FLAGS_UINT8: int
IMGUI_COLOR_EDIT_FLAGS_FLOAT: int
IMGUI_COLOR_EDIT_FLAGS_PICKER_HUE_BAR: int
IMGUI_COLOR_EDIT_FLAGS_PICKER_HUE_WHEEL: int
IMGUI_COLOR_EDIT_FLAGS_INPUT_RGB: int
IMGUI_COLOR_EDIT_FLAGS_INPUT_HSV: int
IMGUI_COLOR_EDIT_FLAGS_DEFAULT_OPTIONS_: int
IMGUI_COLOR_EDIT_FLAGS_DISPLAY_MASK_: int
IMGUI_COLOR_EDIT_FLAGS_DATA_TYPE_MASK_: int
IMGUI_COLOR_EDIT_FLAGS_PICKER_MASK_: int
IMGUI_COLOR_EDIT_FLAGS_INPUT_MASK_: int
IMGUI_COMBO_FLAGS_NONE: int
IMGUI_COMBO_FLAGS_POPUP_ALIGN_LEFT: int
IMGUI_COMBO_FLAGS_HEIGHT_SMALL: int
IMGUI_COMBO_FLAGS_HEIGHT_REGULAR: int
IMGUI_COMBO_FLAGS_HEIGHT_LARGE: int
IMGUI_COMBO_FLAGS_HEIGHT_LARGEST: int
IMGUI_COMBO_FLAGS_NO_ARROW_BUTTON: int
IMGUI_COMBO_FLAGS_NO_PREVIEW: int
IMGUI_COMBO_FLAGS_HEIGHT_MASK_: int
IMGUI_COND_NONE: int
IMGUI_COND_ALWAYS: int
IMGUI_COND_ONCE: int
IMGUI_COND_FIRST_USE_EVER: int
IMGUI_COND_APPEARING: int
IMGUI_CONFIG_FLAGS_NONE: int
IMGUI_CONFIG_FLAGS_NAV_ENABLE_KEYBOARD: int
IMGUI_CONFIG_FLAGS_NAV_ENABLE_GAMEPAD: int
IMGUI_CONFIG_FLAGS_NAV_ENABLE_SET_MOUSE_POS: int
IMGUI_CONFIG_FLAGS_NAV_NO_CAPTURE_KEYBOARD: int
IMGUI_CONFIG_FLAGS_NO_MOUSE: int
IMGUI_CONFIG_FLAGS_NO_MOUSE_CURSOR_CHANGE: int
IMGUI_CONFIG_FLAGS_DOCKING_ENABLE: int
IMGUI_CONFIG_FLAGS_VIEWPORTS_ENABLE: int
IMGUI_CONFIG_FLAGS_DPI_ENABLE_SCALE_VIEWPORTS: int
IMGUI_CONFIG_FLAGS_DPI_ENABLE_SCALE_FONTS: int
IMGUI_CONFIG_FLAGS_IS_SRGB: int
IMGUI_CONFIG_FLAGS_IS_TOUCH_SCREEN: int
IMGUI_DATA_TYPE_S8: int
IMGUI_DATA_TYPE_U8: int
IMGUI_DATA_TYPE_S16: int
IMGUI_DATA_TYPE_U16: int
IMGUI_DATA_TYPE_S32: int
IMGUI_DATA_TYPE_U32: int
IMGUI_DATA_TYPE_S64: int
IMGUI_DATA_TYPE_U64: int
IMGUI_DATA_TYPE_FLOAT: int
IMGUI_DATA_TYPE_DOUBLE: int
IMGUI_DATA_TYPE_COUNT: int
IMGUI_DIR_NONE: int
IMGUI_DIR_LEFT: int
IMGUI_DIR_RIGHT: int
IMGUI_DIR_UP: int
IMGUI_DIR_DOWN: int
IMGUI_DIR_COUNT: int
IMGUI_DOCK_NODE_FLAGS_NONE: int
IMGUI_DOCK_NODE_FLAGS_KEEP_ALIVE_ONLY: int
IMGUI_DOCK_NODE_FLAGS_NO_DOCKING_IN_CENTRAL_NODE: int
IMGUI_DOCK_NODE_FLAGS_PASSTHRU_CENTRAL_NODE: int
IMGUI_DOCK_NODE_FLAGS_NO_SPLIT: int
IMGUI_DOCK_NODE_FLAGS_NO_RESIZE: int
IMGUI_DOCK_NODE_FLAGS_AUTO_HIDE_TAB_BAR: int
IMGUI_DRAG_DROP_FLAGS_NONE: int
IMGUI_DRAG_DROP_FLAGS_SOURCE_NO_PREVIEW_TOOLTIP: int
IMGUI_DRAG_DROP_FLAGS_SOURCE_NO_DISABLE_HOVER: int
IMGUI_DRAG_DROP_FLAGS_SOURCE_NO_HOLD_TO_OPEN_OTHERS: int
IMGUI_DRAG_DROP_FLAGS_SOURCE_ALLOW_NULL_ID: int
IMGUI_DRAG_DROP_FLAGS_SOURCE_EXTERN: int
IMGUI_DRAG_DROP_FLAGS_SOURCE_AUTO_EXPIRE_PAYLOAD: int
IMGUI_DRAG_DROP_FLAGS_ACCEPT_BEFORE_DELIVERY: int
IMGUI_DRAG_DROP_FLAGS_ACCEPT_NO_DRAW_DEFAULT_RECT: int
IMGUI_DRAG_DROP_FLAGS_ACCEPT_NO_PREVIEW_TOOLTIP: int
IMGUI_DRAG_DROP_FLAGS_ACCEPT_PEEK_ONLY: int
IMGUI_FOCUSED_FLAGS_NONE: int
IMGUI_FOCUSED_FLAGS_CHILD_WINDOWS: int
IMGUI_FOCUSED_FLAGS_ROOT_WINDOW: int
IMGUI_FOCUSED_FLAGS_ANY_WINDOW: int
IMGUI_FOCUSED_FLAGS_NO_POPUP_HIERARCHY: int
IMGUI_FOCUSED_FLAGS_DOCK_HIERARCHY: int
IMGUI_FOCUSED_FLAGS_ROOT_AND_CHILD_WINDOWS: int
IMGUI_HOVERED_FLAGS_NONE: int
IMGUI_HOVERED_FLAGS_CHILD_WINDOWS: int
IMGUI_HOVERED_FLAGS_ROOT_WINDOW: int
IMGUI_HOVERED_FLAGS_ANY_WINDOW: int
IMGUI_HOVERED_FLAGS_NO_POPUP_HIERARCHY: int
IMGUI_HOVERED_FLAGS_DOCK_HIERARCHY: int
IMGUI_HOVERED_FLAGS_ALLOW_WHEN_BLOCKED_BY_POPUP: int
IMGUI_HOVERED_FLAGS_ALLOW_WHEN_BLOCKED_BY_ACTIVE_ITEM: int
IMGUI_HOVERED_FLAGS_ALLOW_WHEN_OVERLAPPED: int
IMGUI_HOVERED_FLAGS_ALLOW_WHEN_DISABLED: int
IMGUI_HOVERED_FLAGS_NO_NAV_OVERRIDE: int
IMGUI_HOVERED_FLAGS_RECT_ONLY: int
IMGUI_HOVERED_FLAGS_ROOT_AND_CHILD_WINDOWS: int
IMGUI_HOVERED_FLAGS_DELAY_NORMAL: int
IMGUI_HOVERED_FLAGS_DELAY_SHORT: int
IMGUI_HOVERED_FLAGS_NO_SHARED_DELAY: int
IMGUI_INPUT_TEXT_FLAGS_NONE: int
IMGUI_INPUT_TEXT_FLAGS_CHARS_DECIMAL: int
IMGUI_INPUT_TEXT_FLAGS_CHARS_HEXADECIMAL: int
IMGUI_INPUT_TEXT_FLAGS_CHARS_UPPERCASE: int
IMGUI_INPUT_TEXT_FLAGS_CHARS_NO_BLANK: int
IMGUI_INPUT_TEXT_FLAGS_AUTO_SELECT_ALL: int
IMGUI_INPUT_TEXT_FLAGS_ENTER_RETURNS_TRUE: int
IMGUI_INPUT_TEXT_FLAGS_CALLBACK_COMPLETION: int
IMGUI_INPUT_TEXT_FLAGS_CALLBACK_HISTORY: int
IMGUI_INPUT_TEXT_FLAGS_CALLBACK_ALWAYS: int
IMGUI_INPUT_TEXT_FLAGS_CALLBACK_CHAR_FILTER: int
IMGUI_INPUT_TEXT_FLAGS_ALLOW_TAB_INPUT: int
IMGUI_INPUT_TEXT_FLAGS_CTRL_ENTER_FOR_NEW_LINE: int
IMGUI_INPUT_TEXT_FLAGS_NO_HORIZONTAL_SCROLL: int
IMGUI_INPUT_TEXT_FLAGS_ALWAYS_OVERWRITE: int
IMGUI_INPUT_TEXT_FLAGS_READ_ONLY: int
IMGUI_INPUT_TEXT_FLAGS_PASSWORD: int
IMGUI_INPUT_TEXT_FLAGS_NO_UNDO_REDO: int
IMGUI_INPUT_TEXT_FLAGS_CHARS_SCIENTIFIC: int
IMGUI_INPUT_TEXT_FLAGS_CALLBACK_RESIZE: int
IMGUI_INPUT_TEXT_FLAGS_CALLBACK_EDIT: int
IMGUI_INPUT_TEXT_FLAGS_ESCAPE_CLEARS_ALL: int
IMGUI_KEY_NONE: int
IMGUI_KEY_TAB: int
IMGUI_KEY_LEFT_ARROW: int
IMGUI_KEY_RIGHT_ARROW: int
IMGUI_KEY_UP_ARROW: int
IMGUI_KEY_DOWN_ARROW: int
IMGUI_KEY_PAGE_UP: int
IMGUI_KEY_PAGE_DOWN: int
IMGUI_KEY_HOME: int
IMGUI_KEY_END: int
IMGUI_KEY_INSERT: int
IMGUI_KEY_DELETE: int
IMGUI_KEY_BACKSPACE: int
IMGUI_KEY_SPACE: int
IMGUI_KEY_ENTER: int
IMGUI_KEY_ESCAPE: int
IMGUI_KEY_LEFT_CTRL: int
IMGUI_KEY_LEFT_SHIFT: int
IMGUI_KEY_LEFT_ALT: int
IMGUI_KEY_LEFT_SUPER: int
IMGUI_KEY_RIGHT_CTRL: int
IMGUI_KEY_RIGHT_SHIFT: int
IMGUI_KEY_RIGHT_ALT: int
IMGUI_KEY_RIGHT_SUPER: int
IMGUI_KEY_MENU: int
IMGUI_KEY_0: int
IMGUI_KEY_1: int
IMGUI_KEY_2: int
IMGUI_KEY_3: int
IMGUI_KEY_4: int
IMGUI_KEY_5: int
IMGUI_KEY_6: int
IMGUI_KEY_7: int
IMGUI_KEY_8: int
IMGUI_KEY_9: int
IMGUI_KEY_A: int
IMGUI_KEY_B: int
IMGUI_KEY_C: int
IMGUI_KEY_D: int
IMGUI_KEY_E: int
IMGUI_KEY_F: int
IMGUI_KEY_G: int
IMGUI_KEY_H: int
IMGUI_KEY_I: int
IMGUI_KEY_J: int
IMGUI_KEY_K: int
IMGUI_KEY_L: int
IMGUI_KEY_M: int
IMGUI_KEY_N: int
IMGUI_KEY_O: int
IMGUI_KEY_P: int
IMGUI_KEY_Q: int
IMGUI_KEY_R: int
IMGUI_KEY_S: int
IMGUI_KEY_T: int
IMGUI_KEY_U: int
IMGUI_KEY_V: int
IMGUI_KEY_W: int
IMGUI_KEY_X: int
IMGUI_KEY_Y: int
IMGUI_KEY_Z: int
IMGUI_KEY_F1: int
IMGUI_KEY_F2: int
IMGUI_KEY_F3: int
IMGUI_KEY_F4: int
IMGUI_KEY_F5: int
IMGUI_KEY_F6: int
IMGUI_KEY_F7: int
IMGUI_KEY_F8: int
IMGUI_KEY_F9: int
IMGUI_KEY_F10: int
IMGUI_KEY_F11: int
IMGUI_KEY_F12: int
IMGUI_KEY_APOSTROPHE: int
IMGUI_KEY_COMMA: int
IMGUI_KEY_MINUS: int
IMGUI_KEY_PERIOD: int
IMGUI_KEY_SLASH: int
IMGUI_KEY_SEMICOLON: int
IMGUI_KEY_EQUAL: int
IMGUI_KEY_LEFT_BRACKET: int
IMGUI_KEY_BACKSLASH: int
IMGUI_KEY_RIGHT_BRACKET: int
IMGUI_KEY_GRAVE_ACCENT: int
IMGUI_KEY_CAPS_LOCK: int
IMGUI_KEY_SCROLL_LOCK: int
IMGUI_KEY_NUM_LOCK: int
IMGUI_KEY_PRINT_SCREEN: int
IMGUI_KEY_PAUSE: int
IMGUI_KEY_KEYPAD0: int
IMGUI_KEY_KEYPAD1: int
IMGUI_KEY_KEYPAD2: int
IMGUI_KEY_KEYPAD3: int
IMGUI_KEY_KEYPAD4: int
IMGUI_KEY_KEYPAD5: int
IMGUI_KEY_KEYPAD6: int
IMGUI_KEY_KEYPAD7: int
IMGUI_KEY_KEYPAD8: int
IMGUI_KEY_KEYPAD9: int
IMGUI_KEY_KEYPAD_DECIMAL: int
IMGUI_KEY_KEYPAD_DIVIDE: int
IMGUI_KEY_KEYPAD_MULTIPLY: int
IMGUI_KEY_KEYPAD_SUBTRACT: int
IMGUI_KEY_KEYPAD_ADD: int
IMGUI_KEY_KEYPAD_ENTER: int
IMGUI_KEY_KEYPAD_EQUAL: int
IMGUI_KEY_GAMEPAD_START: int
IMGUI_KEY_GAMEPAD_BACK: int
IMGUI_KEY_GAMEPAD_FACE_LEFT: int
IMGUI_KEY_GAMEPAD_FACE_RIGHT: int
IMGUI_KEY_GAMEPAD_FACE_UP: int
IMGUI_KEY_GAMEPAD_FACE_DOWN: int
IMGUI_KEY_GAMEPAD_DPAD_LEFT: int
IMGUI_KEY_GAMEPAD_DPAD_RIGHT: int
IMGUI_KEY_GAMEPAD_DPAD_UP: int
IMGUI_KEY_GAMEPAD_DPAD_DOWN: int
IMGUI_KEY_GAMEPAD_L1: int
IMGUI_KEY_GAMEPAD_R1: int
IMGUI_KEY_GAMEPAD_L2: int
IMGUI_KEY_GAMEPAD_R2: int
IMGUI_KEY_GAMEPAD_L3: int
IMGUI_KEY_GAMEPAD_R3: int
IMGUI_KEY_GAMEPAD_L_STICK_LEFT: int
IMGUI_KEY_GAMEPAD_L_STICK_RIGHT: int
IMGUI_KEY_GAMEPAD_L_STICK_UP: int
IMGUI_KEY_GAMEPAD_L_STICK_DOWN: int
IMGUI_KEY_GAMEPAD_R_STICK_LEFT: int
IMGUI_KEY_GAMEPAD_R_STICK_RIGHT: int
IMGUI_KEY_GAMEPAD_R_STICK_UP: int
IMGUI_KEY_GAMEPAD_R_STICK_DOWN: int
IMGUI_KEY_MOUSE_LEFT: int
IMGUI_KEY_MOUSE_RIGHT: int
IMGUI_KEY_MOUSE_MIDDLE: int
IMGUI_KEY_MOUSE_X1: int
IMGUI_KEY_MOUSE_X2: int
IMGUI_KEY_MOUSE_WHEELX: int
IMGUI_KEY_MOUSE_WHEELY: int
IMGUI_KEY_RESERVED_FOR_MOD_CTRL: int
IMGUI_KEY_RESERVED_FOR_MOD_SHIFT: int
IMGUI_KEY_RESERVED_FOR_MOD_ALT: int
IMGUI_KEY_RESERVED_FOR_MOD_SUPER: int
IMGUI_KEY_COUNT: int
IMGUI_MOD_NONE: int
IMGUI_MOD_CTRL: int
IMGUI_MOD_SHIFT: int
IMGUI_MOD_ALT: int
IMGUI_MOD_SUPER: int
IMGUI_MOD_SHORTCUT: int
IMGUI_MOD_MASK_: int
IMGUI_KEY_NAMED_KEY_BEGIN: int
IMGUI_KEY_NAMED_KEY_END: int
IMGUI_KEY_NAMED_KEY_COUNT: int
IMGUI_KEY_KEYS_DATA_SIZE: int
IMGUI_KEY_KEYS_DATA_OFFSET: int
IMGUI_MOUSE_BUTTON_LEFT: int
IMGUI_MOUSE_BUTTON_RIGHT: int
IMGUI_MOUSE_BUTTON_MIDDLE: int
IMGUI_MOUSE_BUTTON_COUNT: int
IMGUI_MOUSE_CURSOR_NONE: int
IMGUI_MOUSE_CURSOR_ARROW: int
IMGUI_MOUSE_CURSOR_TEXT_INPUT: int
IMGUI_MOUSE_CURSOR_RESIZE_ALL: int
IMGUI_MOUSE_CURSOR_RESIZE_NS: int
IMGUI_MOUSE_CURSOR_RESIZE_EW: int
IMGUI_MOUSE_CURSOR_RESIZE_NESW: int
IMGUI_MOUSE_CURSOR_RESIZE_NWSE: int
IMGUI_MOUSE_CURSOR_HAND: int
IMGUI_MOUSE_CURSOR_NOT_ALLOWED: int
IMGUI_MOUSE_CURSOR_COUNT: int
IMGUI_NAV_INPUT_ACTIVATE: int
IMGUI_NAV_INPUT_CANCEL: int
IMGUI_NAV_INPUT_INPUT: int
IMGUI_NAV_INPUT_MENU: int
IMGUI_NAV_INPUT_DPAD_LEFT: int
IMGUI_NAV_INPUT_DPAD_RIGHT: int
IMGUI_NAV_INPUT_DPAD_UP: int
IMGUI_NAV_INPUT_DPAD_DOWN: int
IMGUI_NAV_INPUT_L_STICK_LEFT: int
IMGUI_NAV_INPUT_L_STICK_RIGHT: int
IMGUI_NAV_INPUT_L_STICK_UP: int
IMGUI_NAV_INPUT_L_STICK_DOWN: int
IMGUI_NAV_INPUT_FOCUS_PREV: int
IMGUI_NAV_INPUT_FOCUS_NEXT: int
IMGUI_NAV_INPUT_TWEAK_SLOW: int
IMGUI_NAV_INPUT_TWEAK_FAST: int
IMGUI_NAV_INPUT_COUNT: int
IMGUI_POPUP_FLAGS_NONE: int
IMGUI_POPUP_FLAGS_MOUSE_BUTTON_LEFT: int
IMGUI_POPUP_FLAGS_MOUSE_BUTTON_RIGHT: int
IMGUI_POPUP_FLAGS_MOUSE_BUTTON_MIDDLE: int
IMGUI_POPUP_FLAGS_MOUSE_BUTTON_MASK_: int
IMGUI_POPUP_FLAGS_MOUSE_BUTTON_DEFAULT_: int
IMGUI_POPUP_FLAGS_NO_OPEN_OVER_EXISTING_POPUP: int
IMGUI_POPUP_FLAGS_NO_OPEN_OVER_ITEMS: int
IMGUI_POPUP_FLAGS_ANY_POPUP_ID: int
IMGUI_POPUP_FLAGS_ANY_POPUP_LEVEL: int
IMGUI_POPUP_FLAGS_ANY_POPUP: int
IMGUI_SELECTABLE_FLAGS_NONE: int
IMGUI_SELECTABLE_FLAGS_DONT_CLOSE_POPUPS: int
IMGUI_SELECTABLE_FLAGS_SPAN_ALL_COLUMNS: int
IMGUI_SELECTABLE_FLAGS_ALLOW_DOUBLE_CLICK: int
IMGUI_SELECTABLE_FLAGS_DISABLED: int
IMGUI_SELECTABLE_FLAGS_ALLOW_ITEM_OVERLAP: int
IMGUI_SLIDER_FLAGS_NONE: int
IMGUI_SLIDER_FLAGS_ALWAYS_CLAMP: int
IMGUI_SLIDER_FLAGS_LOGARITHMIC: int
IMGUI_SLIDER_FLAGS_NO_ROUND_TO_FORMAT: int
IMGUI_SLIDER_FLAGS_NO_INPUT: int
IMGUI_SLIDER_FLAGS_INVALID_MASK_: int
IMGUI_SORT_DIRECTION_NONE: int
IMGUI_SORT_DIRECTION_ASCENDING: int
IMGUI_SORT_DIRECTION_DESCENDING: int
IMGUI_STYLE_VAR_ALPHA: int
IMGUI_STYLE_VAR_DISABLED_ALPHA: int
IMGUI_STYLE_VAR_WINDOW_PADDING: int
IMGUI_STYLE_VAR_WINDOW_ROUNDING: int
IMGUI_STYLE_VAR_WINDOW_BORDER_SIZE: int
IMGUI_STYLE_VAR_WINDOW_MIN_SIZE: int
IMGUI_STYLE_VAR_WINDOW_TITLE_ALIGN: int
IMGUI_STYLE_VAR_CHILD_ROUNDING: int
IMGUI_STYLE_VAR_CHILD_BORDER_SIZE: int
IMGUI_STYLE_VAR_POPUP_ROUNDING: int
IMGUI_STYLE_VAR_POPUP_BORDER_SIZE: int
IMGUI_STYLE_VAR_FRAME_PADDING: int
IMGUI_STYLE_VAR_FRAME_ROUNDING: int
IMGUI_STYLE_VAR_FRAME_BORDER_SIZE: int
IMGUI_STYLE_VAR_ITEM_SPACING: int
IMGUI_STYLE_VAR_ITEM_INNER_SPACING: int
IMGUI_STYLE_VAR_INDENT_SPACING: int
IMGUI_STYLE_VAR_CELL_PADDING: int
IMGUI_STYLE_VAR_SCROLLBAR_SIZE: int
IMGUI_STYLE_VAR_SCROLLBAR_ROUNDING: int
IMGUI_STYLE_VAR_GRAB_MIN_SIZE: int
IMGUI_STYLE_VAR_GRAB_ROUNDING: int
IMGUI_STYLE_VAR_TAB_ROUNDING: int
IMGUI_STYLE_VAR_BUTTON_TEXT_ALIGN: int
IMGUI_STYLE_VAR_SELECTABLE_TEXT_ALIGN: int
IMGUI_STYLE_VAR_SEPARATOR_TEXT_BORDER_SIZE: int
IMGUI_STYLE_VAR_SEPARATOR_TEXT_ALIGN: int
IMGUI_STYLE_VAR_SEPARATOR_TEXT_PADDING: int
IMGUI_STYLE_VAR_COUNT: int
IMGUI_TAB_BAR_FLAGS_NONE: int
IMGUI_TAB_BAR_FLAGS_REORDERABLE: int
IMGUI_TAB_BAR_FLAGS_AUTO_SELECT_NEW_TABS: int
IMGUI_TAB_BAR_FLAGS_TAB_LIST_POPUP_BUTTON: int
IMGUI_TAB_BAR_FLAGS_NO_CLOSE_WITH_MIDDLE_MOUSE_BUTTON: int
IMGUI_TAB_BAR_FLAGS_NO_TAB_LIST_SCROLLING_BUTTONS: int
IMGUI_TAB_BAR_FLAGS_NO_TOOLTIP: int
IMGUI_TAB_BAR_FLAGS_FITTING_POLICY_RESIZE_DOWN: int
IMGUI_TAB_BAR_FLAGS_FITTING_POLICY_SCROLL: int
IMGUI_TAB_BAR_FLAGS_FITTING_POLICY_MASK_: int
IMGUI_TAB_BAR_FLAGS_FITTING_POLICY_DEFAULT_: int
IMGUI_TAB_ITEM_FLAGS_NONE: int
IMGUI_TAB_ITEM_FLAGS_UNSAVED_DOCUMENT: int
IMGUI_TAB_ITEM_FLAGS_SET_SELECTED: int
IMGUI_TAB_ITEM_FLAGS_NO_CLOSE_WITH_MIDDLE_MOUSE_BUTTON: int
IMGUI_TAB_ITEM_FLAGS_NO_PUSH_ID: int
IMGUI_TAB_ITEM_FLAGS_NO_TOOLTIP: int
IMGUI_TAB_ITEM_FLAGS_NO_REORDER: int
IMGUI_TAB_ITEM_FLAGS_LEADING: int
IMGUI_TAB_ITEM_FLAGS_TRAILING: int
IMGUI_TABLE_BG_TARGET_NONE: int
IMGUI_TABLE_BG_TARGET_ROW_BG0: int
IMGUI_TABLE_BG_TARGET_ROW_BG1: int
IMGUI_TABLE_BG_TARGET_CELL_BG: int
IMGUI_TABLE_COLUMN_FLAGS_NONE: int
IMGUI_TABLE_COLUMN_FLAGS_DISABLED: int
IMGUI_TABLE_COLUMN_FLAGS_DEFAULT_HIDE: int
IMGUI_TABLE_COLUMN_FLAGS_DEFAULT_SORT: int
IMGUI_TABLE_COLUMN_FLAGS_WIDTH_STRETCH: int
IMGUI_TABLE_COLUMN_FLAGS_WIDTH_FIXED: int
IMGUI_TABLE_COLUMN_FLAGS_NO_RESIZE: int
IMGUI_TABLE_COLUMN_FLAGS_NO_REORDER: int
IMGUI_TABLE_COLUMN_FLAGS_NO_HIDE: int
IMGUI_TABLE_COLUMN_FLAGS_NO_CLIP: int
IMGUI_TABLE_COLUMN_FLAGS_NO_SORT: int
IMGUI_TABLE_COLUMN_FLAGS_NO_SORT_ASCENDING: int
IMGUI_TABLE_COLUMN_FLAGS_NO_SORT_DESCENDING: int
IMGUI_TABLE_COLUMN_FLAGS_NO_HEADER_LABEL: int
IMGUI_TABLE_COLUMN_FLAGS_NO_HEADER_WIDTH: int
IMGUI_TABLE_COLUMN_FLAGS_PREFER_SORT_ASCENDING: int
IMGUI_TABLE_COLUMN_FLAGS_PREFER_SORT_DESCENDING: int
IMGUI_TABLE_COLUMN_FLAGS_INDENT_ENABLE: int
IMGUI_TABLE_COLUMN_FLAGS_INDENT_DISABLE: int
IMGUI_TABLE_COLUMN_FLAGS_IS_ENABLED: int
IMGUI_TABLE_COLUMN_FLAGS_IS_VISIBLE: int
IMGUI_TABLE_COLUMN_FLAGS_IS_SORTED: int
IMGUI_TABLE_COLUMN_FLAGS_IS_HOVERED: int
IMGUI_TABLE_COLUMN_FLAGS_WIDTH_MASK_: int
IMGUI_TABLE_COLUMN_FLAGS_INDENT_MASK_: int
IMGUI_TABLE_COLUMN_FLAGS_STATUS_MASK_: int
IMGUI_TABLE_COLUMN_FLAGS_NO_DIRECT_RESIZE_: int
IMGUI_TABLE_FLAGS_NONE: int
IMGUI_TABLE_FLAGS_RESIZABLE: int
IMGUI_TABLE_FLAGS_REORDERABLE: int
IMGUI_TABLE_FLAGS_HIDEABLE: int
IMGUI_TABLE_FLAGS_SORTABLE: int
IMGUI_TABLE_FLAGS_NO_SAVED_SETTINGS: int
IMGUI_TABLE_FLAGS_CONTEXT_MENU_IN_BODY: int
IMGUI_TABLE_FLAGS_ROW_BG: int
IMGUI_TABLE_FLAGS_BORDERS_INNERH: int
IMGUI_TABLE_FLAGS_BORDERS_OUTERH: int
IMGUI_TABLE_FLAGS_BORDERS_INNERV: int
IMGUI_TABLE_FLAGS_BORDERS_OUTERV: int
IMGUI_TABLE_FLAGS_BORDERSH: int
IMGUI_TABLE_FLAGS_BORDERSV: int
IMGUI_TABLE_FLAGS_BORDERS_INNER: int
IMGUI_TABLE_FLAGS_BORDERS_OUTER: int
IMGUI_TABLE_FLAGS_BORDERS: int
IMGUI_TABLE_FLAGS_NO_BORDERS_IN_BODY: int
IMGUI_TABLE_FLAGS_NO_BORDERS_IN_BODY_UNTIL_RESIZE: int
IMGUI_TABLE_FLAGS_SIZING_FIXED_FIT: int
IMGUI_TABLE_FLAGS_SIZING_FIXED_SAME: int
IMGUI_TABLE_FLAGS_SIZING_STRETCH_PROP: int
IMGUI_TABLE_FLAGS_SIZING_STRETCH_SAME: int
IMGUI_TABLE_FLAGS_NO_HOST_EXTENDX: int
IMGUI_TABLE_FLAGS_NO_HOST_EXTENDY: int
IMGUI_TABLE_FLAGS_NO_KEEP_COLUMNS_VISIBLE: int
IMGUI_TABLE_FLAGS_PRECISE_WIDTHS: int
IMGUI_TABLE_FLAGS_NO_CLIP: int
IMGUI_TABLE_FLAGS_PAD_OUTERX: int
IMGUI_TABLE_FLAGS_NO_PAD_OUTERX: int
IMGUI_TABLE_FLAGS_NO_PAD_INNERX: int
IMGUI_TABLE_FLAGS_SCROLLX: int
IMGUI_TABLE_FLAGS_SCROLLY: int
IMGUI_TABLE_FLAGS_SORT_MULTI: int
IMGUI_TABLE_FLAGS_SORT_TRISTATE: int
IMGUI_TABLE_FLAGS_SIZING_MASK_: int
IMGUI_TABLE_ROW_FLAGS_NONE: int
IMGUI_TABLE_ROW_FLAGS_HEADERS: int
IMGUI_TREE_NODE_FLAGS_NONE: int
IMGUI_TREE_NODE_FLAGS_SELECTED: int
IMGUI_TREE_NODE_FLAGS_FRAMED: int
IMGUI_TREE_NODE_FLAGS_ALLOW_ITEM_OVERLAP: int
IMGUI_TREE_NODE_FLAGS_NO_TREE_PUSH_ON_OPEN: int
IMGUI_TREE_NODE_FLAGS_NO_AUTO_OPEN_ON_LOG: int
IMGUI_TREE_NODE_FLAGS_DEFAULT_OPEN: int
IMGUI_TREE_NODE_FLAGS_OPEN_ON_DOUBLE_CLICK: int
IMGUI_TREE_NODE_FLAGS_OPEN_ON_ARROW: int
IMGUI_TREE_NODE_FLAGS_LEAF: int
IMGUI_TREE_NODE_FLAGS_BULLET: int
IMGUI_TREE_NODE_FLAGS_FRAME_PADDING: int
IMGUI_TREE_NODE_FLAGS_SPAN_AVAIL_WIDTH: int
IMGUI_TREE_NODE_FLAGS_SPAN_FULL_WIDTH: int
IMGUI_TREE_NODE_FLAGS_NAV_LEFT_JUMPS_BACK_HERE: int
IMGUI_TREE_NODE_FLAGS_COLLAPSING_HEADER: int
IMGUI_VIEWPORT_FLAGS_NONE: int
IMGUI_VIEWPORT_FLAGS_IS_PLATFORM_WINDOW: int
IMGUI_VIEWPORT_FLAGS_IS_PLATFORM_MONITOR: int
IMGUI_VIEWPORT_FLAGS_OWNED_BY_APP: int
IMGUI_VIEWPORT_FLAGS_NO_DECORATION: int
IMGUI_VIEWPORT_FLAGS_NO_TASK_BAR_ICON: int
IMGUI_VIEWPORT_FLAGS_NO_FOCUS_ON_APPEARING: int
IMGUI_VIEWPORT_FLAGS_NO_FOCUS_ON_CLICK: int
IMGUI_VIEWPORT_FLAGS_NO_INPUTS: int
IMGUI_VIEWPORT_FLAGS_NO_RENDERER_CLEAR: int
IMGUI_VIEWPORT_FLAGS_TOP_MOST: int
IMGUI_VIEWPORT_FLAGS_MINIMIZED: int
IMGUI_VIEWPORT_FLAGS_NO_AUTO_MERGE: int
IMGUI_VIEWPORT_FLAGS_CAN_HOST_OTHER_WINDOWS: int
IMGUI_WINDOW_FLAGS_NONE: int
IMGUI_WINDOW_FLAGS_NO_TITLE_BAR: int
IMGUI_WINDOW_FLAGS_NO_RESIZE: int
IMGUI_WINDOW_FLAGS_NO_MOVE: int
IMGUI_WINDOW_FLAGS_NO_SCROLLBAR: int
IMGUI_WINDOW_FLAGS_NO_SCROLL_WITH_MOUSE: int
IMGUI_WINDOW_FLAGS_NO_COLLAPSE: int
IMGUI_WINDOW_FLAGS_ALWAYS_AUTO_RESIZE: int
IMGUI_WINDOW_FLAGS_NO_BACKGROUND: int
IMGUI_WINDOW_FLAGS_NO_SAVED_SETTINGS: int
IMGUI_WINDOW_FLAGS_NO_MOUSE_INPUTS: int
IMGUI_WINDOW_FLAGS_MENU_BAR: int
IMGUI_WINDOW_FLAGS_HORIZONTAL_SCROLLBAR: int
IMGUI_WINDOW_FLAGS_NO_FOCUS_ON_APPEARING: int
IMGUI_WINDOW_FLAGS_NO_BRING_TO_FRONT_ON_FOCUS: int
IMGUI_WINDOW_FLAGS_ALWAYS_VERTICAL_SCROLLBAR: int
IMGUI_WINDOW_FLAGS_ALWAYS_HORIZONTAL_SCROLLBAR: int
IMGUI_WINDOW_FLAGS_ALWAYS_USE_WINDOW_PADDING: int
IMGUI_WINDOW_FLAGS_NO_NAV_INPUTS: int
IMGUI_WINDOW_FLAGS_NO_NAV_FOCUS: int
IMGUI_WINDOW_FLAGS_UNSAVED_DOCUMENT: int
IMGUI_WINDOW_FLAGS_NO_DOCKING: int
IMGUI_WINDOW_FLAGS_NO_NAV: int
IMGUI_WINDOW_FLAGS_NO_DECORATION: int
IMGUI_WINDOW_FLAGS_NO_INPUTS: int
IMGUI_WINDOW_FLAGS_NAV_FLATTENED: int
IMGUI_WINDOW_FLAGS_CHILD_WINDOW: int
IMGUI_WINDOW_FLAGS_TOOLTIP: int
IMGUI_WINDOW_FLAGS_POPUP: int
IMGUI_WINDOW_FLAGS_MODAL: int
IMGUI_WINDOW_FLAGS_CHILD_MENU: int
IMGUI_WINDOW_FLAGS_DOCK_NODE_HOST: int

def accept_drag_drop_payload(type_: str, flags: int=0) -> _ImGuiPayload: ...
def align_text_to_frame_padding() -> None: ...
def arrow_button(str_id: str, dir_: int) -> Any: ...
def begin(name: str, p_open: Any=None, flags: int=0) -> Any: ...
def begin_child_frame(id_: int, size: tuple, flags: int=0) -> Any: ...
def begin_child_id(id_: int, size: tuple=(0, 0), border: Any=False, flags: int=0) -> Any: ...
def begin_child_str(str_id: str, size: tuple=(0, 0), border: Any=False, flags: int=0) -> Any: ...
def begin_combo(label: str, preview_value: str, flags: int=0) -> Any: ...
def begin_disabled(disabled: Any=True) -> None: ...
def begin_drag_drop_source(flags: int=0) -> Any: ...
def begin_drag_drop_target() -> Any: ...
def begin_group() -> None: ...
def begin_list_box(label: str, size: tuple=(0, 0)) -> Any: ...
def begin_main_menu_bar() -> Any: ...
def begin_menu(label: str, enabled: Any=True) -> Any: ...
def begin_menu_bar() -> Any: ...
def begin_popup(str_id: str, flags: int=0) -> Any: ...
def begin_popup_context_item(str_id: str=None, popup_flags: int=1) -> Any: ...
def begin_popup_context_void(str_id: str=None, popup_flags: int=1) -> Any: ...
def begin_popup_context_window(str_id: str=None, popup_flags: int=1) -> Any: ...
def begin_popup_modal(name: str, p_open: Any=None, flags: int=0) -> Any: ...
def begin_tab_bar(str_id: str, flags: int=0) -> Any: ...
def begin_tab_item(label: str, p_open: Any=None, flags: int=0) -> Any: ...
def begin_table(str_id: str, column: int, flags: int=0, outer_size: tuple=(0.0, 0.0), inner_width: float=0.0) -> Any: ...
def begin_tooltip() -> None: ...
def bullet() -> None: ...
def bullet_text(fmt: str) -> None: ...
def bullet_textv(fmt: str, args: str) -> None: ...
def button(label: str, size: tuple=(0, 0)) -> Any: ...
def calc_item_width() -> float: ...
def calc_text_size(pOut: _ImVec2, text: str, text_end: str=None, hide_text_after_double_hash: Any=False, wrap_width: float=-1.0) -> None: ...
def checkbox(label: str, value: Any) -> Any: ...
def checkbox_flags_int_ptr(label: str, flags: int, flags_value: int) -> Any: ...
def checkbox_flags_uint_ptr(label: str, flags: int, flags_value: int) -> Any: ...
def close_current_popup() -> None: ...
def collapsing_header_bool_ptr(label: str, p_visible: Any, flags: int=0) -> Any: ...
def collapsing_header_tree_node_flags(label: str, flags: int=0) -> Any: ...
def color_button(desc_id: str, col: tuple, flags: int=0, size: tuple=(0, 0)) -> Any: ...
def color_convert_float_4_to_u32(in_: tuple) -> int: ...
def color_convert_hs_vto_rgb(h: float, s: float, value: float, out_r: float, out_g: float, out_b: float) -> None: ...
def color_convert_rg_bto_hsv(r: float, g: float, b: float, out_h: float, out_s: float, out_v: float) -> None: ...
def color_convert_u32_to_float4(pOut: _ImVec4, in_: int) -> None: ...
def color_edit3(label: str, col0: float, col1: float, col2: float, flags: int=0) -> Any: ...
def color_edit4(label: str, col0: float, col1: float, col2: float, col3: float, flags: int=0) -> Any: ...
def color_picker3(label: str, col0: float, col1: float, col2: float, flags: int=0) -> Any: ...
def color_picker4(label: str, col0: float, col1: float, col2: float, col3: float, flags: int=0, ref_col: float=None) -> Any: ...
def columns(count: int=1, id_: str=None, border: Any=True) -> None: ...
def combo_fn_bool_ptr(label: str, current_item: int, items_getter: Callable, data: Any, items_count: int, popup_max_height_in_items: int=-1) -> Any: ...
def combo_str(label: str, current_item: int, items_separated_by_zeros: str, popup_max_height_in_items: int=-1) -> Any: ...
def combo_str_arr(label: str, current_item: int, items: Any, items_count: int, popup_max_height_in_items: int=-1) -> Any: ...
def create_context(shared_font_atlas: _ImFontAtlas=None) -> _ImGuiContext: ...
def debug_check_version_and_data_layout(version_str: str, sz_io: Any, sz_style: Any, sz_vec2: Any, sz_vec4: Any, sz_drawvert: Any, sz_drawidx: Any) -> Any: ...
def debug_text_encoding(text: str) -> None: ...
def destroy_context(ctx: _ImGuiContext=None) -> None: ...
def destroy_platform_windows() -> None: ...
def dock_space(id_: int, size: tuple=(0, 0), flags: int=0, window_class: _ImGuiWindowClass=None) -> int: ...
def dock_space_over_viewport(viewport: _ImGuiViewport=None, flags: int=0, window_class: _ImGuiWindowClass=None) -> int: ...
def drag_float(label: str, value: float, v_speed: float=1.0, v_min: float=0.0, v_max: float=0.0, format_: str="%.3", flags: int=0) -> Any: ...
def drag_float2(label: str, value0: float, value1: float, v_speed: float=1.0, v_min: float=0.0, v_max: float=0.0, format_: str="%.3", flags: int=0) -> Any: ...
def drag_float3(label: str, value0: float, value1: float, value2: float, v_speed: float=1.0, v_min: float=0.0, v_max: float=0.0, format_: str="%.3", flags: int=0) -> Any: ...
def drag_float4(label: str, value0: float, value1: float, value2: float, value3: float, v_speed: float=1.0, v_min: float=0.0, v_max: float=0.0, format_: str="%.3", flags: int=0) -> Any: ...
def drag_float_range2(label: str, v_current_min: float, v_current_max: float, v_speed: float=1.0, v_min: float=0.0, v_max: float=0.0, format_: str="%.3", format_max: str=None, flags: int=0) -> Any: ...
def drag_int(label: str, value: int, v_speed: float=1.0, v_min: int=0, v_max: int=0, format_: str="%d", flags: int=0) -> Any: ...
def drag_int2(label: str, value0: int, value1: int, v_speed: float=1.0, v_min: int=0, v_max: int=0, format_: str="%d", flags: int=0) -> Any: ...
def drag_int3(label: str, value0: int, value1: int, value2: int, v_speed: float=1.0, v_min: int=0, v_max: int=0, format_: str="%d", flags: int=0) -> Any: ...
def drag_int4(label: str, value0: int, value1: int, value2: int, value3: int, v_speed: float=1.0, v_min: int=0, v_max: int=0, format_: str="%d", flags: int=0) -> Any: ...
def drag_int_range2(label: str, v_current_min: int, v_current_max: int, v_speed: float=1.0, v_min: int=0, v_max: int=0, format_: str="%d", format_max: str=None, flags: int=0) -> Any: ...
def drag_scalar(label: str, data_type: int, p_data: Any, v_speed: float=1.0, p_min: Any=None, p_max: Any=None, format_: str=None, flags: int=0) -> Any: ...
def drag_scalarn(label: str, data_type: int, p_data: Any, components: int, v_speed: float=1.0, p_min: Any=None, p_max: Any=None, format_: str=None, flags: int=0) -> Any: ...
def dummy(size: tuple) -> None: ...
def end() -> None: ...
def end_child() -> None: ...
def end_child_frame() -> None: ...
def end_combo() -> None: ...
def end_disabled() -> None: ...
def end_drag_drop_source() -> None: ...
def end_drag_drop_target() -> None: ...
def end_frame() -> None: ...
def end_group() -> None: ...
def end_list_box() -> None: ...
def end_main_menu_bar() -> None: ...
def end_menu() -> None: ...
def end_menu_bar() -> None: ...
def end_popup() -> None: ...
def end_tab_bar() -> None: ...
def end_tab_item() -> None: ...
def end_table() -> None: ...
def end_tooltip() -> None: ...
def find_viewport_by_id(id_: int) -> _ImGuiViewport: ...
def find_viewport_by_platform_handle(platform_handle: Any) -> _ImGuiViewport: ...
def get_background_draw_list_nil() -> _ImDrawList: ...
def get_background_draw_list_viewport_ptr(viewport: _ImGuiViewport) -> _ImDrawList: ...
def get_clipboard_text() -> str: ...
def get_color_u32_col(idx: int, alpha_mul: float=1.0) -> int: ...
def get_color_u32_u32(col: int) -> int: ...
def get_color_u32_vec4(col: tuple) -> int: ...
def get_column_index() -> int: ...
def get_column_offset(column_index: int=-1) -> float: ...
def get_column_width(column_index: int=-1) -> float: ...
def get_columns_count() -> int: ...
def get_content_region_avail(pOut: _ImVec2) -> None: ...
def get_content_region_max(pOut: _ImVec2) -> None: ...
def get_current_context() -> _ImGuiContext: ...
def get_cursor_pos(pOut: _ImVec2) -> None: ...
def get_cursor_posx() -> float: ...
def get_cursor_posy() -> float: ...
def get_cursor_screen_pos(pOut: _ImVec2) -> None: ...
def get_cursor_start_pos(pOut: _ImVec2) -> None: ...
def get_drag_drop_payload() -> _ImGuiPayload: ...
def get_draw_data() -> _ImDrawData: ...
def get_draw_list_shared_data() -> _ImDrawListSharedData: ...
def get_font() -> _ImFont: ...
def get_font_size() -> float: ...
def get_font_tex_uv_white_pixel(pOut: _ImVec2) -> None: ...
def get_foreground_draw_list_nil() -> _ImDrawList: ...
def get_foreground_draw_list_viewport_ptr(viewport: _ImGuiViewport) -> _ImDrawList: ...
def get_frame_count() -> int: ...
def get_frame_height() -> float: ...
def get_frame_height_with_spacing() -> float: ...
def get_id_ptr(ptr_id: Any) -> int: ...
def get_id_str(str_id: str) -> int: ...
def get_id_str_str(str_id_begin: str, str_id_end: str) -> int: ...
def get_io() -> _ImGuiIO: ...
def get_item_id() -> int: ...
def get_item_rect_max(pOut: _ImVec2) -> None: ...
def get_item_rect_min(pOut: _ImVec2) -> None: ...
def get_item_rect_size(pOut: _ImVec2) -> None: ...
def get_key_index(key: Any) -> Any: ...
def get_key_name(key: Any) -> str: ...
def get_key_pressed_amount(key: Any, repeat_delay: float, rate: float) -> int: ...
def get_main_viewport() -> _ImGuiViewport: ...
def get_mouse_clicked_count(button: int) -> int: ...
def get_mouse_cursor() -> int: ...
def get_mouse_drag_delta(pOut: _ImVec2, button: int=0, lock_threshold: float=-1.0) -> None: ...
def get_mouse_pos(pOut: _ImVec2) -> None: ...
def get_mouse_pos_on_opening_current_popup(pOut: _ImVec2) -> None: ...
def get_platform_io() -> _ImGuiPlatformIO: ...
def get_scroll_maxx() -> float: ...
def get_scroll_maxy() -> float: ...
def get_scrollx() -> float: ...
def get_scrolly() -> float: ...
def get_state_storage() -> _ImGuiStorage: ...
def get_style() -> _ImGuiStyle: ...
def get_style_color_name(idx: int) -> str: ...
def get_style_color_vec4(idx: int) -> _ImVec4: ...
def get_text_line_height() -> float: ...
def get_text_line_height_with_spacing() -> float: ...
def get_time() -> float: ...
def get_tree_node_to_label_spacing() -> float: ...
def get_version() -> str: ...
def get_window_content_region_max(pOut: _ImVec2) -> None: ...
def get_window_content_region_min(pOut: _ImVec2) -> None: ...
def get_window_dock_id() -> int: ...
def get_window_dpi_scale() -> float: ...
def get_window_draw_list() -> _ImDrawList: ...
def get_window_height() -> float: ...
def get_window_pos(pOut: _ImVec2) -> None: ...
def get_window_size(pOut: _ImVec2) -> None: ...
def get_window_viewport() -> _ImGuiViewport: ...
def get_window_width() -> float: ...
def image(user_texture_id: Any, size: tuple, uv0: tuple=(0, 0), uv1: tuple=(1, 1), tint_col: tuple=(1, 1, 1, 1), border_col: tuple=(0, 0, 0, 0)) -> None: ...
def image_button(str_id: str, user_texture_id: Any, size: tuple, uv0: tuple=(0, 0), uv1: tuple=(1, 1), bg_col: tuple=(0, 0, 0, 0), tint_col: tuple=(1, 1, 1, 1)) -> Any: ...
def indent(indent_w: float=0.0) -> None: ...
def input_double(label: str, value: Any, step: float=0.0, step_fast: float=0.0, format_: str="%.6", flags: int=0) -> Any: ...
def input_float(label: str, value: float, step: float=0.0, step_fast: float=0.0, format_: str="%.3", flags: int=0) -> Any: ...
def input_float2(label: str, value0: float, value1: float, format_: str="%.3", flags: int=0) -> Any: ...
def input_float3(label: str, value0: float, value1: float, value2: float, format_: str="%.3", flags: int=0) -> Any: ...
def input_float4(label: str, value0: float, value1: float, value2: float, value3: float, format_: str="%.3", flags: int=0) -> Any: ...
def input_int(label: str, value: int, step: int=1, step_fast: int=100, flags: int=0) -> Any: ...
def input_int2(label: str, value0: int, value1: int, flags: int=0) -> Any: ...
def input_int3(label: str, value0: int, value1: int, value2: int, flags: int=0) -> Any: ...
def input_int4(label: str, value0: int, value1: int, value2: int, value3: int, flags: int=0) -> Any: ...
def input_scalar(label: str, data_type: int, p_data: Any, p_step: Any=None, p_step_fast: Any=None, format_: str=None, flags: int=0) -> Any: ...
def input_scalarn(label: str, data_type: int, p_data: Any, components: int, p_step: Any=None, p_step_fast: Any=None, format_: str=None, flags: int=0) -> Any: ...
def invisible_button(str_id: str, size: tuple, flags: int=0) -> Any: ...
def is_any_item_active() -> Any: ...
def is_any_item_focused() -> Any: ...
def is_any_item_hovered() -> Any: ...
def is_any_mouse_down() -> Any: ...
def is_item_activated() -> Any: ...
def is_item_active() -> Any: ...
def is_item_clicked(mouse_button: int=0) -> Any: ...
def is_item_deactivated() -> Any: ...
def is_item_deactivated_after_edit() -> Any: ...
def is_item_edited() -> Any: ...
def is_item_focused() -> Any: ...
def is_item_hovered(flags: int=0) -> Any: ...
def is_item_toggled_open() -> Any: ...
def is_item_visible() -> Any: ...
def is_key_down(key: Any) -> Any: ...
def is_key_pressed(key: Any, repeat: Any=True) -> Any: ...
def is_key_released(key: Any) -> Any: ...
def is_mouse_clicked(button: int, repeat: Any=False) -> Any: ...
def is_mouse_double_clicked(button: int) -> Any: ...
def is_mouse_down(button: int) -> Any: ...
def is_mouse_dragging(button: int, lock_threshold: float=-1.0) -> Any: ...
def is_mouse_hovering_rect(r_min: tuple, r_max: tuple, clip: Any=True) -> Any: ...
def is_mouse_pos_valid(mouse_pos: _ImVec2=None) -> Any: ...
def is_mouse_released(button: int) -> Any: ...
def is_popup_open(str_id: str, flags: int=0) -> Any: ...
def is_rect_visible_nil(size: tuple) -> Any: ...
def is_rect_visible_vec2(rect_min: tuple, rect_max: tuple) -> Any: ...
def is_window_appearing() -> Any: ...
def is_window_collapsed() -> Any: ...
def is_window_docked() -> Any: ...
def is_window_focused(flags: int=0) -> Any: ...
def is_window_hovered(flags: int=0) -> Any: ...
def label_text(label: str, fmt: str) -> None: ...
def label_textv(label: str, fmt: str, args: str) -> None: ...
def list_box_fn_bool_ptr(label: str, current_item: int, items_getter: Callable, data: Any, items_count: int, height_in_items: int=-1) -> Any: ...
def list_box_str_arr(label: str, current_item: int, items: Any, items_count: int, height_in_items: int=-1) -> Any: ...
def load_ini_settings_from_disk(ini_filename: str) -> None: ...
def load_ini_settings_from_memory(ini_data: str, ini_size: Any=0) -> None: ...
def log_buttons() -> None: ...
def log_finish() -> None: ...
def log_text(fmt: str) -> None: ...
def log_textv(fmt: str, args: str) -> None: ...
def log_to_clipboard(auto_open_depth: int=-1) -> None: ...
def log_to_file(auto_open_depth: int=-1, filename: str=None) -> None: ...
def log_to_tty(auto_open_depth: int=-1) -> None: ...
def mem_alloc(size: Any) -> Any: ...
def mem_free(ptr: Any) -> None: ...
def menu_item_bool(label: str, shortcut: str=None, selected: Any=False, enabled: Any=True) -> Any: ...
def menu_item_bool_ptr(label: str, shortcut: str, p_selected: Any, enabled: Any=True) -> Any: ...
def new_frame() -> None: ...
def new_line() -> None: ...
def next_column() -> None: ...
def open_popup_on_item_click(str_id: str=None, popup_flags: int=1) -> None: ...
def open_popup_id(id_: int, popup_flags: int=0) -> None: ...
def open_popup_str(str_id: str, popup_flags: int=0) -> None: ...
def plot_histogram_float_ptr(label: str, values: float, values_count: int, values_offset: int=0, overlay_text: str=None, scale_min: float=FLT_MAX, scale_max: float=FLT_MAX, graph_size: tuple=(0, 0), stride: int=sizeof(float)) -> None: ...
def plot_histogram_fn_float_ptr(label: str, values_getter: Callable, data: Any, values_count: int, values_offset: int=0, overlay_text: str=None, scale_min: float=FLT_MAX, scale_max: float=FLT_MAX, graph_size: tuple=(0, 0)) -> None: ...
def plot_lines_float_ptr(label: str, values: float, values_count: int, values_offset: int=0, overlay_text: str=None, scale_min: float=FLT_MAX, scale_max: float=FLT_MAX, graph_size: tuple=(0, 0), stride: int=sizeof(float)) -> None: ...
def plot_lines_fn_float_ptr(label: str, values_getter: Callable, data: Any, values_count: int, values_offset: int=0, overlay_text: str=None, scale_min: float=FLT_MAX, scale_max: float=FLT_MAX, graph_size: tuple=(0, 0)) -> None: ...
def pop_allow_keyboard_focus() -> None: ...
def pop_button_repeat() -> None: ...
def pop_clip_rect() -> None: ...
def pop_font() -> None: ...
def pop_id() -> None: ...
def pop_item_width() -> None: ...
def pop_style_color(count: int=1) -> None: ...
def pop_style_var(count: int=1) -> None: ...
def pop_text_wrap_pos() -> None: ...
def progress_bar(fraction: float, size_arg: tuple=(-FLT_MIN, 0), overlay: str=None) -> None: ...
def push_allow_keyboard_focus(allow_keyboard_focus: Any) -> None: ...
def push_button_repeat(repeat: Any) -> None: ...
def push_clip_rect(clip_rect_min: tuple, clip_rect_max: tuple, intersect_with_current_clip_rect: Any) -> None: ...
def push_font(font: _ImFont) -> None: ...
def push_id_int(int_id: int) -> None: ...
def push_id_ptr(ptr_id: Any) -> None: ...
def push_id_str(str_id: str) -> None: ...
def push_id_str_str(str_id_begin: str, str_id_end: str) -> None: ...
def push_item_width(item_width: float) -> None: ...
def push_style_color_u32(idx: int, col: int) -> None: ...
def push_style_color_vec4(idx: int, col: tuple) -> None: ...
def push_style_var_float(idx: int, val: float) -> None: ...
def push_style_var_vec2(idx: int, val: tuple) -> None: ...
def push_text_wrap_pos(wrap_local_pos_x: float=0.0) -> None: ...
def radio_button_bool(label: str, active: Any) -> Any: ...
def radio_button_int_ptr(label: str, value: int, v_button: int) -> Any: ...
def render() -> None: ...
def render_platform_windows_default(platform_render_arg: Any=None, renderer_render_arg: Any=None) -> None: ...
def reset_mouse_drag_delta(button: int=0) -> None: ...
def same_line(offset_from_start_x: float=0.0, spacing: float=-1.0) -> None: ...
def save_ini_settings_to_disk(ini_filename: str) -> None: ...
def save_ini_settings_to_memory(out_ini_size: Any=None) -> str: ...
def selectable_bool(label: str, selected: Any=False, flags: int=0, size: tuple=(0, 0)) -> Any: ...
def selectable_bool_ptr(label: str, p_selected: Any, flags: int=0, size: tuple=(0, 0)) -> Any: ...
def separator() -> None: ...
def separator_text(label: str) -> None: ...
def set_clipboard_text(text: str) -> None: ...
def set_color_edit_options(flags: int) -> None: ...
def set_column_offset(column_index: int, offset_x: float) -> None: ...
def set_column_width(column_index: int, width: float) -> None: ...
def set_current_context(ctx: _ImGuiContext) -> None: ...
def set_cursor_pos(local_pos: tuple) -> None: ...
def set_cursor_posx(local_x: float) -> None: ...
def set_cursor_posy(local_y: float) -> None: ...
def set_cursor_screen_pos(pos: tuple) -> None: ...
def set_drag_drop_payload(type_: str, data: Any, sz: Any, cond: int=0) -> Any: ...
def set_item_allow_overlap() -> None: ...
def set_item_default_focus() -> None: ...
def set_keyboard_focus_here(offset: int=0) -> None: ...
def set_mouse_cursor(cursor_type: int) -> None: ...
def set_next_frame_want_capture_keyboard(want_capture_keyboard: Any) -> None: ...
def set_next_frame_want_capture_mouse(want_capture_mouse: Any) -> None: ...
def set_next_item_open(is_open: Any, cond: int=0) -> None: ...
def set_next_item_width(item_width: float) -> None: ...
def set_next_window_bg_alpha(alpha: float) -> None: ...
def set_next_window_class(window_class: _ImGuiWindowClass) -> None: ...
def set_next_window_collapsed(collapsed: Any, cond: int=0) -> None: ...
def set_next_window_content_size(size: tuple) -> None: ...
def set_next_window_dock_id(dock_id: int, cond: int=0) -> None: ...
def set_next_window_focus() -> None: ...
def set_next_window_pos(pos: tuple, cond: int=0, pivot: tuple=(0, 0)) -> None: ...
def set_next_window_scroll(scroll: tuple) -> None: ...
def set_next_window_size(size: tuple, cond: int=0) -> None: ...
def set_next_window_viewport(viewport_id: int) -> None: ...
def set_scroll_from_posx(local_x: float, center_x_ratio: float=0.5) -> None: ...
def set_scroll_from_posy(local_y: float, center_y_ratio: float=0.5) -> None: ...
def set_scroll_herex(center_x_ratio: float=0.5) -> None: ...
def set_scroll_herey(center_y_ratio: float=0.5) -> None: ...
def set_scrollx(scroll_x: float) -> None: ...
def set_scrolly(scroll_y: float) -> None: ...
def set_state_storage(storage: _ImGuiStorage) -> None: ...
def set_tab_item_closed(tab_or_docked_window_label: str) -> None: ...
def set_tooltip(fmt: str) -> None: ...
def set_tooltipv(fmt: str, args: str) -> None: ...
def set_window_collapsed_bool(collapsed: Any, cond: int=0) -> None: ...
def set_window_collapsed_str(name: str, collapsed: Any, cond: int=0) -> None: ...
def set_window_focus_nil() -> None: ...
def set_window_focus_str(name: str) -> None: ...
def set_window_font_scale(scale: float) -> None: ...
def set_window_pos_str(name: str, pos: tuple, cond: int=0) -> None: ...
def set_window_pos_vec2(pos: tuple, cond: int=0) -> None: ...
def set_window_size_str(name: str, size: tuple, cond: int=0) -> None: ...
def set_window_size_vec2(size: tuple, cond: int=0) -> None: ...
def show_about_window(p_open: Any=None) -> None: ...
def show_debug_log_window(p_open: Any=None) -> None: ...
def show_demo_window(p_open: Any=None) -> None: ...
def show_font_selector(label: str) -> None: ...
def show_metrics_window(p_open: Any=None) -> None: ...
def show_stack_tool_window(p_open: Any=None) -> None: ...
def show_style_editor(ref: _ImGuiStyle=None) -> None: ...
def show_style_selector(label: str) -> Any: ...
def show_user_guide() -> None: ...
def slider_angle(label: str, v_rad: float, v_degrees_min: float=-360.0, v_degrees_max: float=+360.0, format_: str="%.0 deg", flags: int=0) -> Any: ...
def slider_float(label: str, value: float, v_min: float, v_max: float, format_: str="%.3", flags: int=0) -> Any: ...
def slider_float2(label: str, value0: float, value1: float, v_min: float, v_max: float, format_: str="%.3", flags: int=0) -> Any: ...
def slider_float3(label: str, value0: float, value1: float, value2: float, v_min: float, v_max: float, format_: str="%.3", flags: int=0) -> Any: ...
def slider_float4(label: str, value0: float, value1: float, value2: float, value3: float, v_min: float, v_max: float, format_: str="%.3", flags: int=0) -> Any: ...
def slider_int(label: str, value: int, v_min: int, v_max: int, format_: str="%d", flags: int=0) -> Any: ...
def slider_int2(label: str, value0: int, value1: int, v_min: int, v_max: int, format_: str="%d", flags: int=0) -> Any: ...
def slider_int3(label: str, value0: int, value1: int, value2: int, v_min: int, v_max: int, format_: str="%d", flags: int=0) -> Any: ...
def slider_int4(label: str, value0: int, value1: int, value2: int, value3: int, v_min: int, v_max: int, format_: str="%d", flags: int=0) -> Any: ...
def slider_scalar(label: str, data_type: int, p_data: Any, p_min: Any, p_max: Any, format_: str=None, flags: int=0) -> Any: ...
def slider_scalarn(label: str, data_type: int, p_data: Any, components: int, p_min: Any, p_max: Any, format_: str=None, flags: int=0) -> Any: ...
def small_button(label: str) -> Any: ...
def spacing() -> None: ...
def style_colors_classic(dst: _ImGuiStyle=None) -> None: ...
def style_colors_dark(dst: _ImGuiStyle=None) -> None: ...
def style_colors_light(dst: _ImGuiStyle=None) -> None: ...
def tab_item_button(label: str, flags: int=0) -> Any: ...
def table_get_column_count() -> int: ...
def table_get_column_flags(column_n: int=-1) -> int: ...
def table_get_column_index() -> int: ...
def table_get_column_name(column_n: int=-1) -> str: ...
def table_get_row_index() -> int: ...
def table_get_sort_specs() -> _ImGuiTableSortSpecs: ...
def table_header(label: str) -> None: ...
def table_headers_row() -> None: ...
def table_next_column() -> Any: ...
def table_next_row(row_flags: int=0, min_row_height: float=0.0) -> None: ...
def table_set_bg_color(target: int, color: int, column_n: int=-1) -> None: ...
def table_set_column_enabled(column_n: int, value: Any) -> None: ...
def table_set_column_index(column_n: int) -> Any: ...
def table_setup_column(label: str, flags: int=0, init_width_or_weight: float=0.0, user_id: int=0) -> None: ...
def table_setup_scroll_freeze(cols: int, rows: int) -> None: ...
def text(fmt: str) -> None: ...
def text_colored(col: tuple, fmt: str) -> None: ...
def text_coloredv(col: tuple, fmt: str, args: str) -> None: ...
def text_disabled(fmt: str) -> None: ...
def text_disabledv(fmt: str, args: str) -> None: ...
def text_unformatted(text: str, text_end: str=None) -> None: ...
def textv(fmt: str, args: str) -> None: ...
def text_wrapped(fmt: str) -> None: ...
def text_wrappedv(fmt: str, args: str) -> None: ...
def tree_node_ex_v_ptr(ptr_id: Any, flags: int, fmt: str, args: str) -> Any: ...
def tree_node_ex_v_str(str_id: str, flags: int, fmt: str, args: str) -> Any: ...
def tree_node_ex_ptr(ptr_id: Any, flags: int, fmt: str) -> Any: ...
def tree_node_ex_str(label: str, flags: int=0) -> Any: ...
def tree_node_ex_str_str(str_id: str, flags: int, fmt: str) -> Any: ...
def tree_node_v_ptr(ptr_id: Any, fmt: str, args: str) -> Any: ...
def tree_node_v_str(str_id: str, fmt: str, args: str) -> Any: ...
def tree_node_ptr(ptr_id: Any, fmt: str) -> Any: ...
def tree_node_str(label: str) -> Any: ...
def tree_node_str_str(str_id: str, fmt: str) -> Any: ...
def tree_pop() -> None: ...
def tree_push_ptr(ptr_id: Any) -> None: ...
def tree_push_str(str_id: str) -> None: ...
def unindent(indent_w: float=0.0) -> None: ...
def update_platform_windows() -> None: ...
def v_slider_float(label: str, size: tuple, value: float, v_min: float, v_max: float, format_: str="%.3", flags: int=0) -> Any: ...
def v_slider_int(label: str, size: tuple, value: int, v_min: int, v_max: int, format_: str="%d", flags: int=0) -> Any: ...
def v_slider_scalar(label: str, size: tuple, data_type: int, p_data: Any, p_min: Any, p_max: Any, format_: str=None, flags: int=0) -> Any: ...
def value_bool(prefix: str, b: Any) -> None: ...
def value_float(prefix: str, value: float, float_format: str=None) -> None: ...
def value_int(prefix: str, value: int) -> None: ...
def value_uint(prefix: str, value: int) -> None: ...

class _ImVector_ImDrawCmd:
    size: int
    capacity: int
    data: _ImDrawCmd

class _ImVector_ImDrawIdx:
    size: int
    capacity: int
    data: int

class _ImVector_ImDrawVert:
    size: int
    capacity: int
    data: _ImDrawVert

class _ImVector_ImVec4:
    size: int
    capacity: int
    data: _ImVec4

class _ImVector_ImTextureID:
    size: int
    capacity: int
    data: Any

class _ImVector_ImVec2:
    size: int
    capacity: int
    data: _ImVec2

class _ImVector_ImDrawChannel:
    size: int
    capacity: int
    data: _ImDrawChannel

class _ImVector_float:
    size: int
    capacity: int
    data: float

class _ImVector_ImWchar:
    size: int
    capacity: int
    data: int

class _ImVector_ImFontGlyph:
    size: int
    capacity: int
    data: _ImFontGlyph

class _ImVector_ImFontPtr:
    size: int
    capacity: int
    data: _ImFont

class _ImVector_ImFontAtlasCustomRect:
    size: int
    capacity: int
    data: _ImFontAtlasCustomRect

class _ImVector_ImFontConfig:
    size: int
    capacity: int
    data: _ImFontConfig

class _ImFontGlyph:
    colored: int
    visible: int
    codepoint: int
    advancex: float
    x0: float
    y0: float
    x1: float
    y1: float
    u0: float
    v0: float
    u1: float
    v1: float

class _ImVector_ImU32:
    size: int
    capacity: int
    data: int

class _ImGuiKeyData:
    down: Any
    down_duration: float
    down_duration_prev: float
    analog_value: float

class _ImGuiListClipper:
    display_start: int
    display_end: int
    items_count: int
    items_height: float
    start_posy: float
    temp_data: Any
    def gui_list_clipper() -> _ImGuiListClipper: ...
    def destroy(self: _ImGuiListClipper) -> None: ...
    def begin(self: _ImGuiListClipper, items_count: int, items_height: float=-1.0) -> None: ...
    def end(self: _ImGuiListClipper) -> None: ...
    def force_display_range_by_indices(self: _ImGuiListClipper, item_min: int, item_max: int) -> None: ...
    def step(self: _ImGuiListClipper) -> Any: ...

class _ImGuiOnceUponAFrame:
    ref_frame: int
    def gui_once_upon_a_frame() -> _ImGuiOnceUponAFrame: ...
    def destroy(self: _ImGuiOnceUponAFrame) -> None: ...

class _ImGuiPayload:
    data: Any
    data_size: int
    source_id: int
    source_parent_id: int
    data_frame_count: int
    data_type: int
    preview: Any
    delivery: Any
    def gui_payload() -> _ImGuiPayload: ...
    def destroy(self: _ImGuiPayload) -> None: ...
    def clear(self: _ImGuiPayload) -> None: ...
    def is_data_type(self: _ImGuiPayload, type_: str) -> Any: ...
    def is_delivery(self: _ImGuiPayload) -> Any: ...
    def is_preview(self: _ImGuiPayload) -> Any: ...

class _ImVector_ImGuiPlatformMonitor:
    size: int
    capacity: int
    data: _ImGuiPlatformMonitor

class _ImVector_ImGuiViewportPtr:
    size: int
    capacity: int
    data: _ImGuiViewport

class _ImVector_ImGuiStoragePair:
    size: int
    capacity: int
    data: _ImGuiStoragePair

class _ImGuiStoragePair:
    key: int
    val_i: int
    val_f: float
    val_p: Any
    def float_(_key: int, _val_f: float) -> _ImGuiStoragePair: ...
    def int_(_key: int, _val_i: int) -> _ImGuiStoragePair: ...
    def ptr(_key: int, _val_p: Any) -> _ImGuiStoragePair: ...
    def destroy(self: _ImGuiStoragePair) -> None: ...

class _ImGuiTableColumnSortSpecs:
    column_user_id: int
    column_index: int
    sort_order: int
    sort_direction: int
    def gui_table_column_sort_specs() -> _ImGuiTableColumnSortSpecs: ...
    def destroy(self: _ImGuiTableColumnSortSpecs) -> None: ...

class _ImGuiTableSortSpecs:
    specs: _ImGuiTableColumnSortSpecs
    specs_count: int
    specs_dirty: Any
    def gui_table_sort_specs() -> _ImGuiTableSortSpecs: ...
    def destroy(self: _ImGuiTableSortSpecs) -> None: ...

class _ImVector_char:
    size: int
    capacity: int
    data: str

class _ImVector_ImGuiTextRange:
    size: int
    capacity: int
    data: _ImGuiTextRange

class _ImGuiTextRange:
    b: str
    e: str
    def nil() -> _ImGuiTextRange: ...
    def str_(_b: str, _e: str) -> _ImGuiTextRange: ...
    def destroy(self: _ImGuiTextRange) -> None: ...
    def empty(self: _ImGuiTextRange) -> Any: ...
    def split(self: _ImGuiTextRange, separator: int, out: _ImVector_ImGuiTextRange) -> None: ...

class _ImGuiWindowClass:
    class_id: int
    parent_viewport_id: int
    viewport_flags_override_set: int
    viewport_flags_override_clear: int
    tab_item_flags_override_set: int
    dock_node_flags_override_set: int
    docking_always_tab_bar: Any
    docking_allow_unclassed: Any
    def gui_window_class() -> _ImGuiWindowClass: ...
    def destroy(self: _ImGuiWindowClass) -> None: ...

class _ImVec2:
    x: float
    y: float
    def float_(_x: float, _y: float) -> _ImVec2: ...
    def nil() -> _ImVec2: ...
    def destroy(self: _ImVec2) -> None: ...

class _ImVec4:
    x: float
    y: float
    z: float
    w: float
    def float_(_x: float, _y: float, _z: float, _w: float) -> _ImVec4: ...
    def nil() -> _ImVec4: ...
    def destroy(self: _ImVec4) -> None: ...

class _ImColor:
    value: tuple
    def float_(r: float, g: float, b: float, a: float=1.0) -> _ImColor: ...
    def int_(r: int, g: int, b: int, a: int=255) -> _ImColor: ...
    def nil() -> _ImColor: ...
    def u32(rgba: int) -> _ImColor: ...
    def vec4(col: tuple) -> _ImColor: ...
    def destroy(self: _ImColor) -> None: ...
    def hsv(pOut: _ImColor, h: float, s: float, value: float, a: float=1.0) -> None: ...
    def set_hsv(self: _ImColor, h: float, s: float, value: float, a: float=1.0) -> None: ...

class _ImDrawChannel:
    _cmd_buffer: _ImVector_ImDrawCmd
    _idx_buffer: _ImVector_ImDrawIdx

class _ImDrawCmd:
    clip_rect: tuple
    texture_id: Any
    vtx_offset: int
    idx_offset: int
    elem_count: int
    user_callback_data: Any
    def draw_cmd() -> _ImDrawCmd: ...
    def destroy(self: _ImDrawCmd) -> None: ...
    def get_tex_id(self: _ImDrawCmd) -> Any: ...

class _ImDrawCmdHeader:
    clip_rect: tuple
    texture_id: Any
    vtx_offset: int

class _ImDrawData:
    valid: Any
    cmd_lists_count: int
    total_idx_count: int
    total_vtx_count: int
    cmd_lists: _ImDrawList
    display_pos: tuple
    display_size: tuple
    framebuffer_scale: tuple
    owner_viewport: _ImGuiViewport
    def draw_data() -> _ImDrawData: ...
    def destroy(self: _ImDrawData) -> None: ...
    def clear(self: _ImDrawData) -> None: ...
    def de_index_all_buffers(self: _ImDrawData) -> None: ...
    def scale_clip_rects(self: _ImDrawData, fb_scale: tuple) -> None: ...

class _ImDrawListSplitter:
    _current: int
    _count: int
    _channels: _ImVector_ImDrawChannel
    def draw_list_splitter() -> _ImDrawListSplitter: ...
    def destroy(self: _ImDrawListSplitter) -> None: ...
    def clear(self: _ImDrawListSplitter) -> None: ...
    def clear_free_memory(self: _ImDrawListSplitter) -> None: ...
    def merge(self: _ImDrawListSplitter, draw_list: _ImDrawList) -> None: ...
    def set_current_channel(self: _ImDrawListSplitter, draw_list: _ImDrawList, channel_idx: int) -> None: ...
    def split(self: _ImDrawListSplitter, draw_list: _ImDrawList, count: int) -> None: ...

class _ImDrawVert:
    pos: tuple
    uv: tuple
    col: int

class _ImFont:
    index_advancex: _ImVector_float
    fallback_advancex: float
    font_size: float
    index_lookup: _ImVector_ImWchar
    glyphs: _ImVector_ImFontGlyph
    fallback_glyph: _ImFontGlyph
    container_atlas: _ImFontAtlas
    config_data: _ImFontConfig
    config_data_count: int
    fallback_char: int
    ellipsis_char: int
    ellipsis_char_count: int
    ellipsis_width: float
    ellipsis_char_step: float
    dirty_lookup_tables: Any
    scale: float
    ascent: float
    descent: float
    metrics_total_surface: int
    used_4k_pages_map: int
    def font() -> _ImFont: ...
    def destroy(self: _ImFont) -> None: ...
    def add_glyph(self: _ImFont, src_cfg: _ImFontConfig, c: int, x0: float, y0: float, x1: float, y1: float, u0: float, v0: float, u1: float, v1: float, advance_x: float) -> None: ...
    def add_remap_char(self: _ImFont, dst: int, src: int, overwrite_dst: Any=True) -> None: ...
    def build_lookup_table(self: _ImFont) -> None: ...
    def calc_text_sizea(pOut: _ImVec2, self: _ImFont, size: float, max_width: float, wrap_width: float, text_begin: str, text_end: str=None, remaining: Any=None) -> None: ...
    def calc_word_wrap_positiona(self: _ImFont, scale: float, text: str, text_end: str, wrap_width: float) -> str: ...
    def clear_output_data(self: _ImFont) -> None: ...
    def find_glyph(self: _ImFont, c: int) -> _ImFontGlyph: ...
    def find_glyph_no_fallback(self: _ImFont, c: int) -> _ImFontGlyph: ...
    def get_char_advance(self: _ImFont, c: int) -> float: ...
    def get_debug_name(self: _ImFont) -> str: ...
    def grow_index(self: _ImFont, new_size: int) -> None: ...
    def is_glyph_range_unused(self: _ImFont, c_begin: int, c_last: int) -> Any: ...
    def is_loaded(self: _ImFont) -> Any: ...
    def render_char(self: _ImFont, draw_list: _ImDrawList, size: float, pos: tuple, col: int, c: int) -> None: ...
    def render_text(self: _ImFont, draw_list: _ImDrawList, size: float, pos: tuple, col: int, clip_rect: tuple, text_begin: str, text_end: str, wrap_width: float=0.0, cpu_fine_clip: Any=False) -> None: ...
    def set_glyph_visible(self: _ImFont, c: int, visible: Any) -> None: ...

class _ImFontAtlas:
    flags: int
    tex_id: Any
    tex_desired_width: int
    tex_glyph_padding: int
    locked: Any
    user_data: Any
    tex_ready: Any
    tex_pixels_use_colors: Any
    tex_pixels_alpha8: str
    tex_pixels_rgba32: int
    tex_width: int
    tex_height: int
    tex_uv_scale: tuple
    tex_uv_white_pixel: tuple
    fonts: _ImVector_ImFontPtr
    custom_rects: _ImVector_ImFontAtlasCustomRect
    config_data: _ImVector_ImFontConfig
    tex_uv_lines: tuple
    font_builder_io: _ImFontBuilderIO
    font_builder_flags: int
    pack_id_mouse_cursors: int
    pack_id_lines: int
    def font_atlas() -> _ImFontAtlas: ...
    def destroy(self: _ImFontAtlas) -> None: ...
    def add_custom_rect_font_glyph(self: _ImFontAtlas, font: _ImFont, id_: int, width: int, height: int, advance_x: float, offset: tuple=(0, 0)) -> int: ...
    def add_custom_rect_regular(self: _ImFontAtlas, width: int, height: int) -> int: ...
    def add_font(self: _ImFontAtlas, font_cfg: _ImFontConfig) -> _ImFont: ...
    def add_font_default(self: _ImFontAtlas, font_cfg: _ImFontConfig=None) -> _ImFont: ...
    def add_font_from_file_ttf(self: _ImFontAtlas, filename: str, size_pixels: float, font_cfg: _ImFontConfig=None, glyph_ranges: int=None) -> _ImFont: ...
    def add_font_from_memory_compressed_base_85ttf(self: _ImFontAtlas, compressed_font_data_base85: str, size_pixels: float, font_cfg: _ImFontConfig=None, glyph_ranges: int=None) -> _ImFont: ...
    def add_font_from_memory_compressed_ttf(self: _ImFontAtlas, compressed_font_data: Any, compressed_font_size: int, size_pixels: float, font_cfg: _ImFontConfig=None, glyph_ranges: int=None) -> _ImFont: ...
    def add_font_from_memory_ttf(self: _ImFontAtlas, font_data: Any, font_size: int, size_pixels: float, font_cfg: _ImFontConfig=None, glyph_ranges: int=None) -> _ImFont: ...
    def build(self: _ImFontAtlas) -> Any: ...
    def calc_custom_rect_uv(self: _ImFontAtlas, rect: _ImFontAtlasCustomRect, out_uv_min: _ImVec2, out_uv_max: _ImVec2) -> None: ...
    def clear(self: _ImFontAtlas) -> None: ...
    def clear_fonts(self: _ImFontAtlas) -> None: ...
    def clear_input_data(self: _ImFontAtlas) -> None: ...
    def clear_tex_data(self: _ImFontAtlas) -> None: ...
    def get_custom_rect_by_index(self: _ImFontAtlas, index: int) -> _ImFontAtlasCustomRect: ...
    def get_glyph_ranges_chinese_full(self: _ImFontAtlas) -> int: ...
    def get_glyph_ranges_chinese_simplified_common(self: _ImFontAtlas) -> int: ...
    def get_glyph_ranges_cyrillic(self: _ImFontAtlas) -> int: ...
    def get_glyph_ranges_default(self: _ImFontAtlas) -> int: ...
    def get_glyph_ranges_greek(self: _ImFontAtlas) -> int: ...
    def get_glyph_ranges_japanese(self: _ImFontAtlas) -> int: ...
    def get_glyph_ranges_korean(self: _ImFontAtlas) -> int: ...
    def get_glyph_ranges_thai(self: _ImFontAtlas) -> int: ...
    def get_glyph_ranges_vietnamese(self: _ImFontAtlas) -> int: ...
    def get_mouse_cursor_tex_data(self: _ImFontAtlas, cursor: int, out_offset: _ImVec2, out_size: _ImVec2, out_uv_border0: tuple, out_uv_border1: tuple, out_uv_fill0: tuple, out_uv_fill1: tuple) -> Any: ...
    def get_tex_data_as_alpha8(self: _ImFontAtlas, out_pixels: Any, out_width: int, out_height: int, out_bytes_per_pixel: int=None) -> None: ...
    def get_tex_data_as_rgba32(self: _ImFontAtlas, out_pixels: Any, out_width: int, out_height: int, out_bytes_per_pixel: int=None) -> None: ...
    def is_built(self: _ImFontAtlas) -> Any: ...
    def set_tex_id(self: _ImFontAtlas, id_: Any) -> None: ...

class _ImFontAtlasCustomRect:
    width: int
    height: int
    x: int
    y: int
    glyph_id: int
    glyph_advancex: float
    glyph_offset: tuple
    font: _ImFont
    def font_atlas_custom_rect() -> _ImFontAtlasCustomRect: ...
    def destroy(self: _ImFontAtlasCustomRect) -> None: ...
    def is_packed(self: _ImFontAtlasCustomRect) -> Any: ...

class _ImFontConfig:
    font_data: Any
    font_data_size: int
    font_data_owned_by_atlas: Any
    font_no: int
    size_pixels: float
    oversampleh: int
    oversamplev: int
    pixel_snaph: Any
    glyph_extra_spacing: tuple
    glyph_offset: tuple
    glyph_ranges: int
    glyph_min_advancex: float
    glyph_max_advancex: float
    merge_mode: Any
    font_builder_flags: int
    rasterizer_multiply: float
    ellipsis_char: int
    name: int
    dst_font: _ImFont
    def font_config() -> _ImFontConfig: ...
    def destroy(self: _ImFontConfig) -> None: ...

class _ImFontGlyphRangesBuilder:
    used_chars: _ImVector_ImU32
    def font_glyph_ranges_builder() -> _ImFontGlyphRangesBuilder: ...
    def destroy(self: _ImFontGlyphRangesBuilder) -> None: ...
    def add_char(self: _ImFontGlyphRangesBuilder, c: int) -> None: ...
    def add_ranges(self: _ImFontGlyphRangesBuilder, ranges: int) -> None: ...
    def add_text(self: _ImFontGlyphRangesBuilder, text: str, text_end: str=None) -> None: ...
    def build_ranges(self: _ImFontGlyphRangesBuilder, out_ranges: _ImVector_ImWchar) -> None: ...
    def clear(self: _ImFontGlyphRangesBuilder) -> None: ...
    def get_bit(self: _ImFontGlyphRangesBuilder, n: Any) -> Any: ...
    def set_bit(self: _ImFontGlyphRangesBuilder, n: Any) -> None: ...

class _ImGuiIO:
    config_flags: int
    backend_flags: int
    display_size: tuple
    delta_time: float
    ini_saving_rate: float
    ini_filename: str
    log_filename: str
    mouse_double_click_time: float
    mouse_double_click_max_dist: float
    mouse_drag_threshold: float
    key_repeat_delay: float
    key_repeat_rate: float
    hover_delay_normal: float
    hover_delay_short: float
    user_data: Any
    fonts: _ImFontAtlas
    font_global_scale: float
    font_allow_user_scaling: Any
    font_default: _ImFont
    display_framebuffer_scale: tuple
    config_docking_no_split: Any
    config_docking_with_shift: Any
    config_docking_always_tab_bar: Any
    config_docking_transparent_payload: Any
    config_viewports_no_auto_merge: Any
    config_viewports_no_task_bar_icon: Any
    config_viewports_no_decoration: Any
    config_viewports_no_default_parent: Any
    mouse_draw_cursor: Any
    config_mac_osx_behaviors: Any
    config_input_trickle_event_queue: Any
    config_input_text_cursor_blink: Any
    config_input_text_enter_keep_active: Any
    config_drag_click_to_input_text: Any
    config_windows_resize_from_edges: Any
    config_windows_move_from_title_bar_only: Any
    config_memory_compact_timer: float
    backend_platform_name: str
    backend_renderer_name: str
    backend_platform_user_data: Any
    backend_renderer_user_data: Any
    backend_language_user_data: Any
    get_clipboard_text_fn: Callable
    set_clipboard_text_fn: Callable
    clipboard_user_data: Any
    set_platform_ime_data_fn: Callable
    _unused_padding: Any
    want_capture_mouse: Any
    want_capture_keyboard: Any
    want_text_input: Any
    want_set_mouse_pos: Any
    want_save_ini_settings: Any
    nav_active: Any
    nav_visible: Any
    framerate: float
    metrics_render_vertices: int
    metrics_render_indices: int
    metrics_render_windows: int
    metrics_active_windows: int
    metrics_active_allocations: int
    mouse_delta: tuple
    key_map: int
    keys_down: Any
    nav_inputs: float
    mouse_pos: tuple
    mouse_down: Any
    mouse_wheel: float
    mouse_wheelh: float
    mouse_hovered_viewport: int
    key_ctrl: Any
    key_shift: Any
    key_alt: Any
    key_super: Any
    key_mods: int
    keys_data: _ImGuiKeyData
    want_capture_mouse_unless_popup_close: Any
    mouse_pos_prev: tuple
    mouse_clicked_pos: tuple
    mouse_clicked_time: float
    mouse_clicked: Any
    mouse_double_clicked: Any
    mouse_clicked_count: int
    mouse_clicked_last_count: int
    mouse_released: Any
    mouse_down_owned: Any
    mouse_down_owned_unless_popup_close: Any
    mouse_down_duration: float
    mouse_down_duration_prev: float
    mouse_drag_max_distance_abs: tuple
    mouse_drag_max_distance_sqr: float
    pen_pressure: float
    app_focus_lost: Any
    app_accepting_events: Any
    backend_using_legacy_key_arrays: int
    backend_using_legacy_nav_input_array: Any
    input_queue_surrogate: int
    input_queue_characters: _ImVector_ImWchar
    def gui_io() -> _ImGuiIO: ...
    def destroy(self: _ImGuiIO) -> None: ...
    def add_focus_event(self: _ImGuiIO, focused: Any) -> None: ...
    def add_input_character(self: _ImGuiIO, c: int) -> None: ...
    def add_input_character_utf16(self: _ImGuiIO, c: int) -> None: ...
    def add_input_characters_utf8(self: _ImGuiIO, str_: str) -> None: ...
    def add_key_analog_event(self: _ImGuiIO, key: Any, down: Any, value: float) -> None: ...
    def add_key_event(self: _ImGuiIO, key: Any, down: Any) -> None: ...
    def add_mouse_button_event(self: _ImGuiIO, button: int, down: Any) -> None: ...
    def add_mouse_pos_event(self: _ImGuiIO, x: float, y: float) -> None: ...
    def add_mouse_viewport_event(self: _ImGuiIO, id_: int) -> None: ...
    def add_mouse_wheel_event(self: _ImGuiIO, wheel_x: float, wheel_y: float) -> None: ...
    def clear_input_characters(self: _ImGuiIO) -> None: ...
    def clear_input_keys(self: _ImGuiIO) -> None: ...
    def set_app_accepting_events(self: _ImGuiIO, accepting_events: Any) -> None: ...
    def set_key_event_native_data(self: _ImGuiIO, key: Any, native_keycode: int, native_scancode: int, native_legacy_index: int=-1) -> None: ...

class _ImGuiPlatformIO:
    platform_create_window: Callable
    platform_destroy_window: Callable
    platform_show_window: Callable
    platform_set_window_pos: Callable
    platform_get_window_pos: Callable
    platform_set_window_size: Callable
    platform_get_window_size: Callable
    platform_set_window_focus: Callable
    platform_get_window_focus: Callable
    platform_get_window_minimized: Callable
    platform_set_window_title: Callable
    platform_set_window_alpha: Callable
    platform_update_window: Callable
    platform_render_window: Callable
    platform_swap_buffers: Callable
    platform_get_window_dpi_scale: Callable
    platform_on_changed_viewport: Callable
    platform_create_vk_surface: Callable
    renderer_create_window: Callable
    renderer_destroy_window: Callable
    renderer_set_window_size: Callable
    renderer_render_window: Callable
    renderer_swap_buffers: Callable
    monitors: _ImVector_ImGuiPlatformMonitor
    viewports: _ImVector_ImGuiViewportPtr
    def gui_platform_io() -> _ImGuiPlatformIO: ...
    def destroy(self: _ImGuiPlatformIO) -> None: ...

class _ImGuiPlatformImeData:
    want_visible: Any
    input_pos: tuple
    input_line_height: float
    def gui_platform_ime_data() -> _ImGuiPlatformImeData: ...
    def destroy(self: _ImGuiPlatformImeData) -> None: ...

class _ImGuiPlatformMonitor:
    main_pos: tuple
    main_size: tuple
    work_pos: tuple
    work_size: tuple
    dpi_scale: float
    def gui_platform_monitor() -> _ImGuiPlatformMonitor: ...
    def destroy(self: _ImGuiPlatformMonitor) -> None: ...

class _ImGuiStorage:
    data: _ImVector_ImGuiStoragePair
    def build_sort_by_key(self: _ImGuiStorage) -> None: ...
    def clear(self: _ImGuiStorage) -> None: ...
    def get_bool(self: _ImGuiStorage, key: int, default_val: Any=False) -> Any: ...
    def get_bool_ref(self: _ImGuiStorage, key: int, default_val: Any=False) -> Any: ...
    def get_float(self: _ImGuiStorage, key: int, default_val: float=0.0) -> float: ...
    def get_float_ref(self: _ImGuiStorage, key: int, default_val: float=0.0) -> float: ...
    def get_int(self: _ImGuiStorage, key: int, default_val: int=0) -> int: ...
    def get_int_ref(self: _ImGuiStorage, key: int, default_val: int=0) -> int: ...
    def get_void_ptr(self: _ImGuiStorage, key: int) -> Any: ...
    def get_void_ptr_ref(self: _ImGuiStorage, key: int, default_val: Any=None) -> Any: ...
    def set_all_int(self: _ImGuiStorage, val: int) -> None: ...
    def set_bool(self: _ImGuiStorage, key: int, val: Any) -> None: ...
    def set_float(self: _ImGuiStorage, key: int, val: float) -> None: ...
    def set_int(self: _ImGuiStorage, key: int, val: int) -> None: ...
    def set_void_ptr(self: _ImGuiStorage, key: int, val: Any) -> None: ...

class _ImGuiStyle:
    alpha: float
    disabled_alpha: float
    window_padding: tuple
    window_rounding: float
    window_border_size: float
    window_min_size: tuple
    window_title_align: tuple
    window_menu_button_position: int
    child_rounding: float
    child_border_size: float
    popup_rounding: float
    popup_border_size: float
    frame_padding: tuple
    frame_rounding: float
    frame_border_size: float
    item_spacing: tuple
    item_inner_spacing: tuple
    cell_padding: tuple
    touch_extra_padding: tuple
    indent_spacing: float
    columns_min_spacing: float
    scrollbar_size: float
    scrollbar_rounding: float
    grab_min_size: float
    grab_rounding: float
    log_slider_deadzone: float
    tab_rounding: float
    tab_border_size: float
    tab_min_width_for_close_button: float
    color_button_position: int
    button_text_align: tuple
    selectable_text_align: tuple
    separator_text_border_size: float
    separator_text_align: tuple
    separator_text_padding: tuple
    display_window_padding: tuple
    display_safe_area_padding: tuple
    mouse_cursor_scale: float
    anti_aliased_lines: Any
    anti_aliased_lines_use_tex: Any
    anti_aliased_fill: Any
    curve_tessellation_tol: float
    circle_tessellation_max_error: float
    colors: tuple
    def gui_style() -> _ImGuiStyle: ...
    def destroy(self: _ImGuiStyle) -> None: ...
    def scale_all_sizes(self: _ImGuiStyle, scale_factor: float) -> None: ...

class _ImGuiTextBuffer:
    buf: _ImVector_char
    def gui_text_buffer() -> _ImGuiTextBuffer: ...
    def destroy(self: _ImGuiTextBuffer) -> None: ...
    def append(self: _ImGuiTextBuffer, str_: str, str_end: str=None) -> None: ...
    def appendf(self: _ImGuiTextBuffer, fmt: str) -> None: ...
    def appendfv(self: _ImGuiTextBuffer, fmt: str, args: str) -> None: ...
    def begin(self: _ImGuiTextBuffer) -> str: ...
    def c_str(self: _ImGuiTextBuffer) -> str: ...
    def clear(self: _ImGuiTextBuffer) -> None: ...
    def empty(self: _ImGuiTextBuffer) -> Any: ...
    def end(self: _ImGuiTextBuffer) -> str: ...
    def reserve(self: _ImGuiTextBuffer, capacity: int) -> None: ...
    def size(self: _ImGuiTextBuffer) -> int: ...

class _ImGuiTextFilter:
    input_buf: int
    filters: _ImVector_ImGuiTextRange
    count_grep: int
    def gui_text_filter(default_filter: str="") -> _ImGuiTextFilter: ...
    def destroy(self: _ImGuiTextFilter) -> None: ...
    def build(self: _ImGuiTextFilter) -> None: ...
    def clear(self: _ImGuiTextFilter) -> None: ...
    def draw(self: _ImGuiTextFilter, label: str="Filter(inc, -exc)", width: float=0.0) -> Any: ...
    def is_active(self: _ImGuiTextFilter) -> Any: ...
    def pass_filter(self: _ImGuiTextFilter, text: str, text_end: str=None) -> Any: ...

class _ImGuiViewport:
    id: int
    flags: int
    pos: tuple
    size: tuple
    work_pos: tuple
    work_size: tuple
    dpi_scale: float
    parent_viewport_id: int
    draw_data: _ImDrawData
    renderer_user_data: Any
    platform_user_data: Any
    platform_handle: Any
    platform_handle_raw: Any
    platform_window_created: Any
    platform_request_move: Any
    platform_request_resize: Any
    platform_request_close: Any
    def gui_viewport() -> _ImGuiViewport: ...
    def destroy(self: _ImGuiViewport) -> None: ...
    def get_center(pOut: _ImVec2, self: _ImGuiViewport) -> None: ...
    def get_work_center(pOut: _ImVec2, self: _ImGuiViewport) -> None: ...

class _ImDrawList:
    cmd_buffer: _ImVector_ImDrawCmd
    idx_buffer: _ImVector_ImDrawIdx
    vtx_buffer: _ImVector_ImDrawVert
    flags: int
    _vtx_current_idx: int
    _data: _ImDrawListSharedData
    _owner_name: str
    _vtx_write_ptr: _ImDrawVert
    _idx_write_ptr: int
    _clip_rect_stack: _ImVector_ImVec4
    _texture_id_stack: _ImVector_ImTextureID
    _path: _ImVector_ImVec2
    _cmd_header: _ImDrawCmdHeader
    _splitter: _ImDrawListSplitter
    _fringe_scale: float
    def draw_list(shared_data: _ImDrawListSharedData) -> _ImDrawList: ...
    def destroy(self: _ImDrawList) -> None: ...
    def add_bezier_cubic(self: _ImDrawList, p1: tuple, p2: tuple, p3: tuple, p4: tuple, col: int, thickness: float, num_segments: int=0) -> None: ...
    def add_bezier_quadratic(self: _ImDrawList, p1: tuple, p2: tuple, p3: tuple, col: int, thickness: float, num_segments: int=0) -> None: ...
    def add_circle(self: _ImDrawList, center: tuple, radius: float, col: int, num_segments: int=0, thickness: float=1.0) -> None: ...
    def add_circle_filled(self: _ImDrawList, center: tuple, radius: float, col: int, num_segments: int=0) -> None: ...
    def add_convex_poly_filled(self: _ImDrawList, points: _ImVec2, num_points: int, col: int) -> None: ...
    def add_draw_cmd(self: _ImDrawList) -> None: ...
    def add_image(self: _ImDrawList, user_texture_id: Any, p_min: tuple, p_max: tuple, uv_min: tuple=(0, 0), uv_max: tuple=(1, 1), col: int=4294967295) -> None: ...
    def add_image_quad(self: _ImDrawList, user_texture_id: Any, p1: tuple, p2: tuple, p3: tuple, p4: tuple, uv1: tuple=(0, 0), uv2: tuple=(1, 0), uv3: tuple=(1, 1), uv4: tuple=(0, 1), col: int=4294967295) -> None: ...
    def add_image_rounded(self: _ImDrawList, user_texture_id: Any, p_min: tuple, p_max: tuple, uv_min: tuple, uv_max: tuple, col: int, rounding: float, flags: int=0) -> None: ...
    def add_line(self: _ImDrawList, p1: tuple, p2: tuple, col: int, thickness: float=1.0) -> None: ...
    def add_ngon(self: _ImDrawList, center: tuple, radius: float, col: int, num_segments: int, thickness: float=1.0) -> None: ...
    def add_ngon_filled(self: _ImDrawList, center: tuple, radius: float, col: int, num_segments: int) -> None: ...
    def add_polyline(self: _ImDrawList, points: _ImVec2, num_points: int, col: int, flags: int, thickness: float) -> None: ...
    def add_quad(self: _ImDrawList, p1: tuple, p2: tuple, p3: tuple, p4: tuple, col: int, thickness: float=1.0) -> None: ...
    def add_quad_filled(self: _ImDrawList, p1: tuple, p2: tuple, p3: tuple, p4: tuple, col: int) -> None: ...
    def add_rect(self: _ImDrawList, p_min: tuple, p_max: tuple, col: int, rounding: float=0.0, flags: int=0, thickness: float=1.0) -> None: ...
    def add_rect_filled(self: _ImDrawList, p_min: tuple, p_max: tuple, col: int, rounding: float=0.0, flags: int=0) -> None: ...
    def add_rect_filled_multi_color(self: _ImDrawList, p_min: tuple, p_max: tuple, col_upr_left: int, col_upr_right: int, col_bot_right: int, col_bot_left: int) -> None: ...
    def add_text_font_ptr(self: _ImDrawList, font: _ImFont, font_size: float, pos: tuple, col: int, text_begin: str, text_end: str=None, wrap_width: float=0.0, cpu_fine_clip_rect: _ImVec4=None) -> None: ...
    def add_text_vec2(self: _ImDrawList, pos: tuple, col: int, text_begin: str, text_end: str=None) -> None: ...
    def add_triangle(self: _ImDrawList, p1: tuple, p2: tuple, p3: tuple, col: int, thickness: float=1.0) -> None: ...
    def add_triangle_filled(self: _ImDrawList, p1: tuple, p2: tuple, p3: tuple, col: int) -> None: ...
    def channels_merge(self: _ImDrawList) -> None: ...
    def channels_set_current(self: _ImDrawList, n: int) -> None: ...
    def channels_split(self: _ImDrawList, count: int) -> None: ...
    def clone_output(self: _ImDrawList) -> _ImDrawList: ...
    def get_clip_rect_max(pOut: _ImVec2, self: _ImDrawList) -> None: ...
    def get_clip_rect_min(pOut: _ImVec2, self: _ImDrawList) -> None: ...
    def path_arc_to(self: _ImDrawList, center: tuple, radius: float, a_min: float, a_max: float, num_segments: int=0) -> None: ...
    def path_arc_to_fast(self: _ImDrawList, center: tuple, radius: float, a_min_of_12: int, a_max_of_12: int) -> None: ...
    def path_bezier_cubic_curve_to(self: _ImDrawList, p2: tuple, p3: tuple, p4: tuple, num_segments: int=0) -> None: ...
    def path_bezier_quadratic_curve_to(self: _ImDrawList, p2: tuple, p3: tuple, num_segments: int=0) -> None: ...
    def path_clear(self: _ImDrawList) -> None: ...
    def path_fill_convex(self: _ImDrawList, col: int) -> None: ...
    def path_line_to(self: _ImDrawList, pos: tuple) -> None: ...
    def path_line_to_merge_duplicate(self: _ImDrawList, pos: tuple) -> None: ...
    def path_rect(self: _ImDrawList, rect_min: tuple, rect_max: tuple, rounding: float=0.0, flags: int=0) -> None: ...
    def path_stroke(self: _ImDrawList, col: int, flags: int=0, thickness: float=1.0) -> None: ...
    def pop_clip_rect(self: _ImDrawList) -> None: ...
    def pop_texture_id(self: _ImDrawList) -> None: ...
    def prim_quad_uv(self: _ImDrawList, a: tuple, b: tuple, c: tuple, d: tuple, uv_a: tuple, uv_b: tuple, uv_c: tuple, uv_d: tuple, col: int) -> None: ...
    def prim_rect(self: _ImDrawList, a: tuple, b: tuple, col: int) -> None: ...
    def prim_rect_uv(self: _ImDrawList, a: tuple, b: tuple, uv_a: tuple, uv_b: tuple, col: int) -> None: ...
    def prim_reserve(self: _ImDrawList, idx_count: int, vtx_count: int) -> None: ...
    def prim_unreserve(self: _ImDrawList, idx_count: int, vtx_count: int) -> None: ...
    def prim_vtx(self: _ImDrawList, pos: tuple, uv: tuple, col: int) -> None: ...
    def prim_write_idx(self: _ImDrawList, idx: int) -> None: ...
    def prim_write_vtx(self: _ImDrawList, pos: tuple, uv: tuple, col: int) -> None: ...
    def push_clip_rect(self: _ImDrawList, clip_rect_min: tuple, clip_rect_max: tuple, intersect_with_current_clip_rect: Any=False) -> None: ...
    def push_clip_rect_full_screen(self: _ImDrawList) -> None: ...
    def push_texture_id(self: _ImDrawList, texture_id: Any) -> None: ...
    def _calc_circle_auto_segment_count(self: _ImDrawList, radius: float) -> int: ...
    def _clear_free_memory(self: _ImDrawList) -> None: ...
    def _on_changed_clip_rect(self: _ImDrawList) -> None: ...
    def _on_changed_texture_id(self: _ImDrawList) -> None: ...
    def _on_changed_vtx_offset(self: _ImDrawList) -> None: ...
    def _path_arc_to_fast_ex(self: _ImDrawList, center: tuple, radius: float, a_min_sample: int, a_max_sample: int, a_step: int) -> None: ...
    def _path_arc_ton(self: _ImDrawList, center: tuple, radius: float, a_min: float, a_max: float, num_segments: int) -> None: ...
    def _pop_unused_draw_cmd(self: _ImDrawList) -> None: ...
    def _reset_for_new_frame(self: _ImDrawList) -> None: ...
    def _try_merge_draw_cmds(self: _ImDrawList) -> None: ...

class _ImDrawListSharedData: ...
class _ImFontBuilderIO: ...
class _ImGuiContext: ...
