from typing import Any, Callable

def accept_drag_drop_payload(type_: str, flags: int) -> Any: ...
def align_text_to_frame_padding() -> None: ...
def arrow_button(str_id: str, dir_: int) -> bool: ...
def begin(name: str, p_open: Any, flags: int) -> bool: ...
def begin_child_frame(id_: Any, size: Any, flags: int) -> bool: ...
def begin_child_id(id_: Any, size: Any, border: bool, flags: int) -> bool: ...
def begin_child_str(str_id: str, size: Any, border: bool, flags: int) -> bool: ...
def begin_combo(label: str, preview_value: str, flags: int) -> bool: ...
def begin_disabled(disabled: bool) -> None: ...
def begin_drag_drop_source(flags: int) -> bool: ...
def begin_drag_drop_target() -> bool: ...
def begin_group() -> None: ...
def begin_list_box(label: str, size: Any) -> bool: ...
def begin_main_menu_bar() -> bool: ...
def begin_menu(label: str, enabled: bool) -> bool: ...
def begin_menu_bar() -> bool: ...
def begin_popup(str_id: str, flags: int) -> bool: ...
def begin_popup_context_item(str_id: str, popup_flags: int) -> bool: ...
def begin_popup_context_void(str_id: str, popup_flags: int) -> bool: ...
def begin_popup_context_window(str_id: str, popup_flags: int) -> bool: ...
def begin_popup_modal(name: str, p_open: Any, flags: int) -> bool: ...
def begin_tab_bar(str_id: str, flags: int) -> bool: ...
def begin_tab_item(label: str, p_open: Any, flags: int) -> bool: ...
def begin_table(str_id: str, column: int, flags: int, outer_size: Any, inner_width: float) -> bool: ...
def begin_tooltip() -> None: ...
def bullet() -> None: ...
def bullet_text(fmt: str) -> None: ...
def bullet_textv(fmt: str, args: str) -> None: ...
def button(label: str, size: Any) -> bool: ...
def calc_item_width() -> float: ...
def calc_text_size(pOut: Any, text: str, text_end: str, hide_text_after_double_hash: bool, wrap_width: float) -> None: ...
def checkbox(label: str, v: Any) -> bool: ...
def checkbox_flags_int_ptr(label: str, flags: Any, flags_value: int) -> bool: ...
def checkbox_flags_uint_ptr(label: str, flags: Any, flags_value: Any) -> bool: ...
def close_current_popup() -> None: ...
def collapsing_header_bool_ptr(label: str, p_visible: Any, flags: int) -> bool: ...
def collapsing_header_tree_node_flags(label: str, flags: int) -> bool: ...
def color_button(desc_id: str, col: Any, flags: int, size: Any) -> bool: ...
def color_convert_float_4_to_u32(in_: Any) -> Any: ...
def color_convert_hs_vto_rgb(h: float, s: float, v: float, out_r: Any, out_g: Any, out_b: Any) -> None: ...
def color_convert_rg_bto_hsv(r: float, g: float, b: float, out_h: Any, out_s: Any, out_v: Any) -> None: ...
def color_convert_u32_to_float4(pOut: Any, in_: Any) -> None: ...
def color_edit3(label: str, col: float, flags: int) -> bool: ...
def color_edit4(label: str, col: float, flags: int) -> bool: ...
def color_picker3(label: str, col: float, flags: int) -> bool: ...
def color_picker4(label: str, col: float, flags: int, ref_col: Any) -> bool: ...
def columns(count: int, id_: str, border: bool) -> None: ...
def combo_fn_bool_ptr(label: str, current_item: Any, items_getter: Callable, data: Any, items_count: int, popup_max_height_in_items: int) -> bool: ...
def combo_str(label: str, current_item: Any, items_separated_by_zeros: str, popup_max_height_in_items: int) -> bool: ...
def combo_str_arr(label: str, current_item: Any, items: str, items_count: int, popup_max_height_in_items: int) -> bool: ...
def create_context(shared_font_atlas: Any) -> Any: ...
def debug_check_version_and_data_layout(version_str: str, sz_io: Any, sz_style: Any, sz_vec2: Any, sz_vec4: Any, sz_drawvert: Any, sz_drawidx: Any) -> bool: ...
def debug_text_encoding(text: str) -> None: ...
def destroy_context(ctx: Any) -> None: ...
def destroy_platform_windows() -> None: ...
def dock_space(id_: Any, size: Any, flags: int, window_class: Any) -> Any: ...
def dock_space_over_viewport(viewport: Any, flags: int, window_class: Any) -> Any: ...
def drag_float(label: str, v: Any, v_speed: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def drag_float2(label: str, v: float, v_speed: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def drag_float3(label: str, v: float, v_speed: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def drag_float4(label: str, v: float, v_speed: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def drag_float_range2(label: str, v_current_min: Any, v_current_max: Any, v_speed: float, v_min: float, v_max: float, format_: str, format_max: str, flags: int) -> bool: ...
def drag_int(label: str, v: Any, v_speed: float, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def drag_int2(label: str, v: int, v_speed: float, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def drag_int3(label: str, v: int, v_speed: float, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def drag_int4(label: str, v: int, v_speed: float, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def drag_int_range2(label: str, v_current_min: Any, v_current_max: Any, v_speed: float, v_min: int, v_max: int, format_: str, format_max: str, flags: int) -> bool: ...
def drag_scalar(label: str, data_type: int, p_data: Any, v_speed: float, p_min: Any, p_max: Any, format_: str, flags: int) -> bool: ...
def drag_scalarn(label: str, data_type: int, p_data: Any, components: int, v_speed: float, p_min: Any, p_max: Any, format_: str, flags: int) -> bool: ...
def dummy(size: Any) -> None: ...
def end() -> None: ...
def end_child() -> None: ...
def end_child_frame() -> None: ...
def end_combo() -> None: ...
def end_disabled() -> None: ...
def end_drag_drop_source() -> None: ...
def end_drag_drop_target() -> None: ...
def end_frame() -> None: ...
def end_group() -> None: ...
def end_list_box() -> None: ...
def end_main_menu_bar() -> None: ...
def end_menu() -> None: ...
def end_menu_bar() -> None: ...
def end_popup() -> None: ...
def end_tab_bar() -> None: ...
def end_tab_item() -> None: ...
def end_table() -> None: ...
def end_tooltip() -> None: ...
def find_viewport_by_id(id_: Any) -> Any: ...
def find_viewport_by_platform_handle(platform_handle: Any) -> Any: ...
def get_allocator_functions(p_alloc_func: Any, p_free_func: Any, p_user_data: Any) -> None: ...
def get_background_draw_list_nil() -> Any: ...
def get_background_draw_list_viewport_ptr(viewport: Any) -> Any: ...
def get_clipboard_text() -> str: ...
def get_color_u32_col(idx: int, alpha_mul: float) -> Any: ...
def get_color_u32_u32(col: Any) -> Any: ...
def get_color_u32_vec4(col: Any) -> Any: ...
def get_column_index() -> int: ...
def get_column_offset(column_index: int) -> float: ...
def get_column_width(column_index: int) -> float: ...
def get_columns_count() -> int: ...
def get_content_region_avail(pOut: Any) -> None: ...
def get_content_region_max(pOut: Any) -> None: ...
def get_current_context() -> Any: ...
def get_cursor_pos(pOut: Any) -> None: ...
def get_cursor_posx() -> float: ...
def get_cursor_posy() -> float: ...
def get_cursor_screen_pos(pOut: Any) -> None: ...
def get_cursor_start_pos(pOut: Any) -> None: ...
def get_drag_drop_payload() -> Any: ...
def get_draw_data() -> Any: ...
def get_draw_list_shared_data() -> Any: ...
def get_flt_max() -> float: ...
def get_flt_min() -> float: ...
def get_font() -> Any: ...
def get_font_size() -> float: ...
def get_font_tex_uv_white_pixel(pOut: Any) -> None: ...
def get_foreground_draw_list_nil() -> Any: ...
def get_foreground_draw_list_viewport_ptr(viewport: Any) -> Any: ...
def get_frame_count() -> int: ...
def get_frame_height() -> float: ...
def get_frame_height_with_spacing() -> float: ...
def get_id_ptr(ptr_id: Any) -> Any: ...
def get_id_str(str_id: str) -> Any: ...
def get_id_str_str(str_id_begin: str, str_id_end: str) -> Any: ...
def get_io() -> Any: ...
def get_item_id() -> Any: ...
def get_item_rect_max(pOut: Any) -> None: ...
def get_item_rect_min(pOut: Any) -> None: ...
def get_item_rect_size(pOut: Any) -> None: ...
def get_key_index(key: int) -> int: ...
def get_key_name(key: int) -> str: ...
def get_key_pressed_amount(key: int, repeat_delay: float, rate: float) -> int: ...
def get_main_viewport() -> Any: ...
def get_mouse_clicked_count(button: int) -> int: ...
def get_mouse_cursor() -> int: ...
def get_mouse_drag_delta(pOut: Any, button: int, lock_threshold: float) -> None: ...
def get_mouse_pos(pOut: Any) -> None: ...
def get_mouse_pos_on_opening_current_popup(pOut: Any) -> None: ...
def get_platform_io() -> Any: ...
def get_scroll_maxx() -> float: ...
def get_scroll_maxy() -> float: ...
def get_scrollx() -> float: ...
def get_scrolly() -> float: ...
def get_state_storage() -> Any: ...
def get_style() -> Any: ...
def get_style_color_name(idx: int) -> str: ...
def get_style_color_vec4(idx: int) -> Any: ...
def get_text_line_height() -> float: ...
def get_text_line_height_with_spacing() -> float: ...
def get_time() -> float: ...
def get_tree_node_to_label_spacing() -> float: ...
def get_version() -> str: ...
def get_window_content_region_max(pOut: Any) -> None: ...
def get_window_content_region_min(pOut: Any) -> None: ...
def get_window_dock_id() -> Any: ...
def get_window_dpi_scale() -> float: ...
def get_window_draw_list() -> Any: ...
def get_window_height() -> float: ...
def get_window_pos(pOut: Any) -> None: ...
def get_window_size(pOut: Any) -> None: ...
def get_window_viewport() -> Any: ...
def get_window_width() -> float: ...
def im_color_destroy(self: Any) -> None: ...
def im_color_hsv(pOut: Any, h: float, s: float, v: float, a: float) -> None: ...
def im_color_im_color_float(r: float, g: float, b: float, a: float) -> Any: ...
def im_color_im_color_int(r: int, g: int, b: int, a: int) -> Any: ...
def im_color_im_color_nil() -> Any: ...
def im_color_im_color_u32(rgba: Any) -> Any: ...
def im_color_im_color_vec4(col: Any) -> Any: ...
def im_color_set_hsv(self: Any, h: float, s: float, v: float, a: float) -> None: ...
def im_draw_cmd_destroy(self: Any) -> None: ...
def im_draw_cmd_get_tex_id(self: Any) -> Any: ...
def im_draw_cmd_im_draw_cmd() -> Any: ...
def im_draw_data_clear(self: Any) -> None: ...
def im_draw_data_de_index_all_buffers(self: Any) -> None: ...
def im_draw_data_destroy(self: Any) -> None: ...
def im_draw_data_im_draw_data() -> Any: ...
def im_draw_data_scale_clip_rects(self: Any, fb_scale: Any) -> None: ...
def im_draw_list__calc_circle_auto_segment_count(self: Any, radius: float) -> int: ...
def im_draw_list__clear_free_memory(self: Any) -> None: ...
def im_draw_list__on_changed_clip_rect(self: Any) -> None: ...
def im_draw_list__on_changed_texture_id(self: Any) -> None: ...
def im_draw_list__on_changed_vtx_offset(self: Any) -> None: ...
def im_draw_list__path_arc_to_fast_ex(self: Any, center: Any, radius: float, a_min_sample: int, a_max_sample: int, a_step: int) -> None: ...
def im_draw_list__path_arc_ton(self: Any, center: Any, radius: float, a_min: float, a_max: float, num_segments: int) -> None: ...
def im_draw_list__pop_unused_draw_cmd(self: Any) -> None: ...
def im_draw_list__reset_for_new_frame(self: Any) -> None: ...
def im_draw_list__try_merge_draw_cmds(self: Any) -> None: ...
def im_draw_list_add_bezier_cubic(self: Any, p1: Any, p2: Any, p3: Any, p4: Any, col: Any, thickness: float, num_segments: int) -> None: ...
def im_draw_list_add_bezier_quadratic(self: Any, p1: Any, p2: Any, p3: Any, col: Any, thickness: float, num_segments: int) -> None: ...
def im_draw_list_add_callback(self: Any, callback: Any, callback_data: Any) -> None: ...
def im_draw_list_add_circle(self: Any, center: Any, radius: float, col: Any, num_segments: int, thickness: float) -> None: ...
def im_draw_list_add_circle_filled(self: Any, center: Any, radius: float, col: Any, num_segments: int) -> None: ...
def im_draw_list_add_convex_poly_filled(self: Any, points: Any, num_points: int, col: Any) -> None: ...
def im_draw_list_add_draw_cmd(self: Any) -> None: ...
def im_draw_list_add_image(self: Any, user_texture_id: Any, p_min: Any, p_max: Any, uv_min: Any, uv_max: Any, col: Any) -> None: ...
def im_draw_list_add_image_quad(self: Any, user_texture_id: Any, p1: Any, p2: Any, p3: Any, p4: Any, uv1: Any, uv2: Any, uv3: Any, uv4: Any, col: Any) -> None: ...
def im_draw_list_add_image_rounded(self: Any, user_texture_id: Any, p_min: Any, p_max: Any, uv_min: Any, uv_max: Any, col: Any, rounding: float, flags: int) -> None: ...
def im_draw_list_add_line(self: Any, p1: Any, p2: Any, col: Any, thickness: float) -> None: ...
def im_draw_list_add_ngon(self: Any, center: Any, radius: float, col: Any, num_segments: int, thickness: float) -> None: ...
def im_draw_list_add_ngon_filled(self: Any, center: Any, radius: float, col: Any, num_segments: int) -> None: ...
def im_draw_list_add_polyline(self: Any, points: Any, num_points: int, col: Any, flags: int, thickness: float) -> None: ...
def im_draw_list_add_quad(self: Any, p1: Any, p2: Any, p3: Any, p4: Any, col: Any, thickness: float) -> None: ...
def im_draw_list_add_quad_filled(self: Any, p1: Any, p2: Any, p3: Any, p4: Any, col: Any) -> None: ...
def im_draw_list_add_rect(self: Any, p_min: Any, p_max: Any, col: Any, rounding: float, flags: int, thickness: float) -> None: ...
def im_draw_list_add_rect_filled(self: Any, p_min: Any, p_max: Any, col: Any, rounding: float, flags: int) -> None: ...
def im_draw_list_add_rect_filled_multi_color(self: Any, p_min: Any, p_max: Any, col_upr_left: Any, col_upr_right: Any, col_bot_right: Any, col_bot_left: Any) -> None: ...
def im_draw_list_add_text_font_ptr(self: Any, font: Any, font_size: float, pos: Any, col: Any, text_begin: str, text_end: str, wrap_width: float, cpu_fine_clip_rect: Any) -> None: ...
def im_draw_list_add_text_vec2(self: Any, pos: Any, col: Any, text_begin: str, text_end: str) -> None: ...
def im_draw_list_add_triangle(self: Any, p1: Any, p2: Any, p3: Any, col: Any, thickness: float) -> None: ...
def im_draw_list_add_triangle_filled(self: Any, p1: Any, p2: Any, p3: Any, col: Any) -> None: ...
def im_draw_list_channels_merge(self: Any) -> None: ...
def im_draw_list_channels_set_current(self: Any, n: int) -> None: ...
def im_draw_list_channels_split(self: Any, count: int) -> None: ...
def im_draw_list_clone_output(self: Any) -> Any: ...
def im_draw_list_destroy(self: Any) -> None: ...
def im_draw_list_get_clip_rect_max(pOut: Any, self: Any) -> None: ...
def im_draw_list_get_clip_rect_min(pOut: Any, self: Any) -> None: ...
def im_draw_list_im_draw_list(shared_data: Any) -> Any: ...
def im_draw_list_path_arc_to(self: Any, center: Any, radius: float, a_min: float, a_max: float, num_segments: int) -> None: ...
def im_draw_list_path_arc_to_fast(self: Any, center: Any, radius: float, a_min_of_12: int, a_max_of_12: int) -> None: ...
def im_draw_list_path_bezier_cubic_curve_to(self: Any, p2: Any, p3: Any, p4: Any, num_segments: int) -> None: ...
def im_draw_list_path_bezier_quadratic_curve_to(self: Any, p2: Any, p3: Any, num_segments: int) -> None: ...
def im_draw_list_path_clear(self: Any) -> None: ...
def im_draw_list_path_fill_convex(self: Any, col: Any) -> None: ...
def im_draw_list_path_line_to(self: Any, pos: Any) -> None: ...
def im_draw_list_path_line_to_merge_duplicate(self: Any, pos: Any) -> None: ...
def im_draw_list_path_rect(self: Any, rect_min: Any, rect_max: Any, rounding: float, flags: int) -> None: ...
def im_draw_list_path_stroke(self: Any, col: Any, flags: int, thickness: float) -> None: ...
def im_draw_list_pop_clip_rect(self: Any) -> None: ...
def im_draw_list_pop_texture_id(self: Any) -> None: ...
def im_draw_list_prim_quad_uv(self: Any, a: Any, b: Any, c: Any, d: Any, uv_a: Any, uv_b: Any, uv_c: Any, uv_d: Any, col: Any) -> None: ...
def im_draw_list_prim_rect(self: Any, a: Any, b: Any, col: Any) -> None: ...
def im_draw_list_prim_rect_uv(self: Any, a: Any, b: Any, uv_a: Any, uv_b: Any, col: Any) -> None: ...
def im_draw_list_prim_reserve(self: Any, idx_count: int, vtx_count: int) -> None: ...
def im_draw_list_prim_unreserve(self: Any, idx_count: int, vtx_count: int) -> None: ...
def im_draw_list_prim_vtx(self: Any, pos: Any, uv: Any, col: Any) -> None: ...
def im_draw_list_prim_write_idx(self: Any, idx: Any) -> None: ...
def im_draw_list_prim_write_vtx(self: Any, pos: Any, uv: Any, col: Any) -> None: ...
def im_draw_list_push_clip_rect(self: Any, clip_rect_min: Any, clip_rect_max: Any, intersect_with_current_clip_rect: bool) -> None: ...
def im_draw_list_push_clip_rect_full_screen(self: Any) -> None: ...
def im_draw_list_push_texture_id(self: Any, texture_id: Any) -> None: ...
def im_draw_list_splitter_clear(self: Any) -> None: ...
def im_draw_list_splitter_clear_free_memory(self: Any) -> None: ...
def im_draw_list_splitter_destroy(self: Any) -> None: ...
def im_draw_list_splitter_im_draw_list_splitter() -> Any: ...
def im_draw_list_splitter_merge(self: Any, draw_list: Any) -> None: ...
def im_draw_list_splitter_set_current_channel(self: Any, draw_list: Any, channel_idx: int) -> None: ...
def im_draw_list_splitter_split(self: Any, draw_list: Any, count: int) -> None: ...
def im_font_add_glyph(self: Any, src_cfg: Any, c: Any, x0: float, y0: float, x1: float, y1: float, u0: float, v0: float, u1: float, v1: float, advance_x: float) -> None: ...
def im_font_add_remap_char(self: Any, dst: Any, src: Any, overwrite_dst: bool) -> None: ...
def im_font_atlas_add_custom_rect_font_glyph(self: Any, font: Any, id_: Any, width: int, height: int, advance_x: float, offset: Any) -> int: ...
def im_font_atlas_add_custom_rect_regular(self: Any, width: int, height: int) -> int: ...
def im_font_atlas_add_font(self: Any, font_cfg: Any) -> Any: ...
def im_font_atlas_add_font_default(self: Any, font_cfg: Any) -> Any: ...
def im_font_atlas_add_font_from_file_ttf(self: Any, filename: str, size_pixels: float, font_cfg: Any, glyph_ranges: Any) -> Any: ...
def im_font_atlas_add_font_from_memory_compressed_base_85ttf(self: Any, compressed_font_data_base85: str, size_pixels: float, font_cfg: Any, glyph_ranges: Any) -> Any: ...
def im_font_atlas_add_font_from_memory_compressed_ttf(self: Any, compressed_font_data: Any, compressed_font_size: int, size_pixels: float, font_cfg: Any, glyph_ranges: Any) -> Any: ...
def im_font_atlas_add_font_from_memory_ttf(self: Any, font_data: Any, font_size: int, size_pixels: float, font_cfg: Any, glyph_ranges: Any) -> Any: ...
def im_font_atlas_build(self: Any) -> bool: ...
def im_font_atlas_calc_custom_rect_uv(self: Any, rect: Any, out_uv_min: Any, out_uv_max: Any) -> None: ...
def im_font_atlas_clear(self: Any) -> None: ...
def im_font_atlas_clear_fonts(self: Any) -> None: ...
def im_font_atlas_clear_input_data(self: Any) -> None: ...
def im_font_atlas_clear_tex_data(self: Any) -> None: ...
def im_font_atlas_custom_rect_destroy(self: Any) -> None: ...
def im_font_atlas_custom_rect_im_font_atlas_custom_rect() -> Any: ...
def im_font_atlas_custom_rect_is_packed(self: Any) -> bool: ...
def im_font_atlas_destroy(self: Any) -> None: ...
def im_font_atlas_get_custom_rect_by_index(self: Any, index: int) -> Any: ...
def im_font_atlas_get_glyph_ranges_chinese_full(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_chinese_simplified_common(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_cyrillic(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_default(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_greek(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_japanese(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_korean(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_thai(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_vietnamese(self: Any) -> Any: ...
def im_font_atlas_get_mouse_cursor_tex_data(self: Any, cursor: int, out_offset: Any, out_size: Any, out_uv_border: Any, out_uv_fill: Any) -> bool: ...
def im_font_atlas_get_tex_data_as_alpha8(self: Any, out_pixels: Any, out_width: Any, out_height: Any, out_bytes_per_pixel: Any) -> None: ...
def im_font_atlas_get_tex_data_as_rgba32(self: Any, out_pixels: Any, out_width: Any, out_height: Any, out_bytes_per_pixel: Any) -> None: ...
def im_font_atlas_im_font_atlas() -> Any: ...
def im_font_atlas_is_built(self: Any) -> bool: ...
def im_font_atlas_set_tex_id(self: Any, id_: Any) -> None: ...
def im_font_build_lookup_table(self: Any) -> None: ...
def im_font_calc_text_sizea(pOut: Any, self: Any, size: float, max_width: float, wrap_width: float, text_begin: str, text_end: str, remaining: Any) -> None: ...
def im_font_calc_word_wrap_positiona(self: Any, scale: float, text: str, text_end: str, wrap_width: float) -> str: ...
def im_font_clear_output_data(self: Any) -> None: ...
def im_font_config_destroy(self: Any) -> None: ...
def im_font_config_im_font_config() -> Any: ...
def im_font_destroy(self: Any) -> None: ...
def im_font_find_glyph(self: Any, c: Any) -> Any: ...
def im_font_find_glyph_no_fallback(self: Any, c: Any) -> Any: ...
def im_font_get_char_advance(self: Any, c: Any) -> float: ...
def im_font_get_debug_name(self: Any) -> str: ...
def im_font_glyph_ranges_builder_add_char(self: Any, c: Any) -> None: ...
def im_font_glyph_ranges_builder_add_ranges(self: Any, ranges: Any) -> None: ...
def im_font_glyph_ranges_builder_add_text(self: Any, text: str, text_end: str) -> None: ...
def im_font_glyph_ranges_builder_build_ranges(self: Any, out_ranges: Any) -> None: ...
def im_font_glyph_ranges_builder_clear(self: Any) -> None: ...
def im_font_glyph_ranges_builder_destroy(self: Any) -> None: ...
def im_font_glyph_ranges_builder_get_bit(self: Any, n: Any) -> bool: ...
def im_font_glyph_ranges_builder_im_font_glyph_ranges_builder() -> Any: ...
def im_font_glyph_ranges_builder_set_bit(self: Any, n: Any) -> None: ...
def im_font_grow_index(self: Any, new_size: int) -> None: ...
def im_font_im_font() -> Any: ...
def im_font_is_glyph_range_unused(self: Any, c_begin: Any, c_last: Any) -> bool: ...
def im_font_is_loaded(self: Any) -> bool: ...
def im_font_render_char(self: Any, draw_list: Any, size: float, pos: Any, col: Any, c: Any) -> None: ...
def im_font_render_text(self: Any, draw_list: Any, size: float, pos: Any, col: Any, clip_rect: Any, text_begin: str, text_end: str, wrap_width: float, cpu_fine_clip: bool) -> None: ...
def im_font_set_glyph_visible(self: Any, c: Any, visible: bool) -> None: ...
def im_vec_2_destroy(self: Any) -> None: ...
def im_vec_2_im_vec_2_float(_x: float, _y: float) -> Any: ...
def im_vec_2_im_vec_2_nil() -> Any: ...
def im_vec_4_destroy(self: Any) -> None: ...
def im_vec_4_im_vec_4_float(_x: float, _y: float, _z: float, _w: float) -> Any: ...
def im_vec_4_im_vec_4_nil() -> Any: ...
def im_vector_im_wchar_create() -> Any: ...
def im_vector_im_wchar_destroy(self: Any) -> None: ...
def im_vector_im_wchar_init(p: Any) -> None: ...
def im_vector_im_wchar_un_init(p: Any) -> None: ...
def image(user_texture_id: Any, size: Any, uv0: Any, uv1: Any, tint_col: Any, border_col: Any) -> None: ...
def image_button(str_id: str, user_texture_id: Any, size: Any, uv0: Any, uv1: Any, bg_col: Any, tint_col: Any) -> bool: ...
def imgui_input_text_callback_data_clear_selection(self: Any) -> None: ...
def imgui_input_text_callback_data_delete_chars(self: Any, pos: int, bytes_count: int) -> None: ...
def imgui_input_text_callback_data_destroy(self: Any) -> None: ...
def imgui_input_text_callback_data_has_selection(self: Any) -> bool: ...
def imgui_input_text_callback_data_imgui_input_text_callback_data() -> Any: ...
def imgui_input_text_callback_data_insert_chars(self: Any, pos: int, text: str, text_end: str) -> None: ...
def imgui_input_text_callback_data_select_all(self: Any) -> None: ...
def imgui_io_add_focus_event(self: Any, focused: bool) -> None: ...
def imgui_io_add_input_character(self: Any, c: Any) -> None: ...
def imgui_io_add_input_character_utf16(self: Any, c: Any) -> None: ...
def imgui_io_add_input_characters_utf8(self: Any, str_: str) -> None: ...
def imgui_io_add_key_analog_event(self: Any, key: int, down: bool, v: float) -> None: ...
def imgui_io_add_key_event(self: Any, key: int, down: bool) -> None: ...
def imgui_io_add_mouse_button_event(self: Any, button: int, down: bool) -> None: ...
def imgui_io_add_mouse_pos_event(self: Any, x: float, y: float) -> None: ...
def imgui_io_add_mouse_viewport_event(self: Any, id_: Any) -> None: ...
def imgui_io_add_mouse_wheel_event(self: Any, wheel_x: float, wheel_y: float) -> None: ...
def imgui_io_clear_input_characters(self: Any) -> None: ...
def imgui_io_clear_input_keys(self: Any) -> None: ...
def imgui_io_destroy(self: Any) -> None: ...
def imgui_io_imgui_io() -> Any: ...
def imgui_io_set_app_accepting_events(self: Any, accepting_events: bool) -> None: ...
def imgui_io_set_key_event_native_data(self: Any, key: int, native_keycode: int, native_scancode: int, native_legacy_index: int) -> None: ...
def imgui_list_clipper_begin(self: Any, items_count: int, items_height: float) -> None: ...
def imgui_list_clipper_destroy(self: Any) -> None: ...
def imgui_list_clipper_end(self: Any) -> None: ...
def imgui_list_clipper_force_display_range_by_indices(self: Any, item_min: int, item_max: int) -> None: ...
def imgui_list_clipper_imgui_list_clipper() -> Any: ...
def imgui_list_clipper_step(self: Any) -> bool: ...
def imgui_once_upon_a_frame_destroy(self: Any) -> None: ...
def imgui_once_upon_a_frame_imgui_once_upon_a_frame() -> Any: ...
def imgui_payload_clear(self: Any) -> None: ...
def imgui_payload_destroy(self: Any) -> None: ...
def imgui_payload_imgui_payload() -> Any: ...
def imgui_payload_is_data_type(self: Any, type_: str) -> bool: ...
def imgui_payload_is_delivery(self: Any) -> bool: ...
def imgui_payload_is_preview(self: Any) -> bool: ...
def imgui_platform_ime_data_destroy(self: Any) -> None: ...
def imgui_platform_ime_data_imgui_platform_ime_data() -> Any: ...
def imgui_platform_io_destroy(self: Any) -> None: ...
def imgui_platform_io_imgui_platform_io() -> Any: ...
def imgui_platform_monitor_destroy(self: Any) -> None: ...
def imgui_platform_monitor_imgui_platform_monitor() -> Any: ...
def imgui_storage_build_sort_by_key(self: Any) -> None: ...
def imgui_storage_clear(self: Any) -> None: ...
def imgui_storage_get_bool(self: Any, key: Any, default_val: bool) -> bool: ...
def imgui_storage_get_bool_ref(self: Any, key: Any, default_val: bool) -> Any: ...
def imgui_storage_get_float(self: Any, key: Any, default_val: float) -> float: ...
def imgui_storage_get_float_ref(self: Any, key: Any, default_val: float) -> Any: ...
def imgui_storage_get_int(self: Any, key: Any, default_val: int) -> int: ...
def imgui_storage_get_int_ref(self: Any, key: Any, default_val: int) -> Any: ...
def imgui_storage_get_void_ptr(self: Any, key: Any) -> Any: ...
def imgui_storage_get_void_ptr_ref(self: Any, key: Any, default_val: Any) -> Any: ...
def imgui_storage_pair_destroy(self: Any) -> None: ...
def imgui_storage_pair_imgui_storage_pair_float(_key: Any, _val_f: float) -> Any: ...
def imgui_storage_pair_imgui_storage_pair_int(_key: Any, _val_i: int) -> Any: ...
def imgui_storage_pair_imgui_storage_pair_ptr(_key: Any, _val_p: Any) -> Any: ...
def imgui_storage_set_all_int(self: Any, val: int) -> None: ...
def imgui_storage_set_bool(self: Any, key: Any, val: bool) -> None: ...
def imgui_storage_set_float(self: Any, key: Any, val: float) -> None: ...
def imgui_storage_set_int(self: Any, key: Any, val: int) -> None: ...
def imgui_storage_set_void_ptr(self: Any, key: Any, val: Any) -> None: ...
def imgui_style_destroy(self: Any) -> None: ...
def imgui_style_imgui_style() -> Any: ...
def imgui_style_scale_all_sizes(self: Any, scale_factor: float) -> None: ...
def imgui_table_column_sort_specs_destroy(self: Any) -> None: ...
def imgui_table_column_sort_specs_imgui_table_column_sort_specs() -> Any: ...
def imgui_table_sort_specs_destroy(self: Any) -> None: ...
def imgui_table_sort_specs_imgui_table_sort_specs() -> Any: ...
def imgui_text_buffer_append(self: Any, str_: str, str_end: str) -> None: ...
def imgui_text_buffer_appendf(buffer: Any, fmt: str) -> None: ...
def imgui_text_buffer_appendfv(self: Any, fmt: str, args: str) -> None: ...
def imgui_text_buffer_begin(self: Any) -> str: ...
def imgui_text_buffer_c_str(self: Any) -> str: ...
def imgui_text_buffer_clear(self: Any) -> None: ...
def imgui_text_buffer_destroy(self: Any) -> None: ...
def imgui_text_buffer_empty(self: Any) -> bool: ...
def imgui_text_buffer_end(self: Any) -> str: ...
def imgui_text_buffer_imgui_text_buffer() -> Any: ...
def imgui_text_buffer_reserve(self: Any, capacity: int) -> None: ...
def imgui_text_buffer_size(self: Any) -> int: ...
def imgui_text_filter_build(self: Any) -> None: ...
def imgui_text_filter_clear(self: Any) -> None: ...
def imgui_text_filter_destroy(self: Any) -> None: ...
def imgui_text_filter_draw(self: Any, label: str, width: float) -> bool: ...
def imgui_text_filter_imgui_text_filter(default_filter: str) -> Any: ...
def imgui_text_filter_is_active(self: Any) -> bool: ...
def imgui_text_filter_pass_filter(self: Any, text: str, text_end: str) -> bool: ...
def imgui_text_range_destroy(self: Any) -> None: ...
def imgui_text_range_empty(self: Any) -> bool: ...
def imgui_text_range_imgui_text_range_nil() -> Any: ...
def imgui_text_range_imgui_text_range_str(_b: str, _e: str) -> Any: ...
def imgui_text_range_split(self: Any, separator: Any, out: Any) -> None: ...
def imgui_viewport_destroy(self: Any) -> None: ...
def imgui_viewport_get_center(pOut: Any, self: Any) -> None: ...
def imgui_viewport_get_work_center(pOut: Any, self: Any) -> None: ...
def imgui_viewport_imgui_viewport() -> Any: ...
def imgui_window_class_destroy(self: Any) -> None: ...
def imgui_window_class_imgui_window_class() -> Any: ...
def indent(indent_w: float) -> None: ...
def input_double(label: str, v: Any, step: float, step_fast: float, format_: str, flags: int) -> bool: ...
def input_float(label: str, v: Any, step: float, step_fast: float, format_: str, flags: int) -> bool: ...
def input_float2(label: str, v: float, format_: str, flags: int) -> bool: ...
def input_float3(label: str, v: float, format_: str, flags: int) -> bool: ...
def input_float4(label: str, v: float, format_: str, flags: int) -> bool: ...
def input_int(label: str, v: Any, step: int, step_fast: int, flags: int) -> bool: ...
def input_int2(label: str, v: int, flags: int) -> bool: ...
def input_int3(label: str, v: int, flags: int) -> bool: ...
def input_int4(label: str, v: int, flags: int) -> bool: ...
def input_scalar(label: str, data_type: int, p_data: Any, p_step: Any, p_step_fast: Any, format_: str, flags: int) -> bool: ...
def input_scalarn(label: str, data_type: int, p_data: Any, components: int, p_step: Any, p_step_fast: Any, format_: str, flags: int) -> bool: ...
def input_text(label: str, buf: str, buf_size: Any, flags: int, callback: Any, user_data: Any) -> bool: ...
def input_text_multiline(label: str, buf: str, buf_size: Any, size: Any, flags: int, callback: Any, user_data: Any) -> bool: ...
def input_text_with_hint(label: str, hint: str, buf: str, buf_size: Any, flags: int, callback: Any, user_data: Any) -> bool: ...
def invisible_button(str_id: str, size: Any, flags: int) -> bool: ...
def is_any_item_active() -> bool: ...
def is_any_item_focused() -> bool: ...
def is_any_item_hovered() -> bool: ...
def is_any_mouse_down() -> bool: ...
def is_item_activated() -> bool: ...
def is_item_active() -> bool: ...
def is_item_clicked(mouse_button: int) -> bool: ...
def is_item_deactivated() -> bool: ...
def is_item_deactivated_after_edit() -> bool: ...
def is_item_edited() -> bool: ...
def is_item_focused() -> bool: ...
def is_item_hovered(flags: int) -> bool: ...
def is_item_toggled_open() -> bool: ...
def is_item_visible() -> bool: ...
def is_key_down(key: int) -> bool: ...
def is_key_pressed(key: int, repeat: bool) -> bool: ...
def is_key_released(key: int) -> bool: ...
def is_mouse_clicked(button: int, repeat: bool) -> bool: ...
def is_mouse_double_clicked(button: int) -> bool: ...
def is_mouse_down(button: int) -> bool: ...
def is_mouse_dragging(button: int, lock_threshold: float) -> bool: ...
def is_mouse_hovering_rect(r_min: Any, r_max: Any, clip: bool) -> bool: ...
def is_mouse_pos_valid(mouse_pos: Any) -> bool: ...
def is_mouse_released(button: int) -> bool: ...
def is_popup_open(str_id: str, flags: int) -> bool: ...
def is_rect_visible_nil(size: Any) -> bool: ...
def is_rect_visible_vec2(rect_min: Any, rect_max: Any) -> bool: ...
def is_window_appearing() -> bool: ...
def is_window_collapsed() -> bool: ...
def is_window_docked() -> bool: ...
def is_window_focused(flags: int) -> bool: ...
def is_window_hovered(flags: int) -> bool: ...
def label_text(label: str, fmt: str) -> None: ...
def label_textv(label: str, fmt: str, args: str) -> None: ...
def list_box_fn_bool_ptr(label: str, current_item: Any, items_getter: Callable, data: Any, items_count: int, height_in_items: int) -> bool: ...
def list_box_str_arr(label: str, current_item: Any, items: str, items_count: int, height_in_items: int) -> bool: ...
def load_ini_settings_from_disk(ini_filename: str) -> None: ...
def load_ini_settings_from_memory(ini_data: str, ini_size: Any) -> None: ...
def log_buttons() -> None: ...
def log_finish() -> None: ...
def log_text(fmt: str) -> None: ...
def log_textv(fmt: str, args: str) -> None: ...
def log_to_clipboard(auto_open_depth: int) -> None: ...
def log_to_file(auto_open_depth: int, filename: str) -> None: ...
def log_to_tty(auto_open_depth: int) -> None: ...
def mem_alloc(size: Any) -> Any: ...
def mem_free(ptr: Any) -> None: ...
def menu_item_bool(label: str, shortcut: str, selected: bool, enabled: bool) -> bool: ...
def menu_item_bool_ptr(label: str, shortcut: str, p_selected: Any, enabled: bool) -> bool: ...
def new_frame() -> None: ...
def new_line() -> None: ...
def next_column() -> None: ...
def open_popup_id(id_: Any, popup_flags: int) -> None: ...
def open_popup_on_item_click(str_id: str, popup_flags: int) -> None: ...
def open_popup_str(str_id: str, popup_flags: int) -> None: ...
def plot_histogram_float_ptr(label: str, values: Any, values_count: int, values_offset: int, overlay_text: str, scale_min: float, scale_max: float, graph_size: Any, stride: int) -> None: ...
def plot_histogram_fn_float_ptr(label: str, values_getter: Callable, data: Any, values_count: int, values_offset: int, overlay_text: str, scale_min: float, scale_max: float, graph_size: Any) -> None: ...
def plot_lines_float_ptr(label: str, values: Any, values_count: int, values_offset: int, overlay_text: str, scale_min: float, scale_max: float, graph_size: Any, stride: int) -> None: ...
def plot_lines_fn_float_ptr(label: str, values_getter: Callable, data: Any, values_count: int, values_offset: int, overlay_text: str, scale_min: float, scale_max: float, graph_size: Any) -> None: ...
def pop_allow_keyboard_focus() -> None: ...
def pop_button_repeat() -> None: ...
def pop_clip_rect() -> None: ...
def pop_font() -> None: ...
def pop_id() -> None: ...
def pop_item_width() -> None: ...
def pop_style_color(count: int) -> None: ...
def pop_style_var(count: int) -> None: ...
def pop_text_wrap_pos() -> None: ...
def progress_bar(fraction: float, size_arg: Any, overlay: str) -> None: ...
def push_allow_keyboard_focus(allow_keyboard_focus: bool) -> None: ...
def push_button_repeat(repeat: bool) -> None: ...
def push_clip_rect(clip_rect_min: Any, clip_rect_max: Any, intersect_with_current_clip_rect: bool) -> None: ...
def push_font(font: Any) -> None: ...
def push_id_int(int_id: int) -> None: ...
def push_id_ptr(ptr_id: Any) -> None: ...
def push_id_str(str_id: str) -> None: ...
def push_id_str_str(str_id_begin: str, str_id_end: str) -> None: ...
def push_item_width(item_width: float) -> None: ...
def push_style_color_u32(idx: int, col: Any) -> None: ...
def push_style_color_vec4(idx: int, col: Any) -> None: ...
def push_style_var_float(idx: int, val: float) -> None: ...
def push_style_var_vec2(idx: int, val: Any) -> None: ...
def push_text_wrap_pos(wrap_local_pos_x: float) -> None: ...
def radio_button_bool(label: str, active: bool) -> bool: ...
def radio_button_int_ptr(label: str, v: Any, v_button: int) -> bool: ...
def render() -> None: ...
def render_platform_windows_default(platform_render_arg: Any, renderer_render_arg: Any) -> None: ...
def reset_mouse_drag_delta(button: int) -> None: ...
def same_line(offset_from_start_x: float, spacing: float) -> None: ...
def save_ini_settings_to_disk(ini_filename: str) -> None: ...
def save_ini_settings_to_memory(out_ini_size: Any) -> str: ...
def selectable_bool(label: str, selected: bool, flags: int, size: Any) -> bool: ...
def selectable_bool_ptr(label: str, p_selected: Any, flags: int, size: Any) -> bool: ...
def separator() -> None: ...
def separator_text(label: str) -> None: ...
def set_allocator_functions(alloc_func: Any, free_func: Any, user_data: Any) -> None: ...
def set_clipboard_text(text: str) -> None: ...
def set_color_edit_options(flags: int) -> None: ...
def set_column_offset(column_index: int, offset_x: float) -> None: ...
def set_column_width(column_index: int, width: float) -> None: ...
def set_current_context(ctx: Any) -> None: ...
def set_cursor_pos(local_pos: Any) -> None: ...
def set_cursor_posx(local_x: float) -> None: ...
def set_cursor_posy(local_y: float) -> None: ...
def set_cursor_screen_pos(pos: Any) -> None: ...
def set_drag_drop_payload(type_: str, data: Any, sz: Any, cond: int) -> bool: ...
def set_item_allow_overlap() -> None: ...
def set_item_default_focus() -> None: ...
def set_keyboard_focus_here(offset: int) -> None: ...
def set_mouse_cursor(cursor_type: int) -> None: ...
def set_next_frame_want_capture_keyboard(want_capture_keyboard: bool) -> None: ...
def set_next_frame_want_capture_mouse(want_capture_mouse: bool) -> None: ...
def set_next_item_open(is_open: bool, cond: int) -> None: ...
def set_next_item_width(item_width: float) -> None: ...
def set_next_window_bg_alpha(alpha: float) -> None: ...
def set_next_window_class(window_class: Any) -> None: ...
def set_next_window_collapsed(collapsed: bool, cond: int) -> None: ...
def set_next_window_content_size(size: Any) -> None: ...
def set_next_window_dock_id(dock_id: Any, cond: int) -> None: ...
def set_next_window_focus() -> None: ...
def set_next_window_pos(pos: Any, cond: int, pivot: Any) -> None: ...
def set_next_window_scroll(scroll: Any) -> None: ...
def set_next_window_size(size: Any, cond: int) -> None: ...
def set_next_window_size_constraints(size_min: Any, size_max: Any, custom_callback: Any, custom_callback_data: Any) -> None: ...
def set_next_window_viewport(viewport_id: Any) -> None: ...
def set_scroll_from_posx(local_x: float, center_x_ratio: float) -> None: ...
def set_scroll_from_posy(local_y: float, center_y_ratio: float) -> None: ...
def set_scroll_herex(center_x_ratio: float) -> None: ...
def set_scroll_herey(center_y_ratio: float) -> None: ...
def set_scrollx(scroll_x: float) -> None: ...
def set_scrolly(scroll_y: float) -> None: ...
def set_state_storage(storage: Any) -> None: ...
def set_tab_item_closed(tab_or_docked_window_label: str) -> None: ...
def set_tooltip(fmt: str) -> None: ...
def set_tooltipv(fmt: str, args: str) -> None: ...
def set_window_collapsed_bool(collapsed: bool, cond: int) -> None: ...
def set_window_collapsed_str(name: str, collapsed: bool, cond: int) -> None: ...
def set_window_focus_nil() -> None: ...
def set_window_focus_str(name: str) -> None: ...
def set_window_font_scale(scale: float) -> None: ...
def set_window_pos_str(name: str, pos: Any, cond: int) -> None: ...
def set_window_pos_vec2(pos: Any, cond: int) -> None: ...
def set_window_size_str(name: str, size: Any, cond: int) -> None: ...
def set_window_size_vec2(size: Any, cond: int) -> None: ...
def show_about_window(p_open: Any) -> None: ...
def show_debug_log_window(p_open: Any) -> None: ...
def show_demo_window(p_open: Any) -> None: ...
def show_font_selector(label: str) -> None: ...
def show_metrics_window(p_open: Any) -> None: ...
def show_stack_tool_window(p_open: Any) -> None: ...
def show_style_editor(ref: Any) -> None: ...
def show_style_selector(label: str) -> bool: ...
def show_user_guide() -> None: ...
def slider_angle(label: str, v_rad: Any, v_degrees_min: float, v_degrees_max: float, format_: str, flags: int) -> bool: ...
def slider_float(label: str, v: Any, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def slider_float2(label: str, v: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def slider_float3(label: str, v: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def slider_float4(label: str, v: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def slider_int(label: str, v: Any, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def slider_int2(label: str, v: int, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def slider_int3(label: str, v: int, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def slider_int4(label: str, v: int, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def slider_scalar(label: str, data_type: int, p_data: Any, p_min: Any, p_max: Any, format_: str, flags: int) -> bool: ...
def slider_scalarn(label: str, data_type: int, p_data: Any, components: int, p_min: Any, p_max: Any, format_: str, flags: int) -> bool: ...
def small_button(label: str) -> bool: ...
def spacing() -> None: ...
def style_colors_classic(dst: Any) -> None: ...
def style_colors_dark(dst: Any) -> None: ...
def style_colors_light(dst: Any) -> None: ...
def tab_item_button(label: str, flags: int) -> bool: ...
def table_get_column_count() -> int: ...
def table_get_column_flags(column_n: int) -> int: ...
def table_get_column_index() -> int: ...
def table_get_column_name(column_n: int) -> str: ...
def table_get_row_index() -> int: ...
def table_get_sort_specs() -> Any: ...
def table_header(label: str) -> None: ...
def table_headers_row() -> None: ...
def table_next_column() -> bool: ...
def table_next_row(row_flags: int, min_row_height: float) -> None: ...
def table_set_bg_color(target: int, color: Any, column_n: int) -> None: ...
def table_set_column_enabled(column_n: int, v: bool) -> None: ...
def table_set_column_index(column_n: int) -> bool: ...
def table_setup_column(label: str, flags: int, init_width_or_weight: float, user_id: Any) -> None: ...
def table_setup_scroll_freeze(cols: int, rows: int) -> None: ...
def text(fmt: str) -> None: ...
def text_colored(col: Any, fmt: str) -> None: ...
def text_coloredv(col: Any, fmt: str, args: str) -> None: ...
def text_disabled(fmt: str) -> None: ...
def text_disabledv(fmt: str, args: str) -> None: ...
def text_unformatted(text: str, text_end: str) -> None: ...
def text_wrapped(fmt: str) -> None: ...
def text_wrappedv(fmt: str, args: str) -> None: ...
def textv(fmt: str, args: str) -> None: ...
def tree_node_ex_ptr(ptr_id: Any, flags: int, fmt: str) -> bool: ...
def tree_node_ex_str(label: str, flags: int) -> bool: ...
def tree_node_ex_str_str(str_id: str, flags: int, fmt: str) -> bool: ...
def tree_node_ex_v_ptr(ptr_id: Any, flags: int, fmt: str, args: str) -> bool: ...
def tree_node_ex_v_str(str_id: str, flags: int, fmt: str, args: str) -> bool: ...
def tree_node_ptr(ptr_id: Any, fmt: str) -> bool: ...
def tree_node_str(label: str) -> bool: ...
def tree_node_str_str(str_id: str, fmt: str) -> bool: ...
def tree_node_v_ptr(ptr_id: Any, fmt: str, args: str) -> bool: ...
def tree_node_v_str(str_id: str, fmt: str, args: str) -> bool: ...
def tree_pop() -> None: ...
def tree_push_ptr(ptr_id: Any) -> None: ...
def tree_push_str(str_id: str) -> None: ...
def unindent(indent_w: float) -> None: ...
def update_platform_windows() -> None: ...
def v_slider_float(label: str, size: Any, v: Any, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def v_slider_int(label: str, size: Any, v: Any, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def v_slider_scalar(label: str, size: Any, data_type: int, p_data: Any, p_min: Any, p_max: Any, format_: str, flags: int) -> bool: ...
def value_bool(prefix: str, b: bool) -> None: ...
def value_float(prefix: str, v: float, float_format: str) -> None: ...
def value_int(prefix: str, v: int) -> None: ...
def value_uint(prefix: str, v: Any) -> None: ...
