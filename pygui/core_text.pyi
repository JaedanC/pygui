from typing import Any, Callable

def accept_drag_drop_payload(type_: str, flags: int) -> Any: ...
def activate_item(id_: Any) -> None: ...
def add_context_hook(context: Any, hook: Any) -> Any: ...
def add_settings_handler(handler: Any) -> None: ...
def align_text_to_frame_padding() -> None: ...
def arrow_button(str_id: str, dir_: int) -> bool: ...
def arrow_button_ex(str_id: str, dir_: int, size_arg: Any, flags: int) -> bool: ...
def begin(name: str, p_open: Any, flags: int) -> bool: ...
def begin_child_ex(name: str, id_: Any, size_arg: Any, border: bool, flags: int) -> bool: ...
def begin_child_frame(id_: Any, size: Any, flags: int) -> bool: ...
def begin_child_id(id_: Any, size: Any, border: bool, flags: int) -> bool: ...
def begin_child_str(str_id: str, size: Any, border: bool, flags: int) -> bool: ...
def begin_columns(str_id: str, count: int, flags: int) -> None: ...
def begin_combo(label: str, preview_value: str, flags: int) -> bool: ...
def begin_combo_popup(popup_id: Any, bb: Any, flags: int) -> bool: ...
def begin_combo_preview() -> bool: ...
def begin_disabled(disabled: bool) -> None: ...
def begin_dockable_drag_drop_source(window: Any) -> None: ...
def begin_dockable_drag_drop_target(window: Any) -> None: ...
def begin_docked(window: Any, p_open: Any) -> None: ...
def begin_drag_drop_source(flags: int) -> bool: ...
def begin_drag_drop_target() -> bool: ...
def begin_drag_drop_target_custom(bb: Any, id_: Any) -> bool: ...
def begin_group() -> None: ...
def begin_list_box(label: str, size: Any) -> bool: ...
def begin_main_menu_bar() -> bool: ...
def begin_menu(label: str, enabled: bool) -> bool: ...
def begin_menu_bar() -> bool: ...
def begin_menu_ex(label: str, icon: str, enabled: bool) -> bool: ...
def begin_popup(str_id: str, flags: int) -> bool: ...
def begin_popup_context_item(str_id: str, popup_flags: int) -> bool: ...
def begin_popup_context_void(str_id: str, popup_flags: int) -> bool: ...
def begin_popup_context_window(str_id: str, popup_flags: int) -> bool: ...
def begin_popup_ex(id_: Any, extra_flags: int) -> bool: ...
def begin_popup_modal(name: str, p_open: Any, flags: int) -> bool: ...
def begin_tab_bar(str_id: str, flags: int) -> bool: ...
def begin_tab_bar_ex(tab_bar: Any, bb: Any, flags: int, dock_node: Any) -> bool: ...
def begin_tab_item(label: str, p_open: Any, flags: int) -> bool: ...
def begin_table(str_id: str, column: int, flags: int, outer_size: Any, inner_width: float) -> bool: ...
def begin_table_ex(name: str, id_: Any, columns_count: int, flags: int, outer_size: Any, inner_width: float) -> bool: ...
def begin_tooltip() -> None: ...
def begin_tooltip_ex(tooltip_flags: int, extra_window_flags: int) -> None: ...
def begin_viewport_side_bar(name: str, viewport: Any, dir_: int, size: float, window_flags: int) -> bool: ...
def bring_window_to_display_back(window: Any) -> None: ...
def bring_window_to_display_behind(window: Any, above_window: Any) -> None: ...
def bring_window_to_display_front(window: Any) -> None: ...
def bring_window_to_focus_front(window: Any) -> None: ...
def bullet() -> None: ...
def bullet_text(fmt: str) -> None: ...
def bullet_textv(fmt: str, args: str) -> None: ...
def button(label: str, size: Any) -> bool: ...
def button_behavior(bb: Any, id_: Any, out_hovered: Any, out_held: Any, flags: int) -> bool: ...
def button_ex(label: str, size_arg: Any, flags: int) -> bool: ...
def calc_item_size(pOut: Any, size: Any, default_w: float, default_h: float) -> None: ...
def calc_item_width() -> float: ...
def calc_rounding_flags_for_rect_in_rect(r_in: Any, r_outer: Any, threshold: float) -> int: ...
def calc_text_size(pOut: Any, text: str, text_end: str, hide_text_after_double_hash: bool, wrap_width: float) -> None: ...
def calc_typematic_repeat_amount(t0: float, t1: float, repeat_delay: float, repeat_rate: float) -> int: ...
def calc_window_next_auto_fit_size(pOut: Any, window: Any) -> None: ...
def calc_wrap_width_for_pos(pos: Any, wrap_pos_x: float) -> float: ...
def call_context_hooks(context: Any, type_: int) -> None: ...
def checkbox(label: str, v: Any) -> bool: ...
def checkbox_flags_int_ptr(label: str, flags: Any, flags_value: int) -> bool: ...
def checkbox_flags_s64_ptr(label: str, flags: Any, flags_value: Any) -> bool: ...
def checkbox_flags_u64_ptr(label: str, flags: Any, flags_value: Any) -> bool: ...
def checkbox_flags_uint_ptr(label: str, flags: Any, flags_value: Any) -> bool: ...
def clear_active_id() -> None: ...
def clear_drag_drop() -> None: ...
def clear_ini_settings() -> None: ...
def clear_window_settings(name: str) -> None: ...
def close_button(id_: Any, pos: Any) -> bool: ...
def close_current_popup() -> None: ...
def close_popup_to_level(remaining: int, restore_focus_to_window_under_popup: bool) -> None: ...
def close_popups_except_modals() -> None: ...
def close_popups_over_window(ref_window: Any, restore_focus_to_window_under_popup: bool) -> None: ...
def collapse_button(id_: Any, pos: Any, dock_node: Any) -> bool: ...
def collapsing_header_bool_ptr(label: str, p_visible: Any, flags: int) -> bool: ...
def collapsing_header_tree_node_flags(label: str, flags: int) -> bool: ...
def color_button(desc_id: str, col: Any, flags: int, size: Any) -> bool: ...
def color_convert_float_4_to_u32(in_: Any) -> Any: ...
def color_convert_hs_vto_rgb(h: float, s: float, v: float, out_r: Any, out_g: Any, out_b: Any) -> None: ...
def color_convert_rg_bto_hsv(r: float, g: float, b: float, out_h: Any, out_s: Any, out_v: Any) -> None: ...
def color_convert_u32_to_float4(pOut: Any, in_: Any) -> None: ...
def color_edit3(label: str, col: float, flags: int) -> bool: ...
def color_edit4(label: str, col: float, flags: int) -> bool: ...
def color_edit_options_popup(col: Any, flags: int) -> None: ...
def color_picker3(label: str, col: float, flags: int) -> bool: ...
def color_picker4(label: str, col: float, flags: int, ref_col: Any) -> bool: ...
def color_picker_options_popup(ref_col: Any, flags: int) -> None: ...
def color_tooltip(text: str, col: Any, flags: int) -> None: ...
def columns(count: int, id_: str, border: bool) -> None: ...
def combo_fn_bool_ptr(label: str, current_item: Any, items_getter: Callable, data: Any, items_count: int, popup_max_height_in_items: int) -> bool: ...
def combo_str(label: str, current_item: Any, items_separated_by_zeros: str, popup_max_height_in_items: int) -> bool: ...
def combo_str_arr(label: str, current_item: Any, items: str, items_count: int, popup_max_height_in_items: int) -> bool: ...
def convert_shortcut_mod(key_chord: int) -> int: ...
def convert_single_mod_flag_to_key(key: int) -> int: ...
def create_context(shared_font_atlas: Any) -> Any: ...
def create_new_window_settings(name: str) -> Any: ...
def data_type_apply_from_text(buf: str, data_type: int, p_data: Any, format_: str) -> bool: ...
def data_type_apply_op(data_type: int, op: int, output: Any, arg_1: Any, arg_2: Any) -> None: ...
def data_type_clamp(data_type: int, p_data: Any, p_min: Any, p_max: Any) -> bool: ...
def data_type_compare(data_type: int, arg_1: Any, arg_2: Any) -> int: ...
def data_type_format_string(buf: str, buf_size: int, data_type: int, p_data: Any, format_: str) -> int: ...
def data_type_get_info(data_type: int) -> Any: ...
def debug_check_version_and_data_layout(version_str: str, sz_io: Any, sz_style: Any, sz_vec2: Any, sz_vec4: Any, sz_drawvert: Any, sz_drawidx: Any) -> bool: ...
def debug_draw_item_rect(col: Any) -> None: ...
def debug_hook_id_info(id_: Any, data_type: int, data_id: Any, data_id_end: Any) -> None: ...
def debug_locate_item(target_id: Any) -> None: ...
def debug_locate_item_on_hover(target_id: Any) -> None: ...
def debug_locate_item_resolve_with_last_item() -> None: ...
def debug_log(fmt: str) -> None: ...
def debug_logv(fmt: str, args: str) -> None: ...
def debug_node_columns(columns: Any) -> None: ...
def debug_node_dock_node(node: Any, label: str) -> None: ...
def debug_node_draw_cmd_show_mesh_and_bounding_box(out_draw_list: Any, draw_list: Any, draw_cmd: Any, show_mesh: bool, show_aabb: bool) -> None: ...
def debug_node_draw_list(window: Any, viewport: Any, draw_list: Any, label: str) -> None: ...
def debug_node_font(font: Any) -> None: ...
def debug_node_font_glyph(font: Any, glyph: Any) -> None: ...
def debug_node_input_text_state(state: Any) -> None: ...
def debug_node_storage(storage: Any, label: str) -> None: ...
def debug_node_tab_bar(tab_bar: Any, label: str) -> None: ...
def debug_node_table(table: Any) -> None: ...
def debug_node_table_settings(settings: Any) -> None: ...
def debug_node_viewport(viewport: Any) -> None: ...
def debug_node_window(window: Any, label: str) -> None: ...
def debug_node_window_settings(settings: Any) -> None: ...
def debug_node_windows_list(windows: Any, label: str) -> None: ...
def debug_node_windows_list_by_begin_stack_parent(windows: Any, windows_size: int, parent_in_begin_stack: Any) -> None: ...
def debug_render_keyboard_preview(draw_list: Any) -> None: ...
def debug_render_viewport_thumbnail(draw_list: Any, viewport: Any, bb: Any) -> None: ...
def debug_start_item_picker() -> None: ...
def debug_text_encoding(text: str) -> None: ...
def destroy_context(ctx: Any) -> None: ...
def destroy_platform_window(viewport: Any) -> None: ...
def destroy_platform_windows() -> None: ...
def dock_builder_add_node(node_id: Any, flags: int) -> Any: ...
def dock_builder_copy_dock_space(src_dockspace_id: Any, dst_dockspace_id: Any, in_window_remap_pairs: Any) -> None: ...
def dock_builder_copy_node(src_node_id: Any, dst_node_id: Any, out_node_remap_pairs: Any) -> None: ...
def dock_builder_copy_window_settings(src_name: str, dst_name: str) -> None: ...
def dock_builder_dock_window(window_name: str, node_id: Any) -> None: ...
def dock_builder_finish(node_id: Any) -> None: ...
def dock_builder_get_central_node(node_id: Any) -> Any: ...
def dock_builder_get_node(node_id: Any) -> Any: ...
def dock_builder_remove_node(node_id: Any) -> None: ...
def dock_builder_remove_node_child_nodes(node_id: Any) -> None: ...
def dock_builder_remove_node_docked_windows(node_id: Any, clear_settings_refs: bool) -> None: ...
def dock_builder_set_node_pos(node_id: Any, pos: Any) -> None: ...
def dock_builder_set_node_size(node_id: Any, size: Any) -> None: ...
def dock_builder_split_node(node_id: Any, split_dir: int, size_ratio_for_node_at_dir: float, out_id_at_dir: Any, out_id_at_opposite_dir: Any) -> Any: ...
def dock_context_calc_drop_pos_for_docking(target: Any, target_node: Any, payload_window: Any, payload_node: Any, split_dir: int, split_outer: bool, out_pos: Any) -> bool: ...
def dock_context_clear_nodes(ctx: Any, root_id: Any, clear_settings_refs: bool) -> None: ...
def dock_context_end_frame(ctx: Any) -> None: ...
def dock_context_find_node_by_id(ctx: Any, id_: Any) -> Any: ...
def dock_context_gen_node_id(ctx: Any) -> Any: ...
def dock_context_initialize(ctx: Any) -> None: ...
def dock_context_new_frame_update_docking(ctx: Any) -> None: ...
def dock_context_new_frame_update_undocking(ctx: Any) -> None: ...
def dock_context_process_undock_node(ctx: Any, node: Any) -> None: ...
def dock_context_process_undock_window(ctx: Any, window: Any, clear_persistent_docking_ref: bool) -> None: ...
def dock_context_queue_dock(ctx: Any, target: Any, target_node: Any, payload: Any, split_dir: int, split_ratio: float, split_outer: bool) -> None: ...
def dock_context_queue_undock_node(ctx: Any, node: Any) -> None: ...
def dock_context_queue_undock_window(ctx: Any, window: Any) -> None: ...
def dock_context_rebuild_nodes(ctx: Any) -> None: ...
def dock_context_shutdown(ctx: Any) -> None: ...
def dock_node_begin_amend_tab_bar(node: Any) -> bool: ...
def dock_node_end_amend_tab_bar() -> None: ...
def dock_node_get_depth(node: Any) -> int: ...
def dock_node_get_root_node(node: Any) -> Any: ...
def dock_node_get_window_menu_button_id(node: Any) -> Any: ...
def dock_node_is_in_hierarchy_of(node: Any, parent: Any) -> bool: ...
def dock_space(id_: Any, size: Any, flags: int, window_class: Any) -> Any: ...
def dock_space_over_viewport(viewport: Any, flags: int, window_class: Any) -> Any: ...
def drag_behavior(id_: Any, data_type: int, p_v: Any, v_speed: float, p_min: Any, p_max: Any, format_: str, flags: int) -> bool: ...
def drag_float(label: str, v: Any, v_speed: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def drag_float2(label: str, v: float, v_speed: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def drag_float3(label: str, v: float, v_speed: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def drag_float4(label: str, v: float, v_speed: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def drag_float_range2(label: str, v_current_min: Any, v_current_max: Any, v_speed: float, v_min: float, v_max: float, format_: str, format_max: str, flags: int) -> bool: ...
def drag_int(label: str, v: Any, v_speed: float, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def drag_int2(label: str, v: int, v_speed: float, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def drag_int3(label: str, v: int, v_speed: float, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def drag_int4(label: str, v: int, v_speed: float, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def drag_int_range2(label: str, v_current_min: Any, v_current_max: Any, v_speed: float, v_min: int, v_max: int, format_: str, format_max: str, flags: int) -> bool: ...
def drag_scalar(label: str, data_type: int, p_data: Any, v_speed: float, p_min: Any, p_max: Any, format_: str, flags: int) -> bool: ...
def drag_scalarn(label: str, data_type: int, p_data: Any, components: int, v_speed: float, p_min: Any, p_max: Any, format_: str, flags: int) -> bool: ...
def dummy(size: Any) -> None: ...
def end() -> None: ...
def end_child() -> None: ...
def end_child_frame() -> None: ...
def end_columns() -> None: ...
def end_combo() -> None: ...
def end_combo_preview() -> None: ...
def end_disabled() -> None: ...
def end_drag_drop_source() -> None: ...
def end_drag_drop_target() -> None: ...
def end_frame() -> None: ...
def end_group() -> None: ...
def end_list_box() -> None: ...
def end_main_menu_bar() -> None: ...
def end_menu() -> None: ...
def end_menu_bar() -> None: ...
def end_popup() -> None: ...
def end_tab_bar() -> None: ...
def end_tab_item() -> None: ...
def end_table() -> None: ...
def end_tooltip() -> None: ...
def error_check_end_frame_recover(log_callback: Any, user_data: Any) -> None: ...
def error_check_end_window_recover(log_callback: Any, user_data: Any) -> None: ...
def error_check_using_set_cursor_pos_to_extend_parent_boundaries() -> None: ...
def find_best_window_pos_for_popup(pOut: Any, window: Any) -> None: ...
def find_best_window_pos_for_popup_ex(pOut: Any, ref_pos: Any, size: Any, last_dir: Any, r_outer: Any, r_avoid: Any, policy: int) -> None: ...
def find_bottom_most_visible_window_within_begin_stack(window: Any) -> Any: ...
def find_hovered_viewport_from_platform_window_stack(mouse_platform_pos: Any) -> Any: ...
def find_or_create_columns(window: Any, id_: Any) -> Any: ...
def find_rendered_text_end(text: str, text_end: str) -> str: ...
def find_settings_handler(type_name: str) -> Any: ...
def find_viewport_by_id(id_: Any) -> Any: ...
def find_viewport_by_platform_handle(platform_handle: Any) -> Any: ...
def find_window_by_id(id_: Any) -> Any: ...
def find_window_by_name(name: str) -> Any: ...
def find_window_display_index(window: Any) -> int: ...
def find_window_settings_by_id(id_: Any) -> Any: ...
def find_window_settings_by_window(window: Any) -> Any: ...
def focus_top_most_window_under_one(under_this_window: Any, ignore_window: Any) -> None: ...
def focus_window(window: Any) -> None: ...
def gc_awake_transient_window_buffers(window: Any) -> None: ...
def gc_compact_transient_misc_buffers() -> None: ...
def gc_compact_transient_window_buffers(window: Any) -> None: ...
def get_active_id() -> Any: ...
def get_allocator_functions(p_alloc_func: Any, p_free_func: Any, p_user_data: Any) -> None: ...
def get_background_draw_list_nil() -> Any: ...
def get_background_draw_list_viewport_ptr(viewport: Any) -> Any: ...
def get_clipboard_text() -> str: ...
def get_color_u32_col(idx: int, alpha_mul: float) -> Any: ...
def get_color_u32_u32(col: Any) -> Any: ...
def get_color_u32_vec4(col: Any) -> Any: ...
def get_column_index() -> int: ...
def get_column_norm_from_offset(columns: Any, offset: float) -> float: ...
def get_column_offset(column_index: int) -> float: ...
def get_column_offset_from_norm(columns: Any, offset_norm: float) -> float: ...
def get_column_width(column_index: int) -> float: ...
def get_columns_count() -> int: ...
def get_columns_id(str_id: str, count: int) -> Any: ...
def get_content_region_avail(pOut: Any) -> None: ...
def get_content_region_max(pOut: Any) -> None: ...
def get_content_region_max_abs(pOut: Any) -> None: ...
def get_current_context() -> Any: ...
def get_current_focus_scope() -> Any: ...
def get_current_tab_bar() -> Any: ...
def get_current_table() -> Any: ...
def get_current_window() -> Any: ...
def get_current_window_read() -> Any: ...
def get_cursor_pos(pOut: Any) -> None: ...
def get_cursor_posx() -> float: ...
def get_cursor_posy() -> float: ...
def get_cursor_screen_pos(pOut: Any) -> None: ...
def get_cursor_start_pos(pOut: Any) -> None: ...
def get_default_font() -> Any: ...
def get_drag_drop_payload() -> Any: ...
def get_draw_data() -> Any: ...
def get_draw_list_shared_data() -> Any: ...
def get_flt_max() -> float: ...
def get_flt_min() -> float: ...
def get_focus_id() -> Any: ...
def get_font() -> Any: ...
def get_font_size() -> float: ...
def get_font_tex_uv_white_pixel(pOut: Any) -> None: ...
def get_foreground_draw_list_nil() -> Any: ...
def get_foreground_draw_list_viewport_ptr(viewport: Any) -> Any: ...
def get_foreground_draw_list_window_ptr(window: Any) -> Any: ...
def get_frame_count() -> int: ...
def get_frame_height() -> float: ...
def get_frame_height_with_spacing() -> float: ...
def get_hovered_id() -> Any: ...
def get_id_ptr(ptr_id: Any) -> Any: ...
def get_id_str(str_id: str) -> Any: ...
def get_id_str_str(str_id_begin: str, str_id_end: str) -> Any: ...
def get_id_with_seed_int(n: int, seed: Any) -> Any: ...
def get_id_with_seed_str(str_id_begin: str, str_id_end: str, seed: Any) -> Any: ...
def get_input_text_state(id_: Any) -> Any: ...
def get_io() -> Any: ...
def get_item_flags() -> int: ...
def get_item_id() -> Any: ...
def get_item_rect_max(pOut: Any) -> None: ...
def get_item_rect_min(pOut: Any) -> None: ...
def get_item_rect_size(pOut: Any) -> None: ...
def get_item_status_flags() -> int: ...
def get_key_chord_name(key_chord: int, out_buf: str, out_buf_size: int) -> None: ...
def get_key_data(key: int) -> Any: ...
def get_key_index(key: int) -> int: ...
def get_key_magnitude_2d(pOut: Any, key_left: int, key_right: int, key_up: int, key_down: int) -> None: ...
def get_key_name(key: int) -> str: ...
def get_key_owner(key: int) -> Any: ...
def get_key_owner_data(key: int) -> Any: ...
def get_key_pressed_amount(key: int, repeat_delay: float, rate: float) -> int: ...
def get_main_viewport() -> Any: ...
def get_mouse_clicked_count(button: int) -> int: ...
def get_mouse_cursor() -> int: ...
def get_mouse_drag_delta(pOut: Any, button: int, lock_threshold: float) -> None: ...
def get_mouse_pos(pOut: Any) -> None: ...
def get_mouse_pos_on_opening_current_popup(pOut: Any) -> None: ...
def get_nav_tweak_pressed_amount(axis: int) -> float: ...
def get_platform_io() -> Any: ...
def get_popup_allowed_extent_rect(pOut: Any, window: Any) -> None: ...
def get_scroll_maxx() -> float: ...
def get_scroll_maxy() -> float: ...
def get_scrollx() -> float: ...
def get_scrolly() -> float: ...
def get_shortcut_routing_data(key_chord: int) -> Any: ...
def get_state_storage() -> Any: ...
def get_style() -> Any: ...
def get_style_color_name(idx: int) -> str: ...
def get_style_color_vec4(idx: int) -> Any: ...
def get_text_line_height() -> float: ...
def get_text_line_height_with_spacing() -> float: ...
def get_time() -> float: ...
def get_top_most_and_visible_popup_modal() -> Any: ...
def get_top_most_popup_modal() -> Any: ...
def get_tree_node_to_label_spacing() -> float: ...
def get_typematic_repeat_rate(flags: int, repeat_delay: Any, repeat_rate: Any) -> None: ...
def get_version() -> str: ...
def get_viewport_platform_monitor(viewport: Any) -> Any: ...
def get_window_always_want_own_tab_bar(window: Any) -> bool: ...
def get_window_content_region_max(pOut: Any) -> None: ...
def get_window_content_region_min(pOut: Any) -> None: ...
def get_window_dock_id() -> Any: ...
def get_window_dock_node() -> Any: ...
def get_window_dpi_scale() -> float: ...
def get_window_draw_list() -> Any: ...
def get_window_height() -> float: ...
def get_window_pos(pOut: Any) -> None: ...
def get_window_resize_border_id(window: Any, dir_: int) -> Any: ...
def get_window_resize_corner_id(window: Any, n: int) -> Any: ...
def get_window_scrollbar_id(window: Any, axis: int) -> Any: ...
def get_window_scrollbar_rect(pOut: Any, window: Any, axis: int) -> None: ...
def get_window_size(pOut: Any) -> None: ...
def get_window_viewport() -> Any: ...
def get_window_width() -> float: ...
def im_abs_double(x: float) -> float: ...
def im_abs_float(x: float) -> float: ...
def im_abs_int(x: int) -> int: ...
def im_alpha_blend_colors(col_a: Any, col_b: Any) -> Any: ...
def im_bezier_cubic_calc(pOut: Any, p1: Any, p2: Any, p3: Any, p4: Any, t: float) -> None: ...
def im_bezier_cubic_closest_point(pOut: Any, p1: Any, p2: Any, p3: Any, p4: Any, p: Any, num_segments: int) -> None: ...
def im_bezier_cubic_closest_point_casteljau(pOut: Any, p1: Any, p2: Any, p3: Any, p4: Any, p: Any, tess_tol: float) -> None: ...
def im_bezier_quadratic_calc(pOut: Any, p1: Any, p2: Any, p3: Any, t: float) -> None: ...
def im_bit_array_clear_all_bits(arr: Any, bitcount: int) -> None: ...
def im_bit_array_clear_bit(arr: Any, n: int) -> None: ...
def im_bit_array_get_storage_size_in_bytes(bitcount: int) -> Any: ...
def im_bit_array_set_bit(arr: Any, n: int) -> None: ...
def im_bit_array_set_bit_range(arr: Any, n: int, n2: int) -> None: ...
def im_bit_array_test_bit(arr: Any, n: int) -> bool: ...
def im_bit_vector_clear(self: Any) -> None: ...
def im_bit_vector_clear_bit(self: Any, n: int) -> None: ...
def im_bit_vector_create(self: Any, sz: int) -> None: ...
def im_bit_vector_set_bit(self: Any, n: int) -> None: ...
def im_bit_vector_test_bit(self: Any, n: int) -> bool: ...
def im_char_is_blanka(c: Any) -> bool: ...
def im_char_is_blankw(c: Any) -> bool: ...
def im_clamp(pOut: Any, v: Any, mn: Any, mx: Any) -> None: ...
def im_color_destroy(self: Any) -> None: ...
def im_color_hsv(pOut: Any, h: float, s: float, v: float, a: float) -> None: ...
def im_color_im_color_float(r: float, g: float, b: float, a: float) -> Any: ...
def im_color_im_color_int(r: int, g: int, b: int, a: int) -> Any: ...
def im_color_im_color_nil() -> Any: ...
def im_color_im_color_u32(rgba: Any) -> Any: ...
def im_color_im_color_vec4(col: Any) -> Any: ...
def im_color_set_hsv(self: Any, h: float, s: float, v: float, a: float) -> None: ...
def im_dot(a: Any, b: Any) -> float: ...
def im_draw_cmd_destroy(self: Any) -> None: ...
def im_draw_cmd_get_tex_id(self: Any) -> Any: ...
def im_draw_cmd_im_draw_cmd() -> Any: ...
def im_draw_data_builder_clear(self: Any) -> None: ...
def im_draw_data_builder_clear_free_memory(self: Any) -> None: ...
def im_draw_data_builder_flatten_into_single_layer(self: Any) -> None: ...
def im_draw_data_builder_get_draw_list_count(self: Any) -> int: ...
def im_draw_data_clear(self: Any) -> None: ...
def im_draw_data_de_index_all_buffers(self: Any) -> None: ...
def im_draw_data_destroy(self: Any) -> None: ...
def im_draw_data_im_draw_data() -> Any: ...
def im_draw_data_scale_clip_rects(self: Any, fb_scale: Any) -> None: ...
def im_draw_list__calc_circle_auto_segment_count(self: Any, radius: float) -> int: ...
def im_draw_list__clear_free_memory(self: Any) -> None: ...
def im_draw_list__on_changed_clip_rect(self: Any) -> None: ...
def im_draw_list__on_changed_texture_id(self: Any) -> None: ...
def im_draw_list__on_changed_vtx_offset(self: Any) -> None: ...
def im_draw_list__path_arc_to_fast_ex(self: Any, center: Any, radius: float, a_min_sample: int, a_max_sample: int, a_step: int) -> None: ...
def im_draw_list__path_arc_ton(self: Any, center: Any, radius: float, a_min: float, a_max: float, num_segments: int) -> None: ...
def im_draw_list__pop_unused_draw_cmd(self: Any) -> None: ...
def im_draw_list__reset_for_new_frame(self: Any) -> None: ...
def im_draw_list__try_merge_draw_cmds(self: Any) -> None: ...
def im_draw_list_add_bezier_cubic(self: Any, p1: Any, p2: Any, p3: Any, p4: Any, col: Any, thickness: float, num_segments: int) -> None: ...
def im_draw_list_add_bezier_quadratic(self: Any, p1: Any, p2: Any, p3: Any, col: Any, thickness: float, num_segments: int) -> None: ...
def im_draw_list_add_callback(self: Any, callback: Any, callback_data: Any) -> None: ...
def im_draw_list_add_circle(self: Any, center: Any, radius: float, col: Any, num_segments: int, thickness: float) -> None: ...
def im_draw_list_add_circle_filled(self: Any, center: Any, radius: float, col: Any, num_segments: int) -> None: ...
def im_draw_list_add_convex_poly_filled(self: Any, points: Any, num_points: int, col: Any) -> None: ...
def im_draw_list_add_draw_cmd(self: Any) -> None: ...
def im_draw_list_add_image(self: Any, user_texture_id: Any, p_min: Any, p_max: Any, uv_min: Any, uv_max: Any, col: Any) -> None: ...
def im_draw_list_add_image_quad(self: Any, user_texture_id: Any, p1: Any, p2: Any, p3: Any, p4: Any, uv1: Any, uv2: Any, uv3: Any, uv4: Any, col: Any) -> None: ...
def im_draw_list_add_image_rounded(self: Any, user_texture_id: Any, p_min: Any, p_max: Any, uv_min: Any, uv_max: Any, col: Any, rounding: float, flags: int) -> None: ...
def im_draw_list_add_line(self: Any, p1: Any, p2: Any, col: Any, thickness: float) -> None: ...
def im_draw_list_add_ngon(self: Any, center: Any, radius: float, col: Any, num_segments: int, thickness: float) -> None: ...
def im_draw_list_add_ngon_filled(self: Any, center: Any, radius: float, col: Any, num_segments: int) -> None: ...
def im_draw_list_add_polyline(self: Any, points: Any, num_points: int, col: Any, flags: int, thickness: float) -> None: ...
def im_draw_list_add_quad(self: Any, p1: Any, p2: Any, p3: Any, p4: Any, col: Any, thickness: float) -> None: ...
def im_draw_list_add_quad_filled(self: Any, p1: Any, p2: Any, p3: Any, p4: Any, col: Any) -> None: ...
def im_draw_list_add_rect(self: Any, p_min: Any, p_max: Any, col: Any, rounding: float, flags: int, thickness: float) -> None: ...
def im_draw_list_add_rect_filled(self: Any, p_min: Any, p_max: Any, col: Any, rounding: float, flags: int) -> None: ...
def im_draw_list_add_rect_filled_multi_color(self: Any, p_min: Any, p_max: Any, col_upr_left: Any, col_upr_right: Any, col_bot_right: Any, col_bot_left: Any) -> None: ...
def im_draw_list_add_text_font_ptr(self: Any, font: Any, font_size: float, pos: Any, col: Any, text_begin: str, text_end: str, wrap_width: float, cpu_fine_clip_rect: Any) -> None: ...
def im_draw_list_add_text_vec2(self: Any, pos: Any, col: Any, text_begin: str, text_end: str) -> None: ...
def im_draw_list_add_triangle(self: Any, p1: Any, p2: Any, p3: Any, col: Any, thickness: float) -> None: ...
def im_draw_list_add_triangle_filled(self: Any, p1: Any, p2: Any, p3: Any, col: Any) -> None: ...
def im_draw_list_channels_merge(self: Any) -> None: ...
def im_draw_list_channels_set_current(self: Any, n: int) -> None: ...
def im_draw_list_channels_split(self: Any, count: int) -> None: ...
def im_draw_list_clone_output(self: Any) -> Any: ...
def im_draw_list_destroy(self: Any) -> None: ...
def im_draw_list_get_clip_rect_max(pOut: Any, self: Any) -> None: ...
def im_draw_list_get_clip_rect_min(pOut: Any, self: Any) -> None: ...
def im_draw_list_im_draw_list(shared_data: Any) -> Any: ...
def im_draw_list_path_arc_to(self: Any, center: Any, radius: float, a_min: float, a_max: float, num_segments: int) -> None: ...
def im_draw_list_path_arc_to_fast(self: Any, center: Any, radius: float, a_min_of_12: int, a_max_of_12: int) -> None: ...
def im_draw_list_path_bezier_cubic_curve_to(self: Any, p2: Any, p3: Any, p4: Any, num_segments: int) -> None: ...
def im_draw_list_path_bezier_quadratic_curve_to(self: Any, p2: Any, p3: Any, num_segments: int) -> None: ...
def im_draw_list_path_clear(self: Any) -> None: ...
def im_draw_list_path_fill_convex(self: Any, col: Any) -> None: ...
def im_draw_list_path_line_to(self: Any, pos: Any) -> None: ...
def im_draw_list_path_line_to_merge_duplicate(self: Any, pos: Any) -> None: ...
def im_draw_list_path_rect(self: Any, rect_min: Any, rect_max: Any, rounding: float, flags: int) -> None: ...
def im_draw_list_path_stroke(self: Any, col: Any, flags: int, thickness: float) -> None: ...
def im_draw_list_pop_clip_rect(self: Any) -> None: ...
def im_draw_list_pop_texture_id(self: Any) -> None: ...
def im_draw_list_prim_quad_uv(self: Any, a: Any, b: Any, c: Any, d: Any, uv_a: Any, uv_b: Any, uv_c: Any, uv_d: Any, col: Any) -> None: ...
def im_draw_list_prim_rect(self: Any, a: Any, b: Any, col: Any) -> None: ...
def im_draw_list_prim_rect_uv(self: Any, a: Any, b: Any, uv_a: Any, uv_b: Any, col: Any) -> None: ...
def im_draw_list_prim_reserve(self: Any, idx_count: int, vtx_count: int) -> None: ...
def im_draw_list_prim_unreserve(self: Any, idx_count: int, vtx_count: int) -> None: ...
def im_draw_list_prim_vtx(self: Any, pos: Any, uv: Any, col: Any) -> None: ...
def im_draw_list_prim_write_idx(self: Any, idx: Any) -> None: ...
def im_draw_list_prim_write_vtx(self: Any, pos: Any, uv: Any, col: Any) -> None: ...
def im_draw_list_push_clip_rect(self: Any, clip_rect_min: Any, clip_rect_max: Any, intersect_with_current_clip_rect: bool) -> None: ...
def im_draw_list_push_clip_rect_full_screen(self: Any) -> None: ...
def im_draw_list_push_texture_id(self: Any, texture_id: Any) -> None: ...
def im_draw_list_shared_data_destroy(self: Any) -> None: ...
def im_draw_list_shared_data_im_draw_list_shared_data() -> Any: ...
def im_draw_list_shared_data_set_circle_tessellation_max_error(self: Any, max_error: float) -> None: ...
def im_draw_list_splitter_clear(self: Any) -> None: ...
def im_draw_list_splitter_clear_free_memory(self: Any) -> None: ...
def im_draw_list_splitter_destroy(self: Any) -> None: ...
def im_draw_list_splitter_im_draw_list_splitter() -> Any: ...
def im_draw_list_splitter_merge(self: Any, draw_list: Any) -> None: ...
def im_draw_list_splitter_set_current_channel(self: Any, draw_list: Any, channel_idx: int) -> None: ...
def im_draw_list_splitter_split(self: Any, draw_list: Any, count: int) -> None: ...
def im_exponential_moving_average(avg: float, sample: float, n: int) -> float: ...
def im_file_close(file: Any) -> bool: ...
def im_file_get_size(file: Any) -> Any: ...
def im_file_load_to_memory(filename: str, mode: str, out_file_size: Any, padding_bytes: int) -> Any: ...
def im_file_open(filename: str, mode: str) -> Any: ...
def im_file_read(data: Any, size: Any, count: Any, file: Any) -> Any: ...
def im_file_write(data: Any, size: Any, count: Any, file: Any) -> Any: ...
def im_floor_float(f: float) -> float: ...
def im_floor_signed_float(f: float) -> float: ...
def im_floor_signed_vec2(pOut: Any, v: Any) -> None: ...
def im_floor_vec2(pOut: Any, v: Any) -> None: ...
def im_font_add_glyph(self: Any, src_cfg: Any, c: Any, x0: float, y0: float, x1: float, y1: float, u0: float, v0: float, u1: float, v1: float, advance_x: float) -> None: ...
def im_font_add_remap_char(self: Any, dst: Any, src: Any, overwrite_dst: bool) -> None: ...
def im_font_atlas_add_custom_rect_font_glyph(self: Any, font: Any, id_: Any, width: int, height: int, advance_x: float, offset: Any) -> int: ...
def im_font_atlas_add_custom_rect_regular(self: Any, width: int, height: int) -> int: ...
def im_font_atlas_add_font(self: Any, font_cfg: Any) -> Any: ...
def im_font_atlas_add_font_default(self: Any, font_cfg: Any) -> Any: ...
def im_font_atlas_add_font_from_file_ttf(self: Any, filename: str, size_pixels: float, font_cfg: Any, glyph_ranges: Any) -> Any: ...
def im_font_atlas_add_font_from_memory_compressed_base_85ttf(self: Any, compressed_font_data_base85: str, size_pixels: float, font_cfg: Any, glyph_ranges: Any) -> Any: ...
def im_font_atlas_add_font_from_memory_compressed_ttf(self: Any, compressed_font_data: Any, compressed_font_size: int, size_pixels: float, font_cfg: Any, glyph_ranges: Any) -> Any: ...
def im_font_atlas_add_font_from_memory_ttf(self: Any, font_data: Any, font_size: int, size_pixels: float, font_cfg: Any, glyph_ranges: Any) -> Any: ...
def im_font_atlas_build(self: Any) -> bool: ...
def im_font_atlas_build_finish(atlas: Any) -> None: ...
def im_font_atlas_build_init(atlas: Any) -> None: ...
def im_font_atlas_build_multiply_calc_lookup_table(out_table: Any, in_multiply_factor: float) -> None: ...
def im_font_atlas_build_multiply_rect_alpha8(table: Any, pixels: str, x: int, y: int, w: int, h: int, stride: int) -> None: ...
def im_font_atlas_build_pack_custom_rects(atlas: Any, stbrp_context_opaque: Any) -> None: ...
def im_font_atlas_build_render_3_2bpp_rect_from_string(atlas: Any, x: int, y: int, w: int, h: int, in_str: str, in_marker_char: Any, in_marker_pixel_value: Any) -> None: ...
def im_font_atlas_build_render_8bpp_rect_from_string(atlas: Any, x: int, y: int, w: int, h: int, in_str: str, in_marker_char: Any, in_marker_pixel_value: Any) -> None: ...
def im_font_atlas_build_setup_font(atlas: Any, font: Any, font_config: Any, ascent: float, descent: float) -> None: ...
def im_font_atlas_calc_custom_rect_uv(self: Any, rect: Any, out_uv_min: Any, out_uv_max: Any) -> None: ...
def im_font_atlas_clear(self: Any) -> None: ...
def im_font_atlas_clear_fonts(self: Any) -> None: ...
def im_font_atlas_clear_input_data(self: Any) -> None: ...
def im_font_atlas_clear_tex_data(self: Any) -> None: ...
def im_font_atlas_custom_rect_destroy(self: Any) -> None: ...
def im_font_atlas_custom_rect_im_font_atlas_custom_rect() -> Any: ...
def im_font_atlas_custom_rect_is_packed(self: Any) -> bool: ...
def im_font_atlas_destroy(self: Any) -> None: ...
def im_font_atlas_get_builder_for_stb_truetype() -> Any: ...
def im_font_atlas_get_custom_rect_by_index(self: Any, index: int) -> Any: ...
def im_font_atlas_get_glyph_ranges_chinese_full(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_chinese_simplified_common(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_cyrillic(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_default(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_greek(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_japanese(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_korean(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_thai(self: Any) -> Any: ...
def im_font_atlas_get_glyph_ranges_vietnamese(self: Any) -> Any: ...
def im_font_atlas_get_mouse_cursor_tex_data(self: Any, cursor: int, out_offset: Any, out_size: Any, out_uv_border: Any, out_uv_fill: Any) -> bool: ...
def im_font_atlas_get_tex_data_as_alpha8(self: Any, out_pixels: Any, out_width: Any, out_height: Any, out_bytes_per_pixel: Any) -> None: ...
def im_font_atlas_get_tex_data_as_rgba32(self: Any, out_pixels: Any, out_width: Any, out_height: Any, out_bytes_per_pixel: Any) -> None: ...
def im_font_atlas_im_font_atlas() -> Any: ...
def im_font_atlas_is_built(self: Any) -> bool: ...
def im_font_atlas_set_tex_id(self: Any, id_: Any) -> None: ...
def im_font_build_lookup_table(self: Any) -> None: ...
def im_font_calc_text_sizea(pOut: Any, self: Any, size: float, max_width: float, wrap_width: float, text_begin: str, text_end: str, remaining: Any) -> None: ...
def im_font_calc_word_wrap_positiona(self: Any, scale: float, text: str, text_end: str, wrap_width: float) -> str: ...
def im_font_clear_output_data(self: Any) -> None: ...
def im_font_config_destroy(self: Any) -> None: ...
def im_font_config_im_font_config() -> Any: ...
def im_font_destroy(self: Any) -> None: ...
def im_font_find_glyph(self: Any, c: Any) -> Any: ...
def im_font_find_glyph_no_fallback(self: Any, c: Any) -> Any: ...
def im_font_get_char_advance(self: Any, c: Any) -> float: ...
def im_font_get_debug_name(self: Any) -> str: ...
def im_font_glyph_ranges_builder_add_char(self: Any, c: Any) -> None: ...
def im_font_glyph_ranges_builder_add_ranges(self: Any, ranges: Any) -> None: ...
def im_font_glyph_ranges_builder_add_text(self: Any, text: str, text_end: str) -> None: ...
def im_font_glyph_ranges_builder_build_ranges(self: Any, out_ranges: Any) -> None: ...
def im_font_glyph_ranges_builder_clear(self: Any) -> None: ...
def im_font_glyph_ranges_builder_destroy(self: Any) -> None: ...
def im_font_glyph_ranges_builder_get_bit(self: Any, n: Any) -> bool: ...
def im_font_glyph_ranges_builder_im_font_glyph_ranges_builder() -> Any: ...
def im_font_glyph_ranges_builder_set_bit(self: Any, n: Any) -> None: ...
def im_font_grow_index(self: Any, new_size: int) -> None: ...
def im_font_im_font() -> Any: ...
def im_font_is_glyph_range_unused(self: Any, c_begin: Any, c_last: Any) -> bool: ...
def im_font_is_loaded(self: Any) -> bool: ...
def im_font_render_char(self: Any, draw_list: Any, size: float, pos: Any, col: Any, c: Any) -> None: ...
def im_font_render_text(self: Any, draw_list: Any, size: float, pos: Any, col: Any, clip_rect: Any, text_begin: str, text_end: str, wrap_width: float, cpu_fine_clip: bool) -> None: ...
def im_font_set_glyph_visible(self: Any, c: Any, visible: bool) -> None: ...
def im_format_string(buf: str, buf_size: Any, fmt: str) -> int: ...
def im_format_string_to_temp_buffer(out_buf: Any, out_buf_end: Any, fmt: str) -> None: ...
def im_format_string_to_temp_bufferv(out_buf: Any, out_buf_end: Any, fmt: str, args: str) -> None: ...
def im_format_stringv(buf: str, buf_size: Any, fmt: str, args: str) -> int: ...
def im_get_dir_quadrant_from_delta(dx: float, dy: float) -> int: ...
def im_hash_data(data: Any, data_size: Any, seed: Any) -> Any: ...
def im_hash_str(data: str, data_size: Any, seed: Any) -> Any: ...
def im_inv_length(lhs: Any, fail_value: float) -> float: ...
def im_is_float_above_guaranteed_integer_precision(f: float) -> bool: ...
def im_is_power_of_two_int(v: int) -> bool: ...
def im_is_power_of_two_u64(v: Any) -> bool: ...
def im_length_sqr_vec2(lhs: Any) -> float: ...
def im_length_sqr_vec4(lhs: Any) -> float: ...
def im_lerp_vec4(pOut: Any, a: Any, b: Any, t: float) -> None: ...
def im_lerp_vec_2_float(pOut: Any, a: Any, b: Any, t: float) -> None: ...
def im_lerp_vec_2_vec2(pOut: Any, a: Any, b: Any, t: Any) -> None: ...
def im_line_closest_point(pOut: Any, a: Any, b: Any, p: Any) -> None: ...
def im_linear_sweep(current: float, target: float, speed: float) -> float: ...
def im_log_double(x: float) -> float: ...
def im_log_float(x: float) -> float: ...
def im_max(pOut: Any, lhs: Any, rhs: Any) -> None: ...
def im_min(pOut: Any, lhs: Any, rhs: Any) -> None: ...
def im_mod_positive(a: int, b: int) -> int: ...
def im_mul(pOut: Any, lhs: Any, rhs: Any) -> None: ...
def im_parse_format_find_end(format_: str) -> str: ...
def im_parse_format_find_start(format_: str) -> str: ...
def im_parse_format_precision(format_: str, default_value: int) -> int: ...
def im_parse_format_sanitize_for_printing(fmt_in: str, fmt_out: str, fmt_out_size: Any) -> None: ...
def im_parse_format_sanitize_for_scanning(fmt_in: str, fmt_out: str, fmt_out_size: Any) -> str: ...
def im_parse_format_trim_decorations(format_: str, buf: str, buf_size: Any) -> str: ...
def im_pow_double(x: float, y: float) -> float: ...
def im_pow_float(x: float, y: float) -> float: ...
def im_qsort(base: Any, count: Any, size_of_element: Any, compare_func: Callable) -> None: ...
def im_rect_add_rect(self: Any, r: Any) -> None: ...
def im_rect_add_vec2(self: Any, p: Any) -> None: ...
def im_rect_clip_with(self: Any, r: Any) -> None: ...
def im_rect_clip_with_full(self: Any, r: Any) -> None: ...
def im_rect_contains_rect(self: Any, r: Any) -> bool: ...
def im_rect_contains_vec2(self: Any, p: Any) -> bool: ...
def im_rect_destroy(self: Any) -> None: ...
def im_rect_expand_float(self: Any, amount: Any) -> None: ...
def im_rect_expand_vec2(self: Any, amount: Any) -> None: ...
def im_rect_floor(self: Any) -> None: ...
def im_rect_get_area(self: Any) -> float: ...
def im_rect_get_bl(pOut: Any, self: Any) -> None: ...
def im_rect_get_br(pOut: Any, self: Any) -> None: ...
def im_rect_get_center(pOut: Any, self: Any) -> None: ...
def im_rect_get_height(self: Any) -> float: ...
def im_rect_get_size(pOut: Any, self: Any) -> None: ...
def im_rect_get_tl(pOut: Any, self: Any) -> None: ...
def im_rect_get_tr(pOut: Any, self: Any) -> None: ...
def im_rect_get_width(self: Any) -> float: ...
def im_rect_im_rect_float(x1: float, y1: float, x2: float, y2: float) -> Any: ...
def im_rect_im_rect_nil() -> Any: ...
def im_rect_im_rect_vec2(min_: Any, max_: Any) -> Any: ...
def im_rect_im_rect_vec4(v: Any) -> Any: ...
def im_rect_is_inverted(self: Any) -> bool: ...
def im_rect_overlaps(self: Any, r: Any) -> bool: ...
def im_rect_to_vec4(pOut: Any, self: Any) -> None: ...
def im_rect_translate(self: Any, d: Any) -> None: ...
def im_rect_translatex(self: Any, dx: float) -> None: ...
def im_rect_translatey(self: Any, dy: float) -> None: ...
def im_rotate(pOut: Any, v: Any, cos_a: float, sin_a: float) -> None: ...
def im_rsqrt_double(x: float) -> float: ...
def im_rsqrt_float(x: float) -> float: ...
def im_saturate(f: float) -> float: ...
def im_sign_double(x: float) -> float: ...
def im_sign_float(x: float) -> float: ...
def im_str_skip_blank(str_: str) -> str: ...
def im_str_trim_blanks(str_: str) -> None: ...
def im_strbolw(buf_mid_line: Any, buf_begin: Any) -> Any: ...
def im_strchr_range(str_begin: str, str_end: str, c: Any) -> str: ...
def im_strdup(str_: str) -> str: ...
def im_strdupcpy(dst: str, p_dst_size: Any, str_: str) -> str: ...
def im_streol_range(str_: str, str_end: str) -> str: ...
def im_stricmp(str1: str, str2: str) -> int: ...
def im_stristr(haystack: str, haystack_end: str, needle: str, needle_end: str) -> str: ...
def im_strlenw(str_: Any) -> int: ...
def im_strncpy(dst: str, src: str, count: Any) -> None: ...
def im_strnicmp(str1: str, str2: str, count: Any) -> int: ...
def im_text_char_from_utf8(out_char: Any, in_text: str, in_text_end: str) -> int: ...
def im_text_char_to_utf8(out_buf: Any, c: Any) -> str: ...
def im_text_count_chars_from_utf8(in_text: str, in_text_end: str) -> int: ...
def im_text_count_utf_8_bytes_from_char(in_text: str, in_text_end: str) -> int: ...
def im_text_count_utf_8_bytes_from_str(in_text: Any, in_text_end: Any) -> int: ...
def im_text_str_from_utf8(out_buf: Any, out_buf_size: int, in_text: str, in_text_end: str, in_remaining: Any) -> int: ...
def im_text_str_to_utf8(out_buf: str, out_buf_size: int, in_text: Any, in_text_end: Any) -> int: ...
def im_to_upper(c: Any) -> Any: ...
def im_triangle_area(a: Any, b: Any, c: Any) -> float: ...
def im_triangle_barycentric_coords(a: Any, b: Any, c: Any, p: Any, out_u: Any, out_v: Any, out_w: Any) -> None: ...
def im_triangle_closest_point(pOut: Any, a: Any, b: Any, c: Any, p: Any) -> None: ...
def im_triangle_contains_point(a: Any, b: Any, c: Any, p: Any) -> bool: ...
def im_upper_power_of_two(v: int) -> int: ...
def im_vec_1_destroy(self: Any) -> None: ...
def im_vec_1_im_vec_1_float(_x: float) -> Any: ...
def im_vec_1_im_vec_1_nil() -> Any: ...
def im_vec_2_destroy(self: Any) -> None: ...
def im_vec_2_im_vec_2_float(_x: float, _y: float) -> Any: ...
def im_vec_2_im_vec_2_nil() -> Any: ...
def im_vec_2ih_destroy(self: Any) -> None: ...
def im_vec_2ih_im_vec_2ih_nil() -> Any: ...
def im_vec_2ih_im_vec_2ih_short(_x: Any, _y: Any) -> Any: ...
def im_vec_2ih_im_vec_2ih_vec2(rhs: Any) -> Any: ...
def im_vec_4_destroy(self: Any) -> None: ...
def im_vec_4_im_vec_4_float(_x: float, _y: float, _z: float, _w: float) -> Any: ...
def im_vec_4_im_vec_4_nil() -> Any: ...
def im_vector_im_wchar_create() -> Any: ...
def im_vector_im_wchar_destroy(self: Any) -> None: ...
def im_vector_im_wchar_init(p: Any) -> None: ...
def im_vector_im_wchar_un_init(p: Any) -> None: ...
def image(user_texture_id: Any, size: Any, uv0: Any, uv1: Any, tint_col: Any, border_col: Any) -> None: ...
def image_button(str_id: str, user_texture_id: Any, size: Any, uv0: Any, uv1: Any, bg_col: Any, tint_col: Any) -> bool: ...
def image_button_ex(id_: Any, texture_id: Any, size: Any, uv0: Any, uv1: Any, bg_col: Any, tint_col: Any, flags: int) -> bool: ...
def imgui_combo_preview_data_destroy(self: Any) -> None: ...
def imgui_combo_preview_data_imgui_combo_preview_data() -> Any: ...
def imgui_context_destroy(self: Any) -> None: ...
def imgui_context_hook_destroy(self: Any) -> None: ...
def imgui_context_hook_imgui_context_hook() -> Any: ...
def imgui_context_imgui_context(shared_font_atlas: Any) -> Any: ...
def imgui_dock_context_destroy(self: Any) -> None: ...
def imgui_dock_context_imgui_dock_context() -> Any: ...
def imgui_dock_node_destroy(self: Any) -> None: ...
def imgui_dock_node_imgui_dock_node(id_: Any) -> Any: ...
def imgui_dock_node_is_central_node(self: Any) -> bool: ...
def imgui_dock_node_is_dock_space(self: Any) -> bool: ...
def imgui_dock_node_is_empty(self: Any) -> bool: ...
def imgui_dock_node_is_floating_node(self: Any) -> bool: ...
def imgui_dock_node_is_hidden_tab_bar(self: Any) -> bool: ...
def imgui_dock_node_is_leaf_node(self: Any) -> bool: ...
def imgui_dock_node_is_no_tab_bar(self: Any) -> bool: ...
def imgui_dock_node_is_root_node(self: Any) -> bool: ...
def imgui_dock_node_is_split_node(self: Any) -> bool: ...
def imgui_dock_node_rect(pOut: Any, self: Any) -> None: ...
def imgui_dock_node_set_local_flags(self: Any, flags: int) -> None: ...
def imgui_dock_node_update_merged_flags(self: Any) -> None: ...
def imgui_input_event_destroy(self: Any) -> None: ...
def imgui_input_event_imgui_input_event() -> Any: ...
def imgui_input_text_callback_data_clear_selection(self: Any) -> None: ...
def imgui_input_text_callback_data_delete_chars(self: Any, pos: int, bytes_count: int) -> None: ...
def imgui_input_text_callback_data_destroy(self: Any) -> None: ...
def imgui_input_text_callback_data_has_selection(self: Any) -> bool: ...
def imgui_input_text_callback_data_imgui_input_text_callback_data() -> Any: ...
def imgui_input_text_callback_data_insert_chars(self: Any, pos: int, text: str, text_end: str) -> None: ...
def imgui_input_text_callback_data_select_all(self: Any) -> None: ...
def imgui_input_text_state_clear_free_memory(self: Any) -> None: ...
def imgui_input_text_state_clear_selection(self: Any) -> None: ...
def imgui_input_text_state_clear_text(self: Any) -> None: ...
def imgui_input_text_state_cursor_anim_reset(self: Any) -> None: ...
def imgui_input_text_state_cursor_clamp(self: Any) -> None: ...
def imgui_input_text_state_destroy(self: Any) -> None: ...
def imgui_input_text_state_get_cursor_pos(self: Any) -> int: ...
def imgui_input_text_state_get_redo_avail_count(self: Any) -> int: ...
def imgui_input_text_state_get_selection_end(self: Any) -> int: ...
def imgui_input_text_state_get_selection_start(self: Any) -> int: ...
def imgui_input_text_state_get_undo_avail_count(self: Any) -> int: ...
def imgui_input_text_state_has_selection(self: Any) -> bool: ...
def imgui_input_text_state_imgui_input_text_state(ctx: Any) -> Any: ...
def imgui_input_text_state_on_key_pressed(self: Any, key: int) -> None: ...
def imgui_input_text_state_select_all(self: Any) -> None: ...
def imgui_io_add_focus_event(self: Any, focused: bool) -> None: ...
def imgui_io_add_input_character(self: Any, c: Any) -> None: ...
def imgui_io_add_input_character_utf16(self: Any, c: Any) -> None: ...
def imgui_io_add_input_characters_utf8(self: Any, str_: str) -> None: ...
def imgui_io_add_key_analog_event(self: Any, key: int, down: bool, v: float) -> None: ...
def imgui_io_add_key_event(self: Any, key: int, down: bool) -> None: ...
def imgui_io_add_mouse_button_event(self: Any, button: int, down: bool) -> None: ...
def imgui_io_add_mouse_pos_event(self: Any, x: float, y: float) -> None: ...
def imgui_io_add_mouse_viewport_event(self: Any, id_: Any) -> None: ...
def imgui_io_add_mouse_wheel_event(self: Any, wheel_x: float, wheel_y: float) -> None: ...
def imgui_io_clear_input_characters(self: Any) -> None: ...
def imgui_io_clear_input_keys(self: Any) -> None: ...
def imgui_io_destroy(self: Any) -> None: ...
def imgui_io_imgui_io() -> Any: ...
def imgui_io_set_app_accepting_events(self: Any, accepting_events: bool) -> None: ...
def imgui_io_set_key_event_native_data(self: Any, key: int, native_keycode: int, native_scancode: int, native_legacy_index: int) -> None: ...
def imgui_key_owner_data_destroy(self: Any) -> None: ...
def imgui_key_owner_data_imgui_key_owner_data() -> Any: ...
def imgui_key_routing_data_destroy(self: Any) -> None: ...
def imgui_key_routing_data_imgui_key_routing_data() -> Any: ...
def imgui_key_routing_table_clear(self: Any) -> None: ...
def imgui_key_routing_table_destroy(self: Any) -> None: ...
def imgui_key_routing_table_imgui_key_routing_table() -> Any: ...
def imgui_last_item_data_destroy(self: Any) -> None: ...
def imgui_last_item_data_imgui_last_item_data() -> Any: ...
def imgui_list_clipper_begin(self: Any, items_count: int, items_height: float) -> None: ...
def imgui_list_clipper_data_destroy(self: Any) -> None: ...
def imgui_list_clipper_data_imgui_list_clipper_data() -> Any: ...
def imgui_list_clipper_data_reset(self: Any, clipper: Any) -> None: ...
def imgui_list_clipper_destroy(self: Any) -> None: ...
def imgui_list_clipper_end(self: Any) -> None: ...
def imgui_list_clipper_force_display_range_by_indices(self: Any, item_min: int, item_max: int) -> None: ...
def imgui_list_clipper_imgui_list_clipper() -> Any: ...
def imgui_list_clipper_range_from_indices(min_: int, max_: int) -> Any: ...
def imgui_list_clipper_range_from_positions(y1: float, y2: float, off_min: int, off_max: int) -> Any: ...
def imgui_list_clipper_step(self: Any) -> bool: ...
def imgui_menu_columns_calc_next_total_width(self: Any, update_offsets: bool) -> None: ...
def imgui_menu_columns_decl_columns(self: Any, w_icon: float, w_label: float, w_shortcut: float, w_mark: float) -> float: ...
def imgui_menu_columns_destroy(self: Any) -> None: ...
def imgui_menu_columns_imgui_menu_columns() -> Any: ...
def imgui_menu_columns_update(self: Any, spacing: float, window_reappearing: bool) -> None: ...
def imgui_nav_item_data_clear(self: Any) -> None: ...
def imgui_nav_item_data_destroy(self: Any) -> None: ...
def imgui_nav_item_data_imgui_nav_item_data() -> Any: ...
def imgui_next_item_data_clear_flags(self: Any) -> None: ...
def imgui_next_item_data_destroy(self: Any) -> None: ...
def imgui_next_item_data_imgui_next_item_data() -> Any: ...
def imgui_next_window_data_clear_flags(self: Any) -> None: ...
def imgui_next_window_data_destroy(self: Any) -> None: ...
def imgui_next_window_data_imgui_next_window_data() -> Any: ...
def imgui_old_column_data_destroy(self: Any) -> None: ...
def imgui_old_column_data_imgui_old_column_data() -> Any: ...
def imgui_old_columns_destroy(self: Any) -> None: ...
def imgui_old_columns_imgui_old_columns() -> Any: ...
def imgui_once_upon_a_frame_destroy(self: Any) -> None: ...
def imgui_once_upon_a_frame_imgui_once_upon_a_frame() -> Any: ...
def imgui_payload_clear(self: Any) -> None: ...
def imgui_payload_destroy(self: Any) -> None: ...
def imgui_payload_imgui_payload() -> Any: ...
def imgui_payload_is_data_type(self: Any, type_: str) -> bool: ...
def imgui_payload_is_delivery(self: Any) -> bool: ...
def imgui_payload_is_preview(self: Any) -> bool: ...
def imgui_platform_ime_data_destroy(self: Any) -> None: ...
def imgui_platform_ime_data_imgui_platform_ime_data() -> Any: ...
def imgui_platform_io_destroy(self: Any) -> None: ...
def imgui_platform_io_imgui_platform_io() -> Any: ...
def imgui_platform_monitor_destroy(self: Any) -> None: ...
def imgui_platform_monitor_imgui_platform_monitor() -> Any: ...
def imgui_popup_data_destroy(self: Any) -> None: ...
def imgui_popup_data_imgui_popup_data() -> Any: ...
def imgui_ptr_or_index_destroy(self: Any) -> None: ...
def imgui_ptr_or_index_imgui_ptr_or_index_int(index: int) -> Any: ...
def imgui_ptr_or_index_imgui_ptr_or_index_ptr(ptr: Any) -> Any: ...
def imgui_settings_handler_destroy(self: Any) -> None: ...
def imgui_settings_handler_imgui_settings_handler() -> Any: ...
def imgui_stack_level_info_destroy(self: Any) -> None: ...
def imgui_stack_level_info_imgui_stack_level_info() -> Any: ...
def imgui_stack_sizes_compare_with_current_state(self: Any) -> None: ...
def imgui_stack_sizes_destroy(self: Any) -> None: ...
def imgui_stack_sizes_imgui_stack_sizes() -> Any: ...
def imgui_stack_sizes_set_to_current_state(self: Any) -> None: ...
def imgui_stack_tool_destroy(self: Any) -> None: ...
def imgui_stack_tool_imgui_stack_tool() -> Any: ...
def imgui_storage_build_sort_by_key(self: Any) -> None: ...
def imgui_storage_clear(self: Any) -> None: ...
def imgui_storage_get_bool(self: Any, key: Any, default_val: bool) -> bool: ...
def imgui_storage_get_bool_ref(self: Any, key: Any, default_val: bool) -> Any: ...
def imgui_storage_get_float(self: Any, key: Any, default_val: float) -> float: ...
def imgui_storage_get_float_ref(self: Any, key: Any, default_val: float) -> Any: ...
def imgui_storage_get_int(self: Any, key: Any, default_val: int) -> int: ...
def imgui_storage_get_int_ref(self: Any, key: Any, default_val: int) -> Any: ...
def imgui_storage_get_void_ptr(self: Any, key: Any) -> Any: ...
def imgui_storage_get_void_ptr_ref(self: Any, key: Any, default_val: Any) -> Any: ...
def imgui_storage_pair_destroy(self: Any) -> None: ...
def imgui_storage_pair_imgui_storage_pair_float(_key: Any, _val_f: float) -> Any: ...
def imgui_storage_pair_imgui_storage_pair_int(_key: Any, _val_i: int) -> Any: ...
def imgui_storage_pair_imgui_storage_pair_ptr(_key: Any, _val_p: Any) -> Any: ...
def imgui_storage_set_all_int(self: Any, val: int) -> None: ...
def imgui_storage_set_bool(self: Any, key: Any, val: bool) -> None: ...
def imgui_storage_set_float(self: Any, key: Any, val: float) -> None: ...
def imgui_storage_set_int(self: Any, key: Any, val: int) -> None: ...
def imgui_storage_set_void_ptr(self: Any, key: Any, val: Any) -> None: ...
def imgui_style_destroy(self: Any) -> None: ...
def imgui_style_imgui_style() -> Any: ...
def imgui_style_mod_destroy(self: Any) -> None: ...
def imgui_style_mod_imgui_style_mod_float(idx: int, v: float) -> Any: ...
def imgui_style_mod_imgui_style_mod_int(idx: int, v: int) -> Any: ...
def imgui_style_mod_imgui_style_mod_vec2(idx: int, v: Any) -> Any: ...
def imgui_style_scale_all_sizes(self: Any, scale_factor: float) -> None: ...
def imgui_tab_bar_destroy(self: Any) -> None: ...
def imgui_tab_bar_imgui_tab_bar() -> Any: ...
def imgui_tab_item_destroy(self: Any) -> None: ...
def imgui_tab_item_imgui_tab_item() -> Any: ...
def imgui_table_column_destroy(self: Any) -> None: ...
def imgui_table_column_imgui_table_column() -> Any: ...
def imgui_table_column_settings_destroy(self: Any) -> None: ...
def imgui_table_column_settings_imgui_table_column_settings() -> Any: ...
def imgui_table_column_sort_specs_destroy(self: Any) -> None: ...
def imgui_table_column_sort_specs_imgui_table_column_sort_specs() -> Any: ...
def imgui_table_destroy(self: Any) -> None: ...
def imgui_table_imgui_table() -> Any: ...
def imgui_table_instance_data_destroy(self: Any) -> None: ...
def imgui_table_instance_data_imgui_table_instance_data() -> Any: ...
def imgui_table_settings_destroy(self: Any) -> None: ...
def imgui_table_settings_get_column_settings(self: Any) -> Any: ...
def imgui_table_settings_imgui_table_settings() -> Any: ...
def imgui_table_sort_specs_destroy(self: Any) -> None: ...
def imgui_table_sort_specs_imgui_table_sort_specs() -> Any: ...
def imgui_table_temp_data_destroy(self: Any) -> None: ...
def imgui_table_temp_data_imgui_table_temp_data() -> Any: ...
def imgui_text_buffer_append(self: Any, str_: str, str_end: str) -> None: ...
def imgui_text_buffer_appendf(buffer: Any, fmt: str) -> None: ...
def imgui_text_buffer_appendfv(self: Any, fmt: str, args: str) -> None: ...
def imgui_text_buffer_begin(self: Any) -> str: ...
def imgui_text_buffer_c_str(self: Any) -> str: ...
def imgui_text_buffer_clear(self: Any) -> None: ...
def imgui_text_buffer_destroy(self: Any) -> None: ...
def imgui_text_buffer_empty(self: Any) -> bool: ...
def imgui_text_buffer_end(self: Any) -> str: ...
def imgui_text_buffer_imgui_text_buffer() -> Any: ...
def imgui_text_buffer_reserve(self: Any, capacity: int) -> None: ...
def imgui_text_buffer_size(self: Any) -> int: ...
def imgui_text_filter_build(self: Any) -> None: ...
def imgui_text_filter_clear(self: Any) -> None: ...
def imgui_text_filter_destroy(self: Any) -> None: ...
def imgui_text_filter_draw(self: Any, label: str, width: float) -> bool: ...
def imgui_text_filter_imgui_text_filter(default_filter: str) -> Any: ...
def imgui_text_filter_is_active(self: Any) -> bool: ...
def imgui_text_filter_pass_filter(self: Any, text: str, text_end: str) -> bool: ...
def imgui_text_index_append(self: Any, base: str, old_size: int, new_size: int) -> None: ...
def imgui_text_index_clear(self: Any) -> None: ...
def imgui_text_index_get_line_begin(self: Any, base: str, n: int) -> str: ...
def imgui_text_index_get_line_end(self: Any, base: str, n: int) -> str: ...
def imgui_text_index_size(self: Any) -> int: ...
def imgui_text_range_destroy(self: Any) -> None: ...
def imgui_text_range_empty(self: Any) -> bool: ...
def imgui_text_range_imgui_text_range_nil() -> Any: ...
def imgui_text_range_imgui_text_range_str(_b: str, _e: str) -> Any: ...
def imgui_text_range_split(self: Any, separator: Any, out: Any) -> None: ...
def imgui_viewport_destroy(self: Any) -> None: ...
def imgui_viewport_get_center(pOut: Any, self: Any) -> None: ...
def imgui_viewport_get_work_center(pOut: Any, self: Any) -> None: ...
def imgui_viewport_imgui_viewport() -> Any: ...
def imgui_viewport_p_calc_work_rect_pos(pOut: Any, self: Any, off_min: Any) -> None: ...
def imgui_viewport_p_calc_work_rect_size(pOut: Any, self: Any, off_min: Any, off_max: Any) -> None: ...
def imgui_viewport_p_clear_request_flags(self: Any) -> None: ...
def imgui_viewport_p_destroy(self: Any) -> None: ...
def imgui_viewport_p_get_build_work_rect(pOut: Any, self: Any) -> None: ...
def imgui_viewport_p_get_main_rect(pOut: Any, self: Any) -> None: ...
def imgui_viewport_p_get_work_rect(pOut: Any, self: Any) -> None: ...
def imgui_viewport_p_imgui_viewportp() -> Any: ...
def imgui_viewport_p_update_work_rect(self: Any) -> None: ...
def imgui_window_calc_font_size(self: Any) -> float: ...
def imgui_window_class_destroy(self: Any) -> None: ...
def imgui_window_class_imgui_window_class() -> Any: ...
def imgui_window_destroy(self: Any) -> None: ...
def imgui_window_get_id_from_rectangle(self: Any, r_abs: Any) -> Any: ...
def imgui_window_get_id_int(self: Any, n: int) -> Any: ...
def imgui_window_get_id_ptr(self: Any, ptr: Any) -> Any: ...
def imgui_window_get_id_str(self: Any, str_: str, str_end: str) -> Any: ...
def imgui_window_imgui_window(context: Any, name: str) -> Any: ...
def imgui_window_menu_bar_height(self: Any) -> float: ...
def imgui_window_menu_bar_rect(pOut: Any, self: Any) -> None: ...
def imgui_window_rect(pOut: Any, self: Any) -> None: ...
def imgui_window_settings_destroy(self: Any) -> None: ...
def imgui_window_settings_get_name(self: Any) -> str: ...
def imgui_window_settings_imgui_window_settings() -> Any: ...
def imgui_window_title_bar_height(self: Any) -> float: ...
def imgui_window_title_bar_rect(pOut: Any, self: Any) -> None: ...
def indent(indent_w: float) -> None: ...
def initialize() -> None: ...
def input_double(label: str, v: Any, step: float, step_fast: float, format_: str, flags: int) -> bool: ...
def input_float(label: str, v: Any, step: float, step_fast: float, format_: str, flags: int) -> bool: ...
def input_float2(label: str, v: float, format_: str, flags: int) -> bool: ...
def input_float3(label: str, v: float, format_: str, flags: int) -> bool: ...
def input_float4(label: str, v: float, format_: str, flags: int) -> bool: ...
def input_int(label: str, v: Any, step: int, step_fast: int, flags: int) -> bool: ...
def input_int2(label: str, v: int, flags: int) -> bool: ...
def input_int3(label: str, v: int, flags: int) -> bool: ...
def input_int4(label: str, v: int, flags: int) -> bool: ...
def input_scalar(label: str, data_type: int, p_data: Any, p_step: Any, p_step_fast: Any, format_: str, flags: int) -> bool: ...
def input_scalarn(label: str, data_type: int, p_data: Any, components: int, p_step: Any, p_step_fast: Any, format_: str, flags: int) -> bool: ...
def input_text(label: str, buf: str, buf_size: Any, flags: int, callback: Any, user_data: Any) -> bool: ...
def input_text_ex(label: str, hint: str, buf: str, buf_size: int, size_arg: Any, flags: int, callback: Any, user_data: Any) -> bool: ...
def input_text_multiline(label: str, buf: str, buf_size: Any, size: Any, flags: int, callback: Any, user_data: Any) -> bool: ...
def input_text_with_hint(label: str, hint: str, buf: str, buf_size: Any, flags: int, callback: Any, user_data: Any) -> bool: ...
def invisible_button(str_id: str, size: Any, flags: int) -> bool: ...
def is_active_id_using_nav_dir(dir_: int) -> bool: ...
def is_alias_key(key: int) -> bool: ...
def is_any_item_active() -> bool: ...
def is_any_item_focused() -> bool: ...
def is_any_item_hovered() -> bool: ...
def is_any_mouse_down() -> bool: ...
def is_clipped_ex(bb: Any, id_: Any) -> bool: ...
def is_drag_drop_active() -> bool: ...
def is_drag_drop_payload_being_accepted() -> bool: ...
def is_gamepad_key(key: int) -> bool: ...
def is_item_activated() -> bool: ...
def is_item_active() -> bool: ...
def is_item_clicked(mouse_button: int) -> bool: ...
def is_item_deactivated() -> bool: ...
def is_item_deactivated_after_edit() -> bool: ...
def is_item_edited() -> bool: ...
def is_item_focused() -> bool: ...
def is_item_hovered(flags: int) -> bool: ...
def is_item_toggled_open() -> bool: ...
def is_item_toggled_selection() -> bool: ...
def is_item_visible() -> bool: ...
def is_key_down_id(key: int, owner_id: Any) -> bool: ...
def is_key_down_nil(key: int) -> bool: ...
def is_key_pressed_bool(key: int, repeat: bool) -> bool: ...
def is_key_pressed_id(key: int, owner_id: Any, flags: int) -> bool: ...
def is_key_pressed_map(key: int, repeat: bool) -> bool: ...
def is_key_released_id(key: int, owner_id: Any) -> bool: ...
def is_key_released_nil(key: int) -> bool: ...
def is_keyboard_key(key: int) -> bool: ...
def is_legacy_key(key: int) -> bool: ...
def is_mouse_clicked_bool(button: int, repeat: bool) -> bool: ...
def is_mouse_clicked_id(button: int, owner_id: Any, flags: int) -> bool: ...
def is_mouse_double_clicked(button: int) -> bool: ...
def is_mouse_down_id(button: int, owner_id: Any) -> bool: ...
def is_mouse_down_nil(button: int) -> bool: ...
def is_mouse_drag_past_threshold(button: int, lock_threshold: float) -> bool: ...
def is_mouse_dragging(button: int, lock_threshold: float) -> bool: ...
def is_mouse_hovering_rect(r_min: Any, r_max: Any, clip: bool) -> bool: ...
def is_mouse_key(key: int) -> bool: ...
def is_mouse_pos_valid(mouse_pos: Any) -> bool: ...
def is_mouse_released_id(button: int, owner_id: Any) -> bool: ...
def is_mouse_released_nil(button: int) -> bool: ...
def is_named_key(key: int) -> bool: ...
def is_named_key_or_mod_key(key: int) -> bool: ...
def is_popup_open_id(id_: Any, popup_flags: int) -> bool: ...
def is_popup_open_str(str_id: str, flags: int) -> bool: ...
def is_rect_visible_nil(size: Any) -> bool: ...
def is_rect_visible_vec2(rect_min: Any, rect_max: Any) -> bool: ...
def is_window_above(potential_above: Any, potential_below: Any) -> bool: ...
def is_window_appearing() -> bool: ...
def is_window_child_of(window: Any, potential_parent: Any, popup_hierarchy: bool, dock_hierarchy: bool) -> bool: ...
def is_window_collapsed() -> bool: ...
def is_window_docked() -> bool: ...
def is_window_focused(flags: int) -> bool: ...
def is_window_hovered(flags: int) -> bool: ...
def is_window_nav_focusable(window: Any) -> bool: ...
def is_window_within_begin_stack_of(window: Any, potential_parent: Any) -> bool: ...
def item_add(bb: Any, id_: Any, nav_bb: Any, extra_flags: int) -> bool: ...
def item_hoverable(bb: Any, id_: Any) -> bool: ...
def item_size_rect(bb: Any, text_baseline_y: float) -> None: ...
def item_size_vec2(size: Any, text_baseline_y: float) -> None: ...
def keep_alive_id(id_: Any) -> None: ...
def label_text(label: str, fmt: str) -> None: ...
def label_textv(label: str, fmt: str, args: str) -> None: ...
def list_box_fn_bool_ptr(label: str, current_item: Any, items_getter: Callable, data: Any, items_count: int, height_in_items: int) -> bool: ...
def list_box_str_arr(label: str, current_item: Any, items: str, items_count: int, height_in_items: int) -> bool: ...
def load_ini_settings_from_disk(ini_filename: str) -> None: ...
def load_ini_settings_from_memory(ini_data: str, ini_size: Any) -> None: ...
def localize_get_msg(key: int) -> str: ...
def localize_register_entries(entries: Any, count: int) -> None: ...
def log_begin(type_: int, auto_open_depth: int) -> None: ...
def log_buttons() -> None: ...
def log_finish() -> None: ...
def log_rendered_text(ref_pos: Any, text: str, text_end: str) -> None: ...
def log_set_next_text_decoration(prefix: str, suffix: str) -> None: ...
def log_text(fmt: str) -> None: ...
def log_textv(fmt: str, args: str) -> None: ...
def log_to_buffer(auto_open_depth: int) -> None: ...
def log_to_clipboard(auto_open_depth: int) -> None: ...
def log_to_file(auto_open_depth: int, filename: str) -> None: ...
def log_to_tty(auto_open_depth: int) -> None: ...
def mark_ini_settings_dirty_nil() -> None: ...
def mark_ini_settings_dirty_window_ptr(window: Any) -> None: ...
def mark_item_edited(id_: Any) -> None: ...
def mem_alloc(size: Any) -> Any: ...
def mem_free(ptr: Any) -> None: ...
def menu_item_bool(label: str, shortcut: str, selected: bool, enabled: bool) -> bool: ...
def menu_item_bool_ptr(label: str, shortcut: str, p_selected: Any, enabled: bool) -> bool: ...
def menu_item_ex(label: str, icon: str, shortcut: str, selected: bool, enabled: bool) -> bool: ...
def mouse_button_to_key(button: int) -> int: ...
def nav_init_request_apply_result() -> None: ...
def nav_init_window(window: Any, force_reinit: bool) -> None: ...
def nav_move_request_apply_result() -> None: ...
def nav_move_request_but_no_result_yet() -> bool: ...
def nav_move_request_cancel() -> None: ...
def nav_move_request_forward(move_dir: int, clip_dir: int, move_flags: int, scroll_flags: int) -> None: ...
def nav_move_request_resolve_with_last_item(result: Any) -> None: ...
def nav_move_request_submit(move_dir: int, clip_dir: int, move_flags: int, scroll_flags: int) -> None: ...
def nav_move_request_try_wrapping(window: Any, move_flags: int) -> None: ...
def new_frame() -> None: ...
def new_line() -> None: ...
def next_column() -> None: ...
def open_popup_ex(id_: Any, popup_flags: int) -> None: ...
def open_popup_id(id_: Any, popup_flags: int) -> None: ...
def open_popup_on_item_click(str_id: str, popup_flags: int) -> None: ...
def open_popup_str(str_id: str, popup_flags: int) -> None: ...
def plot_ex(plot_type: int, label: str, values_getter: Callable, data: Any, values_count: int, values_offset: int, overlay_text: str, scale_min: float, scale_max: float, size_arg: Any) -> int: ...
def plot_histogram_float_ptr(label: str, values: Any, values_count: int, values_offset: int, overlay_text: str, scale_min: float, scale_max: float, graph_size: Any, stride: int) -> None: ...
def plot_histogram_fn_float_ptr(label: str, values_getter: Callable, data: Any, values_count: int, values_offset: int, overlay_text: str, scale_min: float, scale_max: float, graph_size: Any) -> None: ...
def plot_lines_float_ptr(label: str, values: Any, values_count: int, values_offset: int, overlay_text: str, scale_min: float, scale_max: float, graph_size: Any, stride: int) -> None: ...
def plot_lines_fn_float_ptr(label: str, values_getter: Callable, data: Any, values_count: int, values_offset: int, overlay_text: str, scale_min: float, scale_max: float, graph_size: Any) -> None: ...
def pop_allow_keyboard_focus() -> None: ...
def pop_button_repeat() -> None: ...
def pop_clip_rect() -> None: ...
def pop_columns_background() -> None: ...
def pop_focus_scope() -> None: ...
def pop_font() -> None: ...
def pop_id() -> None: ...
def pop_item_flag() -> None: ...
def pop_item_width() -> None: ...
def pop_style_color(count: int) -> None: ...
def pop_style_var(count: int) -> None: ...
def pop_text_wrap_pos() -> None: ...
def progress_bar(fraction: float, size_arg: Any, overlay: str) -> None: ...
def push_allow_keyboard_focus(allow_keyboard_focus: bool) -> None: ...
def push_button_repeat(repeat: bool) -> None: ...
def push_clip_rect(clip_rect_min: Any, clip_rect_max: Any, intersect_with_current_clip_rect: bool) -> None: ...
def push_column_clip_rect(column_index: int) -> None: ...
def push_columns_background() -> None: ...
def push_focus_scope(id_: Any) -> None: ...
def push_font(font: Any) -> None: ...
def push_id_int(int_id: int) -> None: ...
def push_id_ptr(ptr_id: Any) -> None: ...
def push_id_str(str_id: str) -> None: ...
def push_id_str_str(str_id_begin: str, str_id_end: str) -> None: ...
def push_item_flag(option: int, enabled: bool) -> None: ...
def push_item_width(item_width: float) -> None: ...
def push_multi_items_widths(components: int, width_full: float) -> None: ...
def push_override_id(id_: Any) -> None: ...
def push_style_color_u32(idx: int, col: Any) -> None: ...
def push_style_color_vec4(idx: int, col: Any) -> None: ...
def push_style_var_float(idx: int, val: float) -> None: ...
def push_style_var_vec2(idx: int, val: Any) -> None: ...
def push_text_wrap_pos(wrap_local_pos_x: float) -> None: ...
def radio_button_bool(label: str, active: bool) -> bool: ...
def radio_button_int_ptr(label: str, v: Any, v_button: int) -> bool: ...
def remove_context_hook(context: Any, hook_to_remove: Any) -> None: ...
def remove_settings_handler(type_name: str) -> None: ...
def render() -> None: ...
def render_arrow(draw_list: Any, pos: Any, col: Any, dir_: int, scale: float) -> None: ...
def render_arrow_dock_menu(draw_list: Any, p_min: Any, sz: float, col: Any) -> None: ...
def render_arrow_pointing_at(draw_list: Any, pos: Any, half_sz: Any, direction: int, col: Any) -> None: ...
def render_bullet(draw_list: Any, pos: Any, col: Any) -> None: ...
def render_check_mark(draw_list: Any, pos: Any, col: Any, sz: float) -> None: ...
def render_color_rect_with_alpha_checkerboard(draw_list: Any, p_min: Any, p_max: Any, fill_col: Any, grid_step: float, grid_off: Any, rounding: float, flags: int) -> None: ...
def render_drag_drop_target_rect(bb: Any) -> None: ...
def render_frame(p_min: Any, p_max: Any, fill_col: Any, border: bool, rounding: float) -> None: ...
def render_frame_border(p_min: Any, p_max: Any, rounding: float) -> None: ...
def render_mouse_cursor(pos: Any, scale: float, mouse_cursor: int, col_fill: Any, col_border: Any, col_shadow: Any) -> None: ...
def render_nav_highlight(bb: Any, id_: Any, flags: int) -> None: ...
def render_platform_windows_default(platform_render_arg: Any, renderer_render_arg: Any) -> None: ...
def render_rect_filled_rangeh(draw_list: Any, rect: Any, col: Any, x_start_norm: float, x_end_norm: float, rounding: float) -> None: ...
def render_rect_filled_with_hole(draw_list: Any, outer: Any, inner: Any, col: Any, rounding: float) -> None: ...
def render_text(pos: Any, text: str, text_end: str, hide_text_after_hash: bool) -> None: ...
def render_text_clipped(pos_min: Any, pos_max: Any, text: str, text_end: str, text_size_if_known: Any, align: Any, clip_rect: Any) -> None: ...
def render_text_clipped_ex(draw_list: Any, pos_min: Any, pos_max: Any, text: str, text_end: str, text_size_if_known: Any, align: Any, clip_rect: Any) -> None: ...
def render_text_ellipsis(draw_list: Any, pos_min: Any, pos_max: Any, clip_max_x: float, ellipsis_max_x: float, text: str, text_end: str, text_size_if_known: Any) -> None: ...
def render_text_wrapped(pos: Any, text: str, text_end: str, wrap_width: float) -> None: ...
def reset_mouse_drag_delta(button: int) -> None: ...
def same_line(offset_from_start_x: float, spacing: float) -> None: ...
def save_ini_settings_to_disk(ini_filename: str) -> None: ...
def save_ini_settings_to_memory(out_ini_size: Any) -> str: ...
def scale_windows_in_viewport(viewport: Any, scale: float) -> None: ...
def scroll_to_bring_rect_into_view(window: Any, rect: Any) -> None: ...
def scroll_to_item(flags: int) -> None: ...
def scroll_to_rect(window: Any, rect: Any, flags: int) -> None: ...
def scroll_to_rect_ex(pOut: Any, window: Any, rect: Any, flags: int) -> None: ...
def scrollbar(axis: int) -> None: ...
def scrollbar_ex(bb: Any, id_: Any, axis: int, p_scroll_v: Any, avail_v: Any, contents_v: Any, flags: int) -> bool: ...
def selectable_bool(label: str, selected: bool, flags: int, size: Any) -> bool: ...
def selectable_bool_ptr(label: str, p_selected: Any, flags: int, size: Any) -> bool: ...
def separator() -> None: ...
def separator_ex(flags: int) -> None: ...
def separator_text(label: str) -> None: ...
def separator_text_ex(id_: Any, label: str, label_end: str, extra_width: float) -> None: ...
def set_active_id(id_: Any, window: Any) -> None: ...
def set_active_id_using_all_keyboard_keys() -> None: ...
def set_allocator_functions(alloc_func: Any, free_func: Any, user_data: Any) -> None: ...
def set_clipboard_text(text: str) -> None: ...
def set_color_edit_options(flags: int) -> None: ...
def set_column_offset(column_index: int, offset_x: float) -> None: ...
def set_column_width(column_index: int, width: float) -> None: ...
def set_current_context(ctx: Any) -> None: ...
def set_current_font(font: Any) -> None: ...
def set_current_viewport(window: Any, viewport: Any) -> None: ...
def set_cursor_pos(local_pos: Any) -> None: ...
def set_cursor_posx(local_x: float) -> None: ...
def set_cursor_posy(local_y: float) -> None: ...
def set_cursor_screen_pos(pos: Any) -> None: ...
def set_drag_drop_payload(type_: str, data: Any, sz: Any, cond: int) -> bool: ...
def set_focus_id(id_: Any, window: Any) -> None: ...
def set_hovered_id(id_: Any) -> None: ...
def set_item_allow_overlap() -> None: ...
def set_item_default_focus() -> None: ...
def set_item_key_owner(key: int, flags: int) -> None: ...
def set_key_owner(key: int, owner_id: Any, flags: int) -> None: ...
def set_keyboard_focus_here(offset: int) -> None: ...
def set_last_item_data(item_id: Any, in_flags: int, status_flags: int, item_rect: Any) -> None: ...
def set_mouse_cursor(cursor_type: int) -> None: ...
def set_nav_id(id_: Any, nav_layer: int, focus_scope_id: Any, rect_rel: Any) -> None: ...
def set_nav_window(window: Any) -> None: ...
def set_next_frame_want_capture_keyboard(want_capture_keyboard: bool) -> None: ...
def set_next_frame_want_capture_mouse(want_capture_mouse: bool) -> None: ...
def set_next_item_open(is_open: bool, cond: int) -> None: ...
def set_next_item_width(item_width: float) -> None: ...
def set_next_window_bg_alpha(alpha: float) -> None: ...
def set_next_window_class(window_class: Any) -> None: ...
def set_next_window_collapsed(collapsed: bool, cond: int) -> None: ...
def set_next_window_content_size(size: Any) -> None: ...
def set_next_window_dock_id(dock_id: Any, cond: int) -> None: ...
def set_next_window_focus() -> None: ...
def set_next_window_pos(pos: Any, cond: int, pivot: Any) -> None: ...
def set_next_window_scroll(scroll: Any) -> None: ...
def set_next_window_size(size: Any, cond: int) -> None: ...
def set_next_window_size_constraints(size_min: Any, size_max: Any, custom_callback: Any, custom_callback_data: Any) -> None: ...
def set_next_window_viewport(viewport_id: Any) -> None: ...
def set_scroll_from_pos_x_float(local_x: float, center_x_ratio: float) -> None: ...
def set_scroll_from_pos_x_window_ptr(window: Any, local_x: float, center_x_ratio: float) -> None: ...
def set_scroll_from_pos_y_float(local_y: float, center_y_ratio: float) -> None: ...
def set_scroll_from_pos_y_window_ptr(window: Any, local_y: float, center_y_ratio: float) -> None: ...
def set_scroll_herex(center_x_ratio: float) -> None: ...
def set_scroll_herey(center_y_ratio: float) -> None: ...
def set_scroll_x_float(scroll_x: float) -> None: ...
def set_scroll_x_window_ptr(window: Any, scroll_x: float) -> None: ...
def set_scroll_y_float(scroll_y: float) -> None: ...
def set_scroll_y_window_ptr(window: Any, scroll_y: float) -> None: ...
def set_shortcut_routing(key_chord: int, owner_id: Any, flags: int) -> bool: ...
def set_state_storage(storage: Any) -> None: ...
def set_tab_item_closed(tab_or_docked_window_label: str) -> None: ...
def set_tooltip(fmt: str) -> None: ...
def set_tooltipv(fmt: str, args: str) -> None: ...
def set_window_clip_rect_before_set_channel(window: Any, clip_rect: Any) -> None: ...
def set_window_collapsed_bool(collapsed: bool, cond: int) -> None: ...
def set_window_collapsed_str(name: str, collapsed: bool, cond: int) -> None: ...
def set_window_collapsed_window_ptr(window: Any, collapsed: bool, cond: int) -> None: ...
def set_window_dock(window: Any, dock_id: Any, cond: int) -> None: ...
def set_window_focus_nil() -> None: ...
def set_window_focus_str(name: str) -> None: ...
def set_window_font_scale(scale: float) -> None: ...
def set_window_hit_test_hole(window: Any, pos: Any, size: Any) -> None: ...
def set_window_pos_str(name: str, pos: Any, cond: int) -> None: ...
def set_window_pos_vec2(pos: Any, cond: int) -> None: ...
def set_window_pos_window_ptr(window: Any, pos: Any, cond: int) -> None: ...
def set_window_size_str(name: str, size: Any, cond: int) -> None: ...
def set_window_size_vec2(size: Any, cond: int) -> None: ...
def set_window_size_window_ptr(window: Any, size: Any, cond: int) -> None: ...
def set_window_viewport(window: Any, viewport: Any) -> None: ...
def shade_verts_linear_color_gradient_keep_alpha(draw_list: Any, vert_start_idx: int, vert_end_idx: int, gradient_p0: Any, gradient_p1: Any, col0: Any, col1: Any) -> None: ...
def shade_verts_linear_uv(draw_list: Any, vert_start_idx: int, vert_end_idx: int, a: Any, b: Any, uv_a: Any, uv_b: Any, clamp: bool) -> None: ...
def shortcut(key_chord: int, owner_id: Any, flags: int) -> bool: ...
def show_about_window(p_open: Any) -> None: ...
def show_debug_log_window(p_open: Any) -> None: ...
def show_demo_window(p_open: Any) -> None: ...
def show_font_atlas(atlas: Any) -> None: ...
def show_font_selector(label: str) -> None: ...
def show_metrics_window(p_open: Any) -> None: ...
def show_stack_tool_window(p_open: Any) -> None: ...
def show_style_editor(ref: Any) -> None: ...
def show_style_selector(label: str) -> bool: ...
def show_user_guide() -> None: ...
def shrink_widths(items: Any, count: int, width_excess: float) -> None: ...
def shutdown() -> None: ...
def slider_angle(label: str, v_rad: Any, v_degrees_min: float, v_degrees_max: float, format_: str, flags: int) -> bool: ...
def slider_behavior(bb: Any, id_: Any, data_type: int, p_v: Any, p_min: Any, p_max: Any, format_: str, flags: int, out_grab_bb: Any) -> bool: ...
def slider_float(label: str, v: Any, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def slider_float2(label: str, v: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def slider_float3(label: str, v: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def slider_float4(label: str, v: float, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def slider_int(label: str, v: Any, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def slider_int2(label: str, v: int, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def slider_int3(label: str, v: int, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def slider_int4(label: str, v: int, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def slider_scalar(label: str, data_type: int, p_data: Any, p_min: Any, p_max: Any, format_: str, flags: int) -> bool: ...
def slider_scalarn(label: str, data_type: int, p_data: Any, components: int, p_min: Any, p_max: Any, format_: str, flags: int) -> bool: ...
def small_button(label: str) -> bool: ...
def spacing() -> None: ...
def splitter_behavior(bb: Any, id_: Any, axis: int, size1: Any, size2: Any, min_size1: float, min_size2: float, hover_extend: float, hover_visibility_delay: float, bg_col: Any) -> bool: ...
def start_mouse_moving_window(window: Any) -> None: ...
def start_mouse_moving_window_or_node(window: Any, node: Any, undock_floating_node: bool) -> None: ...
def style_colors_classic(dst: Any) -> None: ...
def style_colors_dark(dst: Any) -> None: ...
def style_colors_light(dst: Any) -> None: ...
def tab_bar_add_tab(tab_bar: Any, tab_flags: int, window: Any) -> None: ...
def tab_bar_close_tab(tab_bar: Any, tab: Any) -> None: ...
def tab_bar_find_most_recently_selected_tab_for_active_window(tab_bar: Any) -> Any: ...
def tab_bar_find_tab_by_id(tab_bar: Any, tab_id: Any) -> Any: ...
def tab_bar_find_tab_by_order(tab_bar: Any, order: int) -> Any: ...
def tab_bar_get_current_tab(tab_bar: Any) -> Any: ...
def tab_bar_get_tab_name(tab_bar: Any, tab: Any) -> str: ...
def tab_bar_get_tab_order(tab_bar: Any, tab: Any) -> int: ...
def tab_bar_process_reorder(tab_bar: Any) -> bool: ...
def tab_bar_queue_focus(tab_bar: Any, tab: Any) -> None: ...
def tab_bar_queue_reorder(tab_bar: Any, tab: Any, offset: int) -> None: ...
def tab_bar_queue_reorder_from_mouse_pos(tab_bar: Any, tab: Any, mouse_pos: Any) -> None: ...
def tab_bar_remove_tab(tab_bar: Any, tab_id: Any) -> None: ...
def tab_item_background(draw_list: Any, bb: Any, flags: int, col: Any) -> None: ...
def tab_item_button(label: str, flags: int) -> bool: ...
def tab_item_calc_size_str(pOut: Any, label: str, has_close_button_or_unsaved_marker: bool) -> None: ...
def tab_item_calc_size_window_ptr(pOut: Any, window: Any) -> None: ...
def tab_item_ex(tab_bar: Any, label: str, p_open: Any, flags: int, docked_window: Any) -> bool: ...
def tab_item_label_and_close_button(draw_list: Any, bb: Any, flags: int, frame_padding: Any, label: str, tab_id: Any, close_button_id: Any, is_contents_visible: bool, out_just_closed: Any, out_text_clipped: Any) -> None: ...
def table_begin_apply_requests(table: Any) -> None: ...
def table_begin_cell(table: Any, column_n: int) -> None: ...
def table_begin_context_menu_popup(table: Any) -> bool: ...
def table_begin_init_memory(table: Any, columns_count: int) -> None: ...
def table_begin_row(table: Any) -> None: ...
def table_draw_borders(table: Any) -> None: ...
def table_draw_context_menu(table: Any) -> None: ...
def table_end_cell(table: Any) -> None: ...
def table_end_row(table: Any) -> None: ...
def table_find_by_id(id_: Any) -> Any: ...
def table_fix_column_sort_direction(table: Any, column: Any) -> None: ...
def table_gc_compact_settings() -> None: ...
def table_gc_compact_transient_buffers_table_ptr(table: Any) -> None: ...
def table_gc_compact_transient_buffers_table_temp_data_ptr(table: Any) -> None: ...
def table_get_bound_settings(table: Any) -> Any: ...
def table_get_cell_bg_rect(pOut: Any, table: Any, column_n: int) -> None: ...
def table_get_column_count() -> int: ...
def table_get_column_flags(column_n: int) -> int: ...
def table_get_column_index() -> int: ...
def table_get_column_name_int(column_n: int) -> str: ...
def table_get_column_name_table_ptr(table: Any, column_n: int) -> str: ...
def table_get_column_next_sort_direction(column: Any) -> int: ...
def table_get_column_resize_id(table: Any, column_n: int, instance_no: int) -> Any: ...
def table_get_column_width_auto(table: Any, column: Any) -> float: ...
def table_get_header_row_height() -> float: ...
def table_get_hovered_column() -> int: ...
def table_get_instance_data(table: Any, instance_no: int) -> Any: ...
def table_get_instance_id(table: Any, instance_no: int) -> Any: ...
def table_get_max_column_width(table: Any, column_n: int) -> float: ...
def table_get_row_index() -> int: ...
def table_get_sort_specs() -> Any: ...
def table_header(label: str) -> None: ...
def table_headers_row() -> None: ...
def table_load_settings(table: Any) -> None: ...
def table_merge_draw_channels(table: Any) -> None: ...
def table_next_column() -> bool: ...
def table_next_row(row_flags: int, min_row_height: float) -> None: ...
def table_open_context_menu(column_n: int) -> None: ...
def table_pop_background_channel() -> None: ...
def table_push_background_channel() -> None: ...
def table_remove(table: Any) -> None: ...
def table_reset_settings(table: Any) -> None: ...
def table_save_settings(table: Any) -> None: ...
def table_set_bg_color(target: int, color: Any, column_n: int) -> None: ...
def table_set_column_enabled(column_n: int, v: bool) -> None: ...
def table_set_column_index(column_n: int) -> bool: ...
def table_set_column_sort_direction(column_n: int, sort_direction: int, append_to_sort_specs: bool) -> None: ...
def table_set_column_width(column_n: int, width: float) -> None: ...
def table_set_column_width_auto_all(table: Any) -> None: ...
def table_set_column_width_auto_single(table: Any, column_n: int) -> None: ...
def table_settings_add_settings_handler() -> None: ...
def table_settings_create(id_: Any, columns_count: int) -> Any: ...
def table_settings_find_by_id(id_: Any) -> Any: ...
def table_setup_column(label: str, flags: int, init_width_or_weight: float, user_id: Any) -> None: ...
def table_setup_draw_channels(table: Any) -> None: ...
def table_setup_scroll_freeze(cols: int, rows: int) -> None: ...
def table_sort_specs_build(table: Any) -> None: ...
def table_sort_specs_sanitize(table: Any) -> None: ...
def table_update_borders(table: Any) -> None: ...
def table_update_columns_weight_from_width(table: Any) -> None: ...
def table_update_layout(table: Any) -> None: ...
def temp_input_is_active(id_: Any) -> bool: ...
def temp_input_scalar(bb: Any, id_: Any, label: str, data_type: int, p_data: Any, format_: str, p_clamp_min: Any, p_clamp_max: Any) -> bool: ...
def temp_input_text(bb: Any, id_: Any, label: str, buf: str, buf_size: int, flags: int) -> bool: ...
def test_key_owner(key: int, owner_id: Any) -> bool: ...
def test_shortcut_routing(key_chord: int, owner_id: Any) -> bool: ...
def text(fmt: str) -> None: ...
def text_colored(col: Any, fmt: str) -> None: ...
def text_coloredv(col: Any, fmt: str, args: str) -> None: ...
def text_disabled(fmt: str) -> None: ...
def text_disabledv(fmt: str, args: str) -> None: ...
def text_ex(text: str, text_end: str, flags: int) -> None: ...
def text_unformatted(text: str, text_end: str) -> None: ...
def text_wrapped(fmt: str) -> None: ...
def text_wrappedv(fmt: str, args: str) -> None: ...
def textv(fmt: str, args: str) -> None: ...
def translate_windows_in_viewport(viewport: Any, old_pos: Any, new_pos: Any) -> None: ...
def tree_node_behavior(id_: Any, flags: int, label: str, label_end: str) -> bool: ...
def tree_node_ex_ptr(ptr_id: Any, flags: int, fmt: str) -> bool: ...
def tree_node_ex_str(label: str, flags: int) -> bool: ...
def tree_node_ex_str_str(str_id: str, flags: int, fmt: str) -> bool: ...
def tree_node_ex_v_ptr(ptr_id: Any, flags: int, fmt: str, args: str) -> bool: ...
def tree_node_ex_v_str(str_id: str, flags: int, fmt: str, args: str) -> bool: ...
def tree_node_ptr(ptr_id: Any, fmt: str) -> bool: ...
def tree_node_set_open(id_: Any, open_: bool) -> None: ...
def tree_node_str(label: str) -> bool: ...
def tree_node_str_str(str_id: str, fmt: str) -> bool: ...
def tree_node_update_next_open(id_: Any, flags: int) -> bool: ...
def tree_node_v_ptr(ptr_id: Any, fmt: str, args: str) -> bool: ...
def tree_node_v_str(str_id: str, fmt: str, args: str) -> bool: ...
def tree_pop() -> None: ...
def tree_push_override_id(id_: Any) -> None: ...
def tree_push_ptr(ptr_id: Any) -> None: ...
def tree_push_str(str_id: str) -> None: ...
def unindent(indent_w: float) -> None: ...
def update_hovered_window_and_capture_flags() -> None: ...
def update_input_events(trickle_fast_inputs: bool) -> None: ...
def update_mouse_moving_window_end_frame() -> None: ...
def update_mouse_moving_window_new_frame() -> None: ...
def update_platform_windows() -> None: ...
def update_window_parent_and_root_links(window: Any, flags: int, parent_window: Any) -> None: ...
def v_slider_float(label: str, size: Any, v: Any, v_min: float, v_max: float, format_: str, flags: int) -> bool: ...
def v_slider_int(label: str, size: Any, v: Any, v_min: int, v_max: int, format_: str, flags: int) -> bool: ...
def v_slider_scalar(label: str, size: Any, data_type: int, p_data: Any, p_min: Any, p_max: Any, format_: str, flags: int) -> bool: ...
def value_bool(prefix: str, b: bool) -> None: ...
def value_float(prefix: str, v: float, float_format: str) -> None: ...
def value_int(prefix: str, v: int) -> None: ...
def value_uint(prefix: str, v: Any) -> None: ...
def window_rect_abs_to_rel(pOut: Any, window: Any, r: Any) -> None: ...
def window_rect_rel_to_abs(pOut: Any, window: Any, r: Any) -> None: ...
